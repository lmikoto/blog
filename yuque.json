[
  {
    "id": 13902992,
    "slug": "rdk29e",
    "title": "JDBC问题分析及解决思路",
    "book_id": 1840429,
    "book": {
      "id": 1840429,
      "type": "Book",
      "slug": "lmikoto",
      "name": "笔记",
      "user_id": 328252,
      "description": "",
      "creator_id": 328252,
      "public": 0,
      "items_count": 3,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2020-09-29T13:54:09.707Z",
      "updated_at": "2020-09-29T13:54:09.000Z",
      "created_at": "2020-09-29T12:57:45.000Z",
      "namespace": "lmikoto/lmikoto",
      "user": {
        "id": 328252,
        "type": "User",
        "login": "lmikoto",
        "name": "lmikoto",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/328252/1578028416108-avatar/38f12fe6-da0d-471e-819c-7131fadbd750.png",
        "books_count": 1,
        "public_books_count": 0,
        "followers_count": 0,
        "following_count": 0,
        "created_at": "2019-04-25T04:31:29.000Z",
        "updated_at": "2020-09-29T12:57:45.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 328252,
    "creator": {
      "id": 328252,
      "type": "User",
      "login": "lmikoto",
      "name": "lmikoto",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/328252/1578028416108-avatar/38f12fe6-da0d-471e-819c-7131fadbd750.png",
      "books_count": 1,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2019-04-25T04:31:29.000Z",
      "updated_at": "2020-09-29T12:57:45.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "```java\n// 加载数据库驱动\nClass.forName(\"com.mysql.jdbc.Driver\");\n// 通过驱动管理类获取数据库链接\nconnection = DriverManager.getConnection(\"jdbc:mysql://localhost:3306/mybatis? characterEncoding=utf-8\", \"root\", \"root\");\n```\n问题\n\n- 数据库配置信息存在硬编码问题，如果需要改动需要修改代码，重新打包部署\n- 频繁的去创建和释放数据库链接，浪费资源\n\n解决思路\n\n- 可以采用配置文件解决硬编码的问题。\n- 采用连接池解决拼房创建数据库连接的问题\n```java\n// 定义sql语句?表示占位符\nString sql = \"select * from user where username = ?\";\n// 获取预处理statement\npreparedStatement = connection.prepareStatement(sql);\n// 设置参数，第一个参数为sql语句中参数的序号(从1开始)，第二个参数为设置的参数值\npreparedStatement.setString(1, \"tom\");\n// 向数据库发出sql执行查询，查询出结果集\nresultSet = preparedStatement.executeQuery();\n```\n问题\n\n- `sql`语句，设置参数存在硬编码\n\n解决思路\n\n- 配置文件解决，把`sql`封装到配置文件中\n```java\nwhile (resultSet.next()) {\n\tint id = resultSet.getInt(\"id\");\n\tString username = resultSet.getString(\"username\");\n\tuser.setId(id);\n\tuser.setUsername(username); \n}\n```\n问题\n\n- 硬编码，需要手动封装返回结果集，如果这里有很多字段会非常繁琐。\n\n解决思路\n\n- 反射、内省等技术，实现自动映射\n",
    "body_draft": "```java\n// 加载数据库驱动\nClass.forName(\"com.mysql.jdbc.Driver\");\n// 通过驱动管理类获取数据库链接\nconnection = DriverManager.getConnection(\"jdbc:mysql://localhost:3306/mybatis? characterEncoding=utf-8\", \"root\", \"root\");\n```\n问题\n\n- 数据库配置信息存在硬编码问题，如果需要改动需要修改代码，重新打包部署\n- 频繁的去创建和释放数据库链接，浪费资源\n\n解决思路\n\n- 可以采用配置文件解决硬编码的问题。\n- 采用连接池解决拼房创建数据库连接的问题\n```java\n// 定义sql语句?表示占位符\nString sql = \"select * from user where username = ?\";\n// 获取预处理statement\npreparedStatement = connection.prepareStatement(sql);\n// 设置参数，第一个参数为sql语句中参数的序号(从1开始)，第二个参数为设置的参数值\npreparedStatement.setString(1, \"tom\");\n// 向数据库发出sql执行查询，查询出结果集\nresultSet = preparedStatement.executeQuery();\n```\n问题\n\n- `sql`语句，设置参数存在硬编码\n\n解决思路\n\n- 配置文件解决，把`sql`封装到配置文件中\n```java\nwhile (resultSet.next()) {\n\tint id = resultSet.getInt(\"id\");\n\tString username = resultSet.getString(\"username\");\n\tuser.setId(id);\n\tuser.setUsername(username); \n}\n```\n问题\n\n- 硬编码，需要手动封装返回结果集，如果这里有很多字段会非常繁琐。\n\n解决思路\n\n- 反射、内省等技术，实现自动映射\n",
    "body_html": "<!doctype html><div class=\"lake-content-editor-core lake-engine lake-typography-classic\" data-lake-element=\"root\" data-selection-undefined=\"%7B%22path%22%3A%5B%5B14%2C0%2C0%2C7%5D%2C%5B14%2C0%2C0%2C7%5D%5D%2C%22active%22%3Atrue%7D\"><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"v3m3l\" data-language=\"java\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// 加载数据库驱动</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Class</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">forName</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"com.mysql.jdbc.Driver\"</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// 通过驱动管理类获取数据库链接</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">connection</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">DriverManager</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getConnection</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"jdbc:mysql://localhost:3306/mybatis? characterEncoding=utf-8\"</span>, <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"root\"</span>, <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"root\"</span>);</span></span></pre></div></div></div><p data-lake-id=\"216ca41d69d0de9f1fbe05ef3bd3a0e0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">问题</p><ul data-lake-id=\"fae1ab125b8ada2ed7f4a3b3ae8aee7f\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"f11ade8555d76994f79092622dab8552\">数据库配置信息存在硬编码问题，如果需要改动需要修改代码，重新打包部署</li><li data-lake-id=\"f9021cd5b750d916ff3d6b9f1ef294e4\">频繁的去创建和释放数据库链接，浪费资源</li></ul><p data-lake-id=\"17e917a5f1ffc2362565a723f090b372\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">解决思路</p><ul data-lake-id=\"5c6a000bd00344271850dfaa63925829\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"ed60697e2a902061b7677f1e068b63d3\">可以采用配置文件解决硬编码的问题。</li><li data-lake-id=\"ff38e8821e5b8b138b268e669215c0af\">采用连接池解决拼房创建数据库连接的问题</li></ul><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"BBl7M\" data-language=\"java\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// 定义sql语句?表示占位符</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">String</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">sql</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"select * from user where username = ?\"</span>;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// 获取预处理statement</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">preparedStatement</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">connection</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">prepareStatement</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">sql</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// 设置参数，第一个参数为sql语句中参数的序号(从1开始)，第二个参数为设置的参数值</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">preparedStatement</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">setString</span>(<span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">1</span>, <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"tom\"</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// 向数据库发出sql执行查询，查询出结果集</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">resultSet</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">preparedStatement</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">executeQuery</span>();</span></span></pre></div></div></div><p data-lake-id=\"e4685da85c2c11a84c5db8dec83b7888\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">问题</p><ul data-lake-id=\"5f5c68833177df843849f58ddaffb930\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"03a9fc694f734ff34c3f0e6de9ab6b06\">​<code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">sql</code>​语句，设置参数存在硬编码</li></ul><p data-lake-id=\"8819cc77cfe5e750c1c671ac6be66048\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">解决思路</p><ul data-lake-id=\"a4116b22d72f26e1b366498ac87aafd6\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"31c0d5814b72cbcb31c5843b85177741\">配置文件解决，把​<code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">sql</code>​封装到配置文件中</li></ul><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"BEEcd\" data-language=\"java\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">while</span> (<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">resultSet</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">next</span>()) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">int</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">id</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">resultSet</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getInt</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"id\"</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">String</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">username</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">resultSet</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getString</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"username\"</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">user</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">setId</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">id</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">user</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">setUsername</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">username</span>); \n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div><p data-lake-id=\"96a5f47f26d98ae580592272c1f7feb2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">问题</p><ul data-lake-id=\"4c91645577015b00cc2279c7c63d0a2b\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"b763bb4b75bf9c77d62ffe98e73008d9\">硬编码，需要手动封装返回结果集，如果这里有很多字段会非常繁琐。</li></ul><p data-lake-id=\"2d370e7d81db306c517e74e73ae2ad16\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">解决思路</p><ul data-lake-id=\"10856c51a29c101227d56a1ec0c1365b\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"f00506555987409b5328b535d8aaa2c0\">反射、内省等技术，实现自动映射</li></ul></div>",
    "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"adapt\" /><meta name=\"typography\" content=\"classic\" /><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22java%22%2C%22code%22%3A%22%2F%2F%20%E5%8A%A0%E8%BD%BD%E6%95%B0%E6%8D%AE%E5%BA%93%E9%A9%B1%E5%8A%A8%5CnClass.forName(%5C%22com.mysql.jdbc.Driver%5C%22)%3B%5Cn%2F%2F%20%E9%80%9A%E8%BF%87%E9%A9%B1%E5%8A%A8%E7%AE%A1%E7%90%86%E7%B1%BB%E8%8E%B7%E5%8F%96%E6%95%B0%E6%8D%AE%E5%BA%93%E9%93%BE%E6%8E%A5%5Cnconnection%20%3D%20DriverManager.getConnection(%5C%22jdbc%3Amysql%3A%2F%2Flocalhost%3A3306%2Fmybatis%3F%20characterEncoding%3Dutf-8%5C%22%2C%20%5C%22root%5C%22%2C%20%5C%22root%5C%22)%3B%22%2C%22id%22%3A%22v3m3l%22%7D\"></card><p data-lake-id=\"216ca41d69d0de9f1fbe05ef3bd3a0e0\">问题</p><ul data-lake-id=\"fae1ab125b8ada2ed7f4a3b3ae8aee7f\"><li data-lake-id=\"f11ade8555d76994f79092622dab8552\">数据库配置信息存在硬编码问题，如果需要改动需要修改代码，重新打包部署</li><li data-lake-id=\"f9021cd5b750d916ff3d6b9f1ef294e4\">频繁的去创建和释放数据库链接，浪费资源</li></ul><p data-lake-id=\"17e917a5f1ffc2362565a723f090b372\">解决思路</p><ul data-lake-id=\"5c6a000bd00344271850dfaa63925829\"><li data-lake-id=\"ed60697e2a902061b7677f1e068b63d3\">可以采用配置文件解决硬编码的问题。</li><li data-lake-id=\"ff38e8821e5b8b138b268e669215c0af\">采用连接池解决拼房创建数据库连接的问题</li></ul><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22java%22%2C%22code%22%3A%22%2F%2F%20%E5%AE%9A%E4%B9%89sql%E8%AF%AD%E5%8F%A5%3F%E8%A1%A8%E7%A4%BA%E5%8D%A0%E4%BD%8D%E7%AC%A6%5CnString%20sql%20%3D%20%5C%22select%20*%20from%20user%20where%20username%20%3D%20%3F%5C%22%3B%5Cn%2F%2F%20%E8%8E%B7%E5%8F%96%E9%A2%84%E5%A4%84%E7%90%86statement%5CnpreparedStatement%20%3D%20connection.prepareStatement(sql)%3B%5Cn%2F%2F%20%E8%AE%BE%E7%BD%AE%E5%8F%82%E6%95%B0%EF%BC%8C%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8F%82%E6%95%B0%E4%B8%BAsql%E8%AF%AD%E5%8F%A5%E4%B8%AD%E5%8F%82%E6%95%B0%E7%9A%84%E5%BA%8F%E5%8F%B7(%E4%BB%8E1%E5%BC%80%E5%A7%8B)%EF%BC%8C%E7%AC%AC%E4%BA%8C%E4%B8%AA%E5%8F%82%E6%95%B0%E4%B8%BA%E8%AE%BE%E7%BD%AE%E7%9A%84%E5%8F%82%E6%95%B0%E5%80%BC%5CnpreparedStatement.setString(1%2C%20%5C%22tom%5C%22)%3B%5Cn%2F%2F%20%E5%90%91%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8F%91%E5%87%BAsql%E6%89%A7%E8%A1%8C%E6%9F%A5%E8%AF%A2%EF%BC%8C%E6%9F%A5%E8%AF%A2%E5%87%BA%E7%BB%93%E6%9E%9C%E9%9B%86%5CnresultSet%20%3D%20preparedStatement.executeQuery()%3B%22%2C%22id%22%3A%22BBl7M%22%7D\"></card><p data-lake-id=\"e4685da85c2c11a84c5db8dec83b7888\">问题</p><ul data-lake-id=\"5f5c68833177df843849f58ddaffb930\"><li data-lake-id=\"03a9fc694f734ff34c3f0e6de9ab6b06\"><code>sql</code>语句，设置参数存在硬编码</li></ul><p data-lake-id=\"8819cc77cfe5e750c1c671ac6be66048\">解决思路</p><ul data-lake-id=\"a4116b22d72f26e1b366498ac87aafd6\"><li data-lake-id=\"31c0d5814b72cbcb31c5843b85177741\">配置文件解决，把<code>sql</code>封装到配置文件中</li></ul><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22java%22%2C%22code%22%3A%22while%20(resultSet.next())%20%7B%5Cn%5Ctint%20id%20%3D%20resultSet.getInt(%5C%22id%5C%22)%3B%5Cn%5CtString%20username%20%3D%20resultSet.getString(%5C%22username%5C%22)%3B%5Cn%5Ctuser.setId(id)%3B%5Cn%5Ctuser.setUsername(username)%3B%20%5Cn%7D%22%2C%22id%22%3A%22BEEcd%22%7D\"></card><p data-lake-id=\"96a5f47f26d98ae580592272c1f7feb2\">问题</p><ul data-lake-id=\"4c91645577015b00cc2279c7c63d0a2b\"><li data-lake-id=\"b763bb4b75bf9c77d62ffe98e73008d9\">硬编码，需要手动封装返回结果集，如果这里有很多字段会非常繁琐。</li></ul><p data-lake-id=\"2d370e7d81db306c517e74e73ae2ad16\">解决思路</p><ul data-lake-id=\"10856c51a29c101227d56a1ec0c1365b\"><li data-lake-id=\"f00506555987409b5328b535d8aaa2c0\">反射、内省等技术，实现自动映射</li></ul>",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"adapt\" /><meta name=\"typography\" content=\"classic\" /><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22java%22%2C%22code%22%3A%22%2F%2F%20%E5%8A%A0%E8%BD%BD%E6%95%B0%E6%8D%AE%E5%BA%93%E9%A9%B1%E5%8A%A8%5CnClass.forName(%5C%22com.mysql.jdbc.Driver%5C%22)%3B%5Cn%2F%2F%20%E9%80%9A%E8%BF%87%E9%A9%B1%E5%8A%A8%E7%AE%A1%E7%90%86%E7%B1%BB%E8%8E%B7%E5%8F%96%E6%95%B0%E6%8D%AE%E5%BA%93%E9%93%BE%E6%8E%A5%5Cnconnection%20%3D%20DriverManager.getConnection(%5C%22jdbc%3Amysql%3A%2F%2Flocalhost%3A3306%2Fmybatis%3F%20characterEncoding%3Dutf-8%5C%22%2C%20%5C%22root%5C%22%2C%20%5C%22root%5C%22)%3B%22%2C%22id%22%3A%22v3m3l%22%7D\"></card><p data-lake-id=\"216ca41d69d0de9f1fbe05ef3bd3a0e0\">问题</p><ul data-lake-id=\"fae1ab125b8ada2ed7f4a3b3ae8aee7f\"><li data-lake-id=\"f11ade8555d76994f79092622dab8552\">数据库配置信息存在硬编码问题，如果需要改动需要修改代码，重新打包部署</li><li data-lake-id=\"f9021cd5b750d916ff3d6b9f1ef294e4\">频繁的去创建和释放数据库链接，浪费资源</li></ul><p data-lake-id=\"17e917a5f1ffc2362565a723f090b372\">解决思路</p><ul data-lake-id=\"5c6a000bd00344271850dfaa63925829\"><li data-lake-id=\"ed60697e2a902061b7677f1e068b63d3\">可以采用配置文件解决硬编码的问题。</li><li data-lake-id=\"ff38e8821e5b8b138b268e669215c0af\">采用连接池解决拼房创建数据库连接的问题</li></ul><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22java%22%2C%22code%22%3A%22%2F%2F%20%E5%AE%9A%E4%B9%89sql%E8%AF%AD%E5%8F%A5%3F%E8%A1%A8%E7%A4%BA%E5%8D%A0%E4%BD%8D%E7%AC%A6%5CnString%20sql%20%3D%20%5C%22select%20*%20from%20user%20where%20username%20%3D%20%3F%5C%22%3B%5Cn%2F%2F%20%E8%8E%B7%E5%8F%96%E9%A2%84%E5%A4%84%E7%90%86statement%5CnpreparedStatement%20%3D%20connection.prepareStatement(sql)%3B%5Cn%2F%2F%20%E8%AE%BE%E7%BD%AE%E5%8F%82%E6%95%B0%EF%BC%8C%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8F%82%E6%95%B0%E4%B8%BAsql%E8%AF%AD%E5%8F%A5%E4%B8%AD%E5%8F%82%E6%95%B0%E7%9A%84%E5%BA%8F%E5%8F%B7(%E4%BB%8E1%E5%BC%80%E5%A7%8B)%EF%BC%8C%E7%AC%AC%E4%BA%8C%E4%B8%AA%E5%8F%82%E6%95%B0%E4%B8%BA%E8%AE%BE%E7%BD%AE%E7%9A%84%E5%8F%82%E6%95%B0%E5%80%BC%5CnpreparedStatement.setString(1%2C%20%5C%22tom%5C%22)%3B%5Cn%2F%2F%20%E5%90%91%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8F%91%E5%87%BAsql%E6%89%A7%E8%A1%8C%E6%9F%A5%E8%AF%A2%EF%BC%8C%E6%9F%A5%E8%AF%A2%E5%87%BA%E7%BB%93%E6%9E%9C%E9%9B%86%5CnresultSet%20%3D%20preparedStatement.executeQuery()%3B%22%2C%22id%22%3A%22BBl7M%22%7D\"></card><p data-lake-id=\"e4685da85c2c11a84c5db8dec83b7888\">问题</p><ul data-lake-id=\"5f5c68833177df843849f58ddaffb930\"><li data-lake-id=\"03a9fc694f734ff34c3f0e6de9ab6b06\"><code>sql</code>语句，设置参数存在硬编码</li></ul><p data-lake-id=\"8819cc77cfe5e750c1c671ac6be66048\">解决思路</p><ul data-lake-id=\"a4116b22d72f26e1b366498ac87aafd6\"><li data-lake-id=\"31c0d5814b72cbcb31c5843b85177741\">配置文件解决，把<code>sql</code>封装到配置文件中</li></ul><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22java%22%2C%22code%22%3A%22while%20(resultSet.next())%20%7B%5Cn%5Ctint%20id%20%3D%20resultSet.getInt(%5C%22id%5C%22)%3B%5Cn%5CtString%20username%20%3D%20resultSet.getString(%5C%22username%5C%22)%3B%5Cn%5Ctuser.setId(id)%3B%5Cn%5Ctuser.setUsername(username)%3B%20%5Cn%7D%22%2C%22id%22%3A%22BEEcd%22%7D\"></card><p data-lake-id=\"96a5f47f26d98ae580592272c1f7feb2\">问题</p><ul data-lake-id=\"4c91645577015b00cc2279c7c63d0a2b\"><li data-lake-id=\"b763bb4b75bf9c77d62ffe98e73008d9\">硬编码，需要手动封装返回结果集，如果这里有很多字段会非常繁琐。</li></ul><p data-lake-id=\"2d370e7d81db306c517e74e73ae2ad16\">解决思路</p><ul data-lake-id=\"10856c51a29c101227d56a1ec0c1365b\"><li data-lake-id=\"f00506555987409b5328b535d8aaa2c0\">反射、内省等技术，实现自动映射</li></ul>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2020-09-29T13:52:59.000Z",
    "deleted_at": null,
    "created_at": "2020-09-29T12:59:49.000Z",
    "updated_at": "2020-09-29T13:52:59.000Z",
    "published_at": "2020-09-29T13:52:59.000Z",
    "first_published_at": "2020-09-29T13:40:51.000Z",
    "word_count": 379,
    "cover": null,
    "description": "// 加载数据库驱动 Class.forName(\"com.mysql.jdbc.Driver\"); // 通过驱动管理类获取数据库链接 connection = DriverManager.getConnection(\"jdbc:mysql://localhost:3306/mybatis?...",
    "custom_description": null,
    "hits": 0,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 13902942,
    "slug": "xrgyxb",
    "title": "缓存",
    "book_id": 1840429,
    "book": {
      "id": 1840429,
      "type": "Book",
      "slug": "lmikoto",
      "name": "笔记",
      "user_id": 328252,
      "description": "",
      "creator_id": 328252,
      "public": 0,
      "items_count": 15,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2020-09-29T14:16:16.754Z",
      "updated_at": "2020-09-29T14:16:16.000Z",
      "created_at": "2020-09-29T12:57:45.000Z",
      "namespace": "lmikoto/lmikoto",
      "user": {
        "id": 328252,
        "type": "User",
        "login": "lmikoto",
        "name": "lmikoto",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/328252/1578028416108-avatar/38f12fe6-da0d-471e-819c-7131fadbd750.png",
        "books_count": 1,
        "public_books_count": 0,
        "followers_count": 0,
        "following_count": 0,
        "created_at": "2019-04-25T04:31:29.000Z",
        "updated_at": "2020-09-29T12:57:45.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 328252,
    "creator": {
      "id": 328252,
      "type": "User",
      "login": "lmikoto",
      "name": "lmikoto",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/328252/1578028416108-avatar/38f12fe6-da0d-471e-819c-7131fadbd750.png",
      "books_count": 1,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2019-04-25T04:31:29.000Z",
      "updated_at": "2020-09-29T12:57:45.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "Mybatis分为一级缓存和二级缓存\n<a name=\"tY3SV\"></a>\n## 一级缓存\n\n- 一级缓存是`sqlSession`级别。不同的`sqlSession`之间的缓存区域互不影响。\n- 默认是开启的。\n<a name=\"pdJeM\"></a>\n## 二级缓存\n\n- 二级缓存是`mapper`级别。跨`sqlSession`。\n\n\n<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/328252/1601387786364-abf9ba04-d87b-438f-9824-5a1c91fc78ba.png#align=left&display=inline&height=224&margin=%5Bobject%20Object%5D&name=image.png&originHeight=448&originWidth=1282&size=54829&status=done&style=none&width=641)\n",
    "body_draft": "Mybatis分为一级缓存和二级缓存\n<a name=\"tY3SV\"></a>\n## 一级缓存\n\n- 一级缓存是sqlSession级别。不同的sqlSession之间的缓存区域互不影响。\n- 默认是开启的。\n<a name=\"pdJeM\"></a>\n## 二级缓存\n\n- 二级缓存是mapper级别。跨sqlSession。\n\n\n\n",
    "body_html": "<!doctype html><div class=\"lake-content-editor-core lake-engine lake-typography-classic\" data-lake-element=\"root\" data-selection-undefined=\"%7B%22path%22%3A%5B%5B6%2C0%2C0%2C2%2C0%2C1%5D%2C%5B6%2C0%2C0%2C2%2C0%2C1%5D%5D%2C%22active%22%3Atrue%7D\"><p data-lake-id=\"7433e7e0bb400cb77b12550a879fb381\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">Mybatis分为一级缓存和二级缓存</p><h2 data-lake-id=\"6fa2a164a2ee1e0434bf56970e8d95dc\" id=\"tY3SV\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">一级缓存</h2><ul data-lake-id=\"c5e1b3d8d2b751aa902ee8663b9a5fd1\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"855ebecc5b35eb29d1648917c0a7a979\">一级缓存是<code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">sqlSession</code>级别。不同的<code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">sqlSession</code>之间的缓存区域互不影响。</li><li data-lake-id=\"70e0e176cf64280ffc69c6d0522b3c75\">默认是开启的。</li></ul><h2 data-lake-id=\"132413ddcecdc89ba8bd3d750b40e4eb\" id=\"pdJeM\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">二级缓存</h2><ul data-lake-id=\"4723f693aabd29b9ae1db4cd3c34b684\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"fef916759d1a830cb5036740d7d3bb86\">二级缓存是<code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">mapper</code>级别。跨<code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">sqlSession</code>。</li></ul><p data-lake-id=\"25920e79bfde1ffcfeaa616952ae9984\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"81ee252c45893a2156f8a48de74498a1\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" class=\"lake-card-margin-top lake-card-margin-bottom\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/328252/1601387786364-abf9ba04-d87b-438f-9824-5a1c91fc78ba.png\" data-raw-src=\"\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" data-height=\"224px\" style=\"visibility: visible; width: 641px;\"></span></p></div>",
    "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"adapt\" /><meta name=\"typography\" content=\"classic\" /><p data-lake-id=\"7433e7e0bb400cb77b12550a879fb381\">Mybatis分为一级缓存和二级缓存</p><h2 data-lake-id=\"6fa2a164a2ee1e0434bf56970e8d95dc\" id=\"tY3SV\">一级缓存</h2><ul data-lake-id=\"c5e1b3d8d2b751aa902ee8663b9a5fd1\"><li data-lake-id=\"855ebecc5b35eb29d1648917c0a7a979\">一级缓存是<code>sqlSession</code>级别。不同的<code>sqlSession</code>之间的缓存区域互不影响。</li><li data-lake-id=\"70e0e176cf64280ffc69c6d0522b3c75\">默认是开启的。</li></ul><h2 data-lake-id=\"132413ddcecdc89ba8bd3d750b40e4eb\" id=\"pdJeM\">二级缓存</h2><ul data-lake-id=\"4723f693aabd29b9ae1db4cd3c34b684\"><li data-lake-id=\"fef916759d1a830cb5036740d7d3bb86\">二级缓存是<code>mapper</code>级别。跨<code>sqlSession</code>。</li></ul><p data-lake-id=\"25920e79bfde1ffcfeaa616952ae9984\"><br /></p><p data-lake-id=\"81ee252c45893a2156f8a48de74498a1\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F328252%2F1601387786364-abf9ba04-d87b-438f-9824-5a1c91fc78ba.png%22%2C%22originWidth%22%3A1282%2C%22originHeight%22%3A448%2C%22name%22%3A%22image.png%22%2C%22size%22%3A54829%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A146.56616%2C%22y%22%3A16.064983%2C%22width%22%3A198.53952%2C%22height%22%3A34.316292000000004%2C%22text%22%3A%22%E9%BB%98%E8%AE%A4%E6%98%AF%E5%BC%80%E5%90%AF%E7%9A%84.%22%7D%2C%7B%22x%22%3A97.89314%2C%22y%22%3A104.721214%2C%22width%22%3A192.39479%2C%22height%22%3A53.797066%2C%22text%22%3A%22%E4%BA%8C%E7%BA%A7%E7%BC%93%E5%AD%98%22%7D%2C%7B%22x%22%3A148.07948%2C%22y%22%3A179.9436%2C%22width%22%3A604.83492%2C%22height%22%3A41.190650000000005%2C%22text%22%3A%22%E4%BA%8C%E7%BA%A7%E7%BC%93%E5%AD%98%E6%98%AFmapper%E7%BA%A7%E5%88%AB.%E8%B7%A8sqlsession.%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%E9%BB%98%E8%AE%A4%E6%98%AF%E5%BC%80%E5%90%AF%E7%9A%84.%20%E4%BA%8C%E7%BA%A7%E7%BC%93%E5%AD%98%20%E4%BA%8C%E7%BA%A7%E7%BC%93%E5%AD%98%E6%98%AFmapper%E7%BA%A7%E5%88%AB.%E8%B7%A8sqlsession.%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A641%2C%22height%22%3A224%7D\"></card></p>",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"adapt\" /><meta name=\"typography\" content=\"classic\" /><p data-lake-id=\"7433e7e0bb400cb77b12550a879fb381\">Mybatis分为一级缓存和二级缓存</p><h2 data-lake-id=\"6fa2a164a2ee1e0434bf56970e8d95dc\" id=\"tY3SV\">一级缓存</h2><ul data-lake-id=\"c5e1b3d8d2b751aa902ee8663b9a5fd1\"><li data-lake-id=\"855ebecc5b35eb29d1648917c0a7a979\">一级缓存是sqlSession级别。不同的sqlSession之间的缓存区域互不影响。</li><li data-lake-id=\"70e0e176cf64280ffc69c6d0522b3c75\">默认是开启的。</li></ul><h2 data-lake-id=\"132413ddcecdc89ba8bd3d750b40e4eb\" id=\"pdJeM\">二级缓存</h2><ul data-lake-id=\"4723f693aabd29b9ae1db4cd3c34b684\"><li data-lake-id=\"fef916759d1a830cb5036740d7d3bb86\">二级缓存是mapper级别。跨sqlSession。</li></ul><p data-lake-id=\"81ee252c45893a2156f8a48de74498a1\"><br /></p>",
    "public": 1,
    "status": 0,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2020-09-29T14:04:37.000Z",
    "deleted_at": null,
    "created_at": "2020-09-29T12:58:00.000Z",
    "updated_at": "2020-09-29T14:04:37.000Z",
    "published_at": "2020-09-29T13:56:29.000Z",
    "first_published_at": "2020-09-29T13:40:55.000Z",
    "word_count": 64,
    "cover": "https://cdn.nlark.com/yuque/0/2020/png/328252/1601387786364-abf9ba04-d87b-438f-9824-5a1c91fc78ba.png",
    "description": "Mybatis分为一级缓存和二级缓存一级缓存一级缓存是sqlSession级别。不同的sqlSession之间的缓存区域互不影响。默认是开启的。二级缓存二级缓存是mapper级别。跨sqlSession。",
    "custom_description": null,
    "hits": 0,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 13904174,
    "slug": "mkkpvm",
    "title": "无标题",
    "book_id": 1840429,
    "book": {
      "id": 1840429,
      "type": "Book",
      "slug": "lmikoto",
      "name": "笔记",
      "user_id": 328252,
      "description": "",
      "creator_id": 328252,
      "public": 0,
      "items_count": 3,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2020-09-29T13:54:09.707Z",
      "updated_at": "2020-09-29T13:54:09.000Z",
      "created_at": "2020-09-29T12:57:45.000Z",
      "namespace": "lmikoto/lmikoto",
      "user": {
        "id": 328252,
        "type": "User",
        "login": "lmikoto",
        "name": "lmikoto",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/328252/1578028416108-avatar/38f12fe6-da0d-471e-819c-7131fadbd750.png",
        "books_count": 1,
        "public_books_count": 0,
        "followers_count": 0,
        "following_count": 0,
        "created_at": "2019-04-25T04:31:29.000Z",
        "updated_at": "2020-09-29T12:57:45.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 328252,
    "creator": {
      "id": 328252,
      "type": "User",
      "login": "lmikoto",
      "name": "lmikoto",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/328252/1578028416108-avatar/38f12fe6-da0d-471e-819c-7131fadbd750.png",
      "books_count": 1,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2019-04-25T04:31:29.000Z",
      "updated_at": "2020-09-29T12:57:45.000Z",
      "_serializer": "v2.user"
    },
    "format": "lakemind",
    "body": "{\"format\":\"lakemind\",\"type\":\"Mind\",\"version\":\"1.0\",\"diagramData\":{\"head\":{\"version\":\"2.0.0\"},\"body\":[{\"id\":\"init\",\"type\":\"mindmap\",\"html\":\"思维导图\",\"children\":[{\"html\":\"​1231\",\"layout\":{\"quadrant\":1},\"treeEdge\":{\"stroke\":\"#A287E1\"},\"id\":\"d08fb0a9-a77b-4fd4-a292-4288ed0a38d6\",\"children\":[],\"zIndex\":0}],\"zIndex\":1}]},\"viewportSetting\":{\"zoom\":1,\"originCanvasTlPoint\":[-336.5,-359,1]},\"text\":\"思维导图​1231\"}",
    "body_draft": "{\"format\":\"lakemind\",\"type\":\"Mind\",\"version\":\"1.0\",\"diagramData\":{\"head\":{\"version\":\"2.0.0\"},\"body\":[{\"id\":\"init\",\"type\":\"mindmap\",\"html\":\"思维导图\",\"children\":[{\"html\":\"​1231\",\"layout\":{\"quadrant\":1},\"treeEdge\":{\"stroke\":\"#A287E1\"},\"id\":\"d08fb0a9-a77b-4fd4-a292-4288ed0a38d6\",\"children\":[],\"zIndex\":0}],\"zIndex\":1}]},\"viewportSetting\":{\"zoom\":1,\"originCanvasTlPoint\":[-336.5,-359,1]},\"text\":\"思维导图​1231\"}",
    "body_html": null,
    "body_lake": "",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2020-09-29T13:54:09.000Z",
    "deleted_at": null,
    "created_at": "2020-09-29T13:54:00.000Z",
    "updated_at": "2020-09-29T13:54:09.000Z",
    "published_at": "2020-09-29T13:54:09.000Z",
    "first_published_at": "2020-09-29T13:54:09.000Z",
    "word_count": 0,
    "cover": null,
    "description": "",
    "custom_description": null,
    "hits": 0,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 13904207,
    "slug": "fhw51q",
    "title": "使用Notion做博客的后台",
    "book_id": 1840429,
    "book": {
      "id": 1840429,
      "type": "Book",
      "slug": "lmikoto",
      "name": "笔记",
      "user_id": 328252,
      "description": "",
      "creator_id": 328252,
      "public": 0,
      "items_count": 15,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2020-09-29T14:16:16.754Z",
      "updated_at": "2020-09-29T14:16:16.000Z",
      "created_at": "2020-09-29T12:57:45.000Z",
      "namespace": "lmikoto/lmikoto",
      "user": {
        "id": 328252,
        "type": "User",
        "login": "lmikoto",
        "name": "lmikoto",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/328252/1578028416108-avatar/38f12fe6-da0d-471e-819c-7131fadbd750.png",
        "books_count": 1,
        "public_books_count": 0,
        "followers_count": 0,
        "following_count": 0,
        "created_at": "2019-04-25T04:31:29.000Z",
        "updated_at": "2020-09-29T12:57:45.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 328252,
    "creator": {
      "id": 328252,
      "type": "User",
      "login": "lmikoto",
      "name": "lmikoto",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/328252/1578028416108-avatar/38f12fe6-da0d-471e-819c-7131fadbd750.png",
      "books_count": 1,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2019-04-25T04:31:29.000Z",
      "updated_at": "2020-09-29T12:57:45.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "我又又又开始折腾博客了。<br />最近发现了一个很舒服的工具[notion](https://www.notion.so/)。不但可以记笔记其功能还涵盖了项目管理、wiki、文档等。最主要的是极致的markdown书写体验，让我爱不释手。<br />\n\n<a name=\"3fd8ad04\"></a>\n## 博客现状\n\n<br />先说一下我改造前的博客现状。<br />博客是基于hexo搭建的，使用travis部署在github page上的静态博客。具体可以参考[关于本站](https://lmikoto.com/2020/05/07/%E5%85%B3%E4%BA%8E%E6%9C%AC%E7%AB%99/)。平时写博客的时候需要先`hexo new post`，然后在vscode中写，然后push到github上。由travis帮忙构建和发布。<br />这里的短板算是vscode了。因为他并不支持所见即所得编辑。对图片的插入也不是很友好，虽然有插件进行支持。<br />\n\n<a name=\"a7f8f353\"></a>\n## 改造点\n\n<br />把写博客的工具由vscode 迁移到notion上来。<br />\n\n<a name=\"22e57b8e\"></a>\n## 难点以及解决\n\n\n- notion到现在还不支持开放api。对于这个还算好说，虽然不支持开发api，但是可以直接访问他自己前端用的api。对于notion中公开的文章，访问api甚至不用鉴权。\n- 数据结构不一致。虽然notion提供了极致的mardown书写体验。但他的数据结构并不是markdown，而是notion自己的block。要做到这一点，就需要建立一个从block到mardown的映射。好在不是很困难，找了一些资料然后写了一些代码来解决了这个问题。\n- 触发构建。原来是git提交触发。现在就只能点travis的构建按钮进行触发。\n\n\n<br />完整的代码放到了[这里了](https://github.com/lmikoto/blog/tree/master/notion)，代码组织的有点烂，如果有想参考这个来做的小伙伴，多见谅哈。<br />\n\n<a name=\"ea6f3b87\"></a>\n## 参考链接\n\n\n- [https://github.com/sorcererxw/notionblog](https://github.com/sorcererxw/notionblog)\n",
    "body_draft": "我又又又开始折腾博客了。<br />最近发现了一个很舒服的工具[notion](https://www.notion.so/)。不但可以记笔记其功能还涵盖了项目管理、wiki、文档等。最主要的是极致的markdown书写体验，让我爱不释手。<br />\n\n<a name=\"3fd8ad04\"></a>\n## 博客现状\n\n<br />先说一下我改造前的博客现状。<br />博客是基于hexo搭建的，使用travis部署在github page上的静态博客。具体可以参考[关于本站](https://lmikoto.com/2020/05/07/%E5%85%B3%E4%BA%8E%E6%9C%AC%E7%AB%99/)。平时写博客的时候需要先`hexo new post`，然后在vscode中写，然后push到github上。由travis帮忙构建和发布。<br />这里的短板算是vscode了。因为他并不支持所见即所得编辑。对图片的插入也不是很友好，虽然有插件进行支持。<br />\n\n<a name=\"a7f8f353\"></a>\n## 改造点\n\n<br />把写博客的工具由vscode 迁移到notion上来。<br />\n\n<a name=\"22e57b8e\"></a>\n## 难点以及解决\n\n\n- notion到现在还不支持开放api。对于这个还算好说，虽然不支持开发api，但是可以直接访问他自己前端用的api。对于notion中公开的文章，访问api甚至不用鉴权。\n- 数据结构不一致。虽然notion提供了极致的mardown书写体验。但他的数据结构并不是markdown，而是notion自己的block。要做到这一点，就需要建立一个从block到mardown的映射。好在不是很困难，找了一些资料然后写了一些代码来解决了这个问题。\n- 触发构建。原来是git提交触发。现在就只能点travis的构建按钮进行触发。\n\n\n<br />完整的代码放到了[这里了](https://github.com/lmikoto/blog/tree/master/notion)，代码组织的有点烂，如果有想参考这个来做的小伙伴，多见谅哈。<br />\n\n<a name=\"ea6f3b87\"></a>\n## 参考链接\n\n\n- [https://github.com/sorcererxw/notionblog](https://github.com/sorcererxw/notionblog)\n",
    "body_html": "<!doctype html><div class=\"lake-content-editor-core lake-engine lake-typography-classic\" data-lake-element=\"root\" data-selection-undefined=\"%7B%22path%22%3A%5B%5B1%2C2%2C37%5D%2C%5B1%2C2%2C45%5D%5D%2C%22active%22%3Atrue%7D\"><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">我又又又开始折腾博客了。</p><p data-lake-id=\"08ec5c774a544dff6fa88cab7f28fc5d\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">最近发现了一个很舒服的工具<a href=\"https://www.notion.so/\" target=\"_blank\">notion</a>。不但可以记笔记其功能还涵盖了项目管理、wiki、文档等。最主要的是极致的markdown书写体验，让我爱不释手。</p><p data-lake-id=\"b137b07cb2d00108d2f90dd69306cb9b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h2 id=\"3fd8ad04\" data-lake-id=\"ba476bdef42f16ce68d5d54fec086aca\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">博客现状</h2><p data-lake-id=\"8f71c64fe3d701b9e4b3d3907b580c7b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"f7ceb208cf11db5881ee383ec9754fec\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">先说一下我改造前的博客现状。</p><p data-lake-id=\"3dc099c0d4536e3906c44283426837c5\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">博客是基于hexo搭建的，使用travis部署在github page上的静态博客。具体可以参考<a href=\"https://lmikoto.com/2020/05/07/%E5%85%B3%E4%BA%8E%E6%9C%AC%E7%AB%99/\" target=\"_blank\">关于本站</a>。平时写博客的时候需要先<code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">hexo new post</code>，然后在vscode中写，然后push到github上。由travis帮忙构建和发布。</p><p data-lake-id=\"4a1ece6d100c295da8b1ea7edaa8057d\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">这里的短板算是vscode了。因为他并不支持所见即所得编辑。对图片的插入也不是很友好，虽然有插件进行支持。</p><p data-lake-id=\"c602e2da31c943067f49f0c9c36efd12\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h2 id=\"a7f8f353\" data-lake-id=\"46eb27b40ef523839ae152030accc86b\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">改造点</h2><p data-lake-id=\"89058869a20542a977b677c37b92ce33\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"4fc0a0130f2f078b09f700110d3afd87\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">把写博客的工具由vscode 迁移到notion上来。</p><p data-lake-id=\"1406d053a6b17fba03692f0a82516e1a\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h2 id=\"22e57b8e\" data-lake-id=\"427912c0c6507bed9d02843d54f51a8d\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">难点以及解决</h2><p data-lake-id=\"cefdfb5c7c73599c99b4d30d8d94dd45\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><ul data-lake-id=\"103cea1269fab460aa62709ea2b0d044\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"b6ea02598e29af9c995278d10f5a9180\">notion到现在还不支持开放api。对于这个还算好说，虽然不支持开发api，但是可以直接访问他自己前端用的api。对于notion中公开的文章，访问api甚至不用鉴权。</li><li data-lake-id=\"8965bd37f08000703481e29ec53d9a1c\">数据结构不一致。虽然notion提供了极致的mardown书写体验。但他的数据结构并不是markdown，而是notion自己的block。要做到这一点，就需要建立一个从block到mardown的映射。好在不是很困难，找了一些资料然后写了一些代码来解决了这个问题。</li><li data-lake-id=\"774c77f32addfe552599dfb65cefb030\">触发构建。原来是git提交触发。现在就只能点travis的构建按钮进行触发。</li></ul><p data-lake-id=\"25a0b91483bbb33b05499c257e421f15\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"fe96fe25af7ba57616fcd21dc7496aa4\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">完整的代码放到了<a href=\"https://github.com/lmikoto/blog/tree/master/notion\" target=\"_blank\">这里了</a>，代码组织的有点烂，如果有想参考这个来做的小伙伴，多见谅哈。</p><p data-lake-id=\"dce746db983a866cbd54e036bfca05d4\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h2 id=\"ea6f3b87\" data-lake-id=\"7bacb077b233124601d56b5b56a8cc78\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">参考链接</h2><p data-lake-id=\"82060a9e6735e4af8348b0d542ad2083\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><ul data-lake-id=\"4cb5098c6faa23a4a69c645d34e174c6\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"477e730a36b0dce58d530efd00cebe23\"><a href=\"https://github.com/sorcererxw/notionblog\" target=\"_blank\">https://github.com/sorcererxw/notionblog</a></li></ul></div>",
    "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"adapt\" /><meta name=\"typography\" content=\"classic\" /><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\">我又又又开始折腾博客了。</p><p data-lake-id=\"08ec5c774a544dff6fa88cab7f28fc5d\">最近发现了一个很舒服的工具<a href=\"https://www.notion.so/\" target=\"_blank\">notion</a>。不但可以记笔记其功能还涵盖了项目管理、wiki、文档等。最主要的是极致的markdown书写体验，让我爱不释手。</p><p data-lake-id=\"b137b07cb2d00108d2f90dd69306cb9b\"><br /></p><h2 id=\"3fd8ad04\" data-lake-id=\"ba476bdef42f16ce68d5d54fec086aca\">博客现状</h2><p data-lake-id=\"8f71c64fe3d701b9e4b3d3907b580c7b\"><br /></p><p data-lake-id=\"f7ceb208cf11db5881ee383ec9754fec\">先说一下我改造前的博客现状。</p><p data-lake-id=\"3dc099c0d4536e3906c44283426837c5\">博客是基于hexo搭建的，使用travis部署在github page上的静态博客。具体可以参考<a href=\"https://lmikoto.com/2020/05/07/%E5%85%B3%E4%BA%8E%E6%9C%AC%E7%AB%99/\" target=\"_blank\">关于本站</a>。平时写博客的时候需要先<code>hexo new post</code>，然后在vscode中写，然后push到github上。由travis帮忙构建和发布。</p><p data-lake-id=\"4a1ece6d100c295da8b1ea7edaa8057d\">这里的短板算是vscode了。因为他并不支持所见即所得编辑。对图片的插入也不是很友好，虽然有插件进行支持。</p><p data-lake-id=\"c602e2da31c943067f49f0c9c36efd12\"><br /></p><h2 id=\"a7f8f353\" data-lake-id=\"46eb27b40ef523839ae152030accc86b\">改造点</h2><p data-lake-id=\"89058869a20542a977b677c37b92ce33\"><br /></p><p data-lake-id=\"4fc0a0130f2f078b09f700110d3afd87\">把写博客的工具由vscode 迁移到notion上来。</p><p data-lake-id=\"1406d053a6b17fba03692f0a82516e1a\"><br /></p><h2 id=\"22e57b8e\" data-lake-id=\"427912c0c6507bed9d02843d54f51a8d\">难点以及解决</h2><p data-lake-id=\"cefdfb5c7c73599c99b4d30d8d94dd45\"><br /></p><ul data-lake-id=\"103cea1269fab460aa62709ea2b0d044\"><li data-lake-id=\"b6ea02598e29af9c995278d10f5a9180\">notion到现在还不支持开放api。对于这个还算好说，虽然不支持开发api，但是可以直接访问他自己前端用的api。对于notion中公开的文章，访问api甚至不用鉴权。</li><li data-lake-id=\"8965bd37f08000703481e29ec53d9a1c\">数据结构不一致。虽然notion提供了极致的mardown书写体验。但他的数据结构并不是markdown，而是notion自己的block。要做到这一点，就需要建立一个从block到mardown的映射。好在不是很困难，找了一些资料然后写了一些代码来解决了这个问题。</li><li data-lake-id=\"774c77f32addfe552599dfb65cefb030\">触发构建。原来是git提交触发。现在就只能点travis的构建按钮进行触发。</li></ul><p data-lake-id=\"25a0b91483bbb33b05499c257e421f15\"><br /></p><p data-lake-id=\"fe96fe25af7ba57616fcd21dc7496aa4\">完整的代码放到了<a href=\"https://github.com/lmikoto/blog/tree/master/notion\" target=\"_blank\">这里了</a>，代码组织的有点烂，如果有想参考这个来做的小伙伴，多见谅哈。</p><p data-lake-id=\"dce746db983a866cbd54e036bfca05d4\"><br /></p><h2 id=\"ea6f3b87\" data-lake-id=\"7bacb077b233124601d56b5b56a8cc78\">参考链接</h2><p data-lake-id=\"82060a9e6735e4af8348b0d542ad2083\"><br /></p><ul data-lake-id=\"4cb5098c6faa23a4a69c645d34e174c6\"><li data-lake-id=\"477e730a36b0dce58d530efd00cebe23\"><a href=\"https://github.com/sorcererxw/notionblog\" target=\"_blank\">https://github.com/sorcererxw/notionblog</a></li></ul>",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"adapt\" /><meta name=\"typography\" content=\"classic\" /><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\">我又又又开始折腾博客了。</p><p data-lake-id=\"08ec5c774a544dff6fa88cab7f28fc5d\">最近发现了一个很舒服的工具<a href=\"https://www.notion.so/\" target=\"_blank\">notion</a>。不但可以记笔记其功能还涵盖了项目管理、wiki、文档等。最主要的是极致的markdown书写体验，让我爱不释手。</p><p data-lake-id=\"b137b07cb2d00108d2f90dd69306cb9b\"><br /></p><h2 id=\"3fd8ad04\" data-lake-id=\"ba476bdef42f16ce68d5d54fec086aca\">博客现状</h2><p data-lake-id=\"8f71c64fe3d701b9e4b3d3907b580c7b\"><br /></p><p data-lake-id=\"f7ceb208cf11db5881ee383ec9754fec\">先说一下我改造前的博客现状。</p><p data-lake-id=\"3dc099c0d4536e3906c44283426837c5\">博客是基于hexo搭建的，使用travis部署在github page上的静态博客。具体可以参考<a href=\"https://lmikoto.com/2020/05/07/%E5%85%B3%E4%BA%8E%E6%9C%AC%E7%AB%99/\" target=\"_blank\">关于本站</a>。平时写博客的时候需要先<code>hexo new post</code>，然后在vscode中写，然后push到github上。由travis帮忙构建和发布。</p><p data-lake-id=\"4a1ece6d100c295da8b1ea7edaa8057d\">这里的短板算是vscode了。因为他并不支持所见即所得编辑。对图片的插入也不是很友好，虽然有插件进行支持。</p><p data-lake-id=\"c602e2da31c943067f49f0c9c36efd12\"><br /></p><h2 id=\"a7f8f353\" data-lake-id=\"46eb27b40ef523839ae152030accc86b\">改造点</h2><p data-lake-id=\"89058869a20542a977b677c37b92ce33\"><br /></p><p data-lake-id=\"4fc0a0130f2f078b09f700110d3afd87\">把写博客的工具由vscode 迁移到notion上来。</p><p data-lake-id=\"1406d053a6b17fba03692f0a82516e1a\"><br /></p><h2 id=\"22e57b8e\" data-lake-id=\"427912c0c6507bed9d02843d54f51a8d\">难点以及解决</h2><p data-lake-id=\"cefdfb5c7c73599c99b4d30d8d94dd45\"><br /></p><ul data-lake-id=\"103cea1269fab460aa62709ea2b0d044\"><li data-lake-id=\"b6ea02598e29af9c995278d10f5a9180\">notion到现在还不支持开放api。对于这个还算好说，虽然不支持开发api，但是可以直接访问他自己前端用的api。对于notion中公开的文章，访问api甚至不用鉴权。</li><li data-lake-id=\"8965bd37f08000703481e29ec53d9a1c\">数据结构不一致。虽然notion提供了极致的mardown书写体验。但他的数据结构并不是markdown，而是notion自己的block。要做到这一点，就需要建立一个从block到mardown的映射。好在不是很困难，找了一些资料然后写了一些代码来解决了这个问题。</li><li data-lake-id=\"774c77f32addfe552599dfb65cefb030\">触发构建。原来是git提交触发。现在就只能点travis的构建按钮进行触发。</li></ul><p data-lake-id=\"25a0b91483bbb33b05499c257e421f15\"><br /></p><p data-lake-id=\"fe96fe25af7ba57616fcd21dc7496aa4\">完整的代码放到了<a href=\"https://github.com/lmikoto/blog/tree/master/notion\" target=\"_blank\">这里了</a>，代码组织的有点烂，如果有想参考这个来做的小伙伴，多见谅哈。</p><p data-lake-id=\"dce746db983a866cbd54e036bfca05d4\"><br /></p><h2 id=\"ea6f3b87\" data-lake-id=\"7bacb077b233124601d56b5b56a8cc78\">参考链接</h2><p data-lake-id=\"82060a9e6735e4af8348b0d542ad2083\"><br /></p><ul data-lake-id=\"4cb5098c6faa23a4a69c645d34e174c6\"><li data-lake-id=\"477e730a36b0dce58d530efd00cebe23\"><a href=\"https://github.com/sorcererxw/notionblog\" target=\"_blank\">https://github.com/sorcererxw/notionblog</a></li></ul>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2020-09-29T14:01:26.000Z",
    "deleted_at": null,
    "created_at": "2020-09-29T13:55:58.000Z",
    "updated_at": "2020-09-29T14:01:26.000Z",
    "published_at": "2020-09-29T14:01:26.000Z",
    "first_published_at": "2020-09-29T13:56:18.000Z",
    "word_count": 479,
    "cover": null,
    "description": "我又又又开始折腾博客了。最近发现了一个很舒服的工具notion。不但可以记笔记其功能还涵盖了项目管理、wiki、文档等。最主要的是极致的markdown书写体验，让我爱不释手。博客现状先说一下我改造前的博客现状。博客是基于hexo搭建的，使用travis部署在github page上的静态博客...",
    "custom_description": null,
    "hits": 0,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 13904194,
    "slug": "llx8pd",
    "title": "使用语雀webhook发布到博客",
    "book_id": 1840429,
    "book": {
      "id": 1840429,
      "type": "Book",
      "slug": "lmikoto",
      "name": "笔记",
      "user_id": 328252,
      "description": "",
      "creator_id": 328252,
      "public": 0,
      "items_count": 15,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2020-09-29T14:16:16.754Z",
      "updated_at": "2020-09-29T14:16:16.000Z",
      "created_at": "2020-09-29T12:57:45.000Z",
      "namespace": "lmikoto/lmikoto",
      "user": {
        "id": 328252,
        "type": "User",
        "login": "lmikoto",
        "name": "lmikoto",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/328252/1578028416108-avatar/38f12fe6-da0d-471e-819c-7131fadbd750.png",
        "books_count": 1,
        "public_books_count": 0,
        "followers_count": 0,
        "following_count": 0,
        "created_at": "2019-04-25T04:31:29.000Z",
        "updated_at": "2020-09-29T12:57:45.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 328252,
    "creator": {
      "id": 328252,
      "type": "User",
      "login": "lmikoto",
      "name": "lmikoto",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/328252/1578028416108-avatar/38f12fe6-da0d-471e-819c-7131fadbd750.png",
      "books_count": 1,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2019-04-25T04:31:29.000Z",
      "updated_at": "2020-09-29T12:57:45.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "整体的部署流程为:<br />在语雀发布文章 -> 触发语雀 webhook -> server接收到文章推送 -> 请求信息中抽取文章内容和必要信息 -> 调用 GitHub api 更新仓库 -> netlify 自动部署 -> 文章在博客发布<br />本文主要描述server的实现过程。<br />\n\n<a name=\"6c8a220b\"></a>\n### 接收webhook的推送\n\n\n```java\n@RestController\n@Slf4j\npublic class WebHookController {\n\n    @PostMapping(\"/yuque/webhook\")\n    public String webHook(@RequestBody Object req){\n        log.info(JacksonUtils.toJson(req));\n        return \"\";\n    }\n}\n```\n\n\n<a name=\"45e8dd26\"></a>\n### 清洗语雀内容\n\n<br />因为语雀会在markdown中添加一些标签，所有需要清洗掉<br />\n\n```java\nprivate String cleanContent(String content){\n    content = content\n        .replaceAll(\"<br \\\\/>\",\"\\n\")\n        .replaceAll(\"<a name=\\\".*\\\"></a>\",\"\");\n    log.info(\"清洗结束 {}\",content);\n    return content;\n}\n```\n\n\n<a name=\"7909efd5\"></a>\n### 图片替换\n\n<br />虽然语雀现在的图床在外部系统也可以引用，但是保险起见还是把图片下载下来自己存储。<br />使用正则表达式把图片获取出来，然后调用github api把图片上传到指定目录，然后把文章中的图片替换成新的路径。<br />\n\n```java\npublic void uploadToGitHub(String title,String originContent){\n    String content = cleanContent(originContent);\n    GitHubApi gitHubApi = GitHubApi.getInstance(owner,repo,token);\n    RefDto refDto = gitHubApi.getRef();\n    CommitDto commitDto = gitHubApi.getCommit(refDto.getObject().getSha());\n\n    // 提取图片单独上传\n    Pattern pattern = Pattern.compile(\"!\\\\[image.png]\\\\((.*?)\\\\)\");\n    Matcher matcher = pattern.matcher(content);\n    List<BlobListDto> blobListDtoArrayList = Lists.newArrayList();\n    while (matcher.find()) {\n        int i = 1;\n        try {\n            String imageUrl = matcher.group(i);\n            URI uri = new URI(imageUrl);\n            String path = uri.getPath();\n            String imageName = path.substring(path.lastIndexOf('/') + 1);\n            String githubPath = \"/assets/\" + imageName;\n            content = content.replace(imageUrl,githubPath);\n            CreateBlobResponse createBlobResponse = gitHubApi.createBlob(Base64Utils.getImageStrFromUrl(imageUrl),\"base64\");\n            blobListDtoArrayList.add(new BlobListDto(createBlobResponse.getSha(),githubPath));\n        }catch (Exception e){\n            log.error(\"{}\", Throwables.getStackTraceAsString(e));\n        }\n        i++;\n    }\n    CreateBlobResponse createBlobResponse = gitHubApi.createBlob(content,\"utf-8\");\n    blobListDtoArrayList.add(new BlobListDto(createBlobResponse.getSha(),\"content/blog/\" + title  + \".md\"));\n    List<Map<String,Object>> treeMpas = Lists.newArrayList();\n    blobListDtoArrayList.forEach(i->{\n        treeMpas.add(ImmutableMap.of(\"path\",i.getPath(),\"mode\",\"100644\",\"type\",\"blob\",\"sha\",i.getSha()));\n    });\n    CreateTreeResponse createTreeResponse = gitHubApi.createTree(commitDto.getTree().getSha(),treeMpas);\n    CreateCommitResponse createCommitResponse = gitHubApi.createCommit(refDto.getObject().getSha(),createTreeResponse.getSha());\n    gitHubApi.updataRef(createCommitResponse.getSha());\n}\n```\n\n<br />[完整代码](https://github.com/lmikoto/yuque-webhook)\n",
    "body_draft": "整体的部署流程为:<br />在语雀发布文章 -> 触发语雀webhook -> server接收到文章推送 -> 请求信息中抽取文章内容和必要信息 -> 调用GitHub api更新仓库 -> netlify 自动部署 -> 文章在博客发布<br />本文主要描述server的实现过程。<br />\n\n<a name=\"6c8a220b\"></a>\n### 接收webhook的推送\n\n\n```java\n@RestController\n@Slf4j\npublic class WebHookController {\n\n    @PostMapping(\"/yuque/webhook\")\n    public String webHook(@RequestBody Object req){\n        log.info(JacksonUtils.toJson(req));\n        return \"\";\n    }\n}\n```\n\n\n<a name=\"45e8dd26\"></a>\n### 清洗语雀内容\n\n<br />因为语雀会在`markdown`中添加一些标签，所有需要清洗掉<br />\n\n```java\nprivate String cleanContent(String content){\n    content = content\n        .replaceAll(\"<br \\\\/>\",\"\\n\")\n        .replaceAll(\"<a name=\\\".*\\\"></a>\",\"\");\n    log.info(\"清洗结束 {}\",content);\n    return content;\n}\n```\n\n\n<a name=\"7909efd5\"></a>\n### 图片替换\n\n<br />虽然语雀现在的图床在外部系统也可以引用，但是保险起见还是把图片下载下来自己存储。<br />使用正则表达式把图片获取出来，然后调用`github api`把图片上传到指定目录，然后把文章中的图片替换成新的路径。<br />\n\n```java\npublic void uploadToGitHub(String title,String originContent){\n    String content = cleanContent(originContent);\n    GitHubApi gitHubApi = GitHubApi.getInstance(owner,repo,token);\n    RefDto refDto = gitHubApi.getRef();\n    CommitDto commitDto = gitHubApi.getCommit(refDto.getObject().getSha());\n\n    // 提取图片单独上传\n    Pattern pattern = Pattern.compile(\"!\\\\[image.png]\\\\((.*?)\\\\)\");\n    Matcher matcher = pattern.matcher(content);\n    List<BlobListDto> blobListDtoArrayList = Lists.newArrayList();\n    while (matcher.find()) {\n        int i = 1;\n        try {\n            String imageUrl = matcher.group(i);\n            URI uri = new URI(imageUrl);\n            String path = uri.getPath();\n            String imageName = path.substring(path.lastIndexOf('/') + 1);\n            String githubPath = \"/assets/\" + imageName;\n            content = content.replace(imageUrl,githubPath);\n            CreateBlobResponse createBlobResponse = gitHubApi.createBlob(Base64Utils.getImageStrFromUrl(imageUrl),\"base64\");\n            blobListDtoArrayList.add(new BlobListDto(createBlobResponse.getSha(),githubPath));\n        }catch (Exception e){\n            log.error(\"{}\", Throwables.getStackTraceAsString(e));\n        }\n        i++;\n    }\n    CreateBlobResponse createBlobResponse = gitHubApi.createBlob(content,\"utf-8\");\n    blobListDtoArrayList.add(new BlobListDto(createBlobResponse.getSha(),\"content/blog/\" + title  + \".md\"));\n    List<Map<String,Object>> treeMpas = Lists.newArrayList();\n    blobListDtoArrayList.forEach(i->{\n        treeMpas.add(ImmutableMap.of(\"path\",i.getPath(),\"mode\",\"100644\",\"type\",\"blob\",\"sha\",i.getSha()));\n    });\n    CreateTreeResponse createTreeResponse = gitHubApi.createTree(commitDto.getTree().getSha(),treeMpas);\n    CreateCommitResponse createCommitResponse = gitHubApi.createCommit(refDto.getObject().getSha(),createTreeResponse.getSha());\n    gitHubApi.updataRef(createCommitResponse.getSha());\n}\n```\n\n<br />[完整代码](https://github.com/lmikoto/yuque-webhook)\n",
    "body_html": "<!doctype html><div class=\"lake-content-editor-core lake-engine lake-typography-classic\" data-lake-element=\"root\" data-selection-undefined=\"%7B%22path%22%3A%5B%5B0%2C0%2C0%5D%2C%5B0%2C0%2C0%5D%5D%2C%22active%22%3Atrue%7D\"><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">整体的部署流程为:</p><p data-lake-id=\"d8baf9b0402c9d28cca16542da90d17c\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">在语雀发布文章 -&gt; 触发语雀 webhook -&gt; server接收到文章推送 -&gt; 请求信息中抽取文章内容和必要信息 -&gt; 调用 GitHub api 更新仓库 -&gt; netlify 自动部署 -&gt; 文章在博客发布</p><p data-lake-id=\"30fe04ec8b1c6ece454f877354549e75\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">本文主要描述server的实现过程。</p><p data-lake-id=\"4568ed59c4db79d3b7a0fcae3269dc5d\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 id=\"6c8a220b\" data-lake-id=\"a64aaa5a9ff4d2e188365f0475992587\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">接收webhook的推送</h3><p data-lake-id=\"4e9492a581ad805e244a6430a799ce66\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"abffc935\" data-language=\"java\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-meta\" style=\"color: rgb(31, 127, 154); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">@RestController</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-meta\" style=\"color: rgb(31, 127, 154); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">@Slf4j</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">public</span> <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">class</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">WebHookController</span> {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-meta\" style=\"color: rgb(31, 127, 154); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">@PostMapping</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"/yuque/webhook\"</span>)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">public</span> <span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">String</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">webHook</span>(<span class=\"cm-meta\" style=\"color: rgb(31, 127, 154); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">@RequestBody</span> <span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Object</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">req</span>){\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">log</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">info</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">JacksonUtils</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">toJson</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">req</span>));\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">return</span> <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"\"</span>;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div><p data-lake-id=\"57fc0e9377a5f1a29f3d15bac510d221\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 id=\"45e8dd26\" data-lake-id=\"5679c46d7e53d8054532349e33e9fff0\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">清洗语雀内容</h3><p data-lake-id=\"3c1f6344ea3451ca08895fae07786833\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"52c763e8d3443bda9158f7b9b507c489\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">因为语雀会在markdown中添加一些标签，所有需要清洗掉</p><p data-lake-id=\"d274000f48f3a19bf57fb23471b49fbe\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"e7fcc9b2\" data-language=\"java\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">private</span> <span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">String</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">cleanContent</span>(<span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">String</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">content</span>){\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">content</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">content</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        .<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">replaceAll</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"&lt;br \\\\/&gt;\"</span>,<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"\\n\"</span>)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        .<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">replaceAll</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"&lt;a name=\\\".*\\\"&gt;&lt;/a&gt;\"</span>,<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"\"</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">log</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">info</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"清洗结束 {}\"</span>,<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">content</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">return</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">content</span>;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div><p data-lake-id=\"57f2c6a8e8a111e9bff7033b05540592\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 id=\"7909efd5\" data-lake-id=\"657431326b35bd37fdbe2b2d1c5d0fd6\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">图片替换</h3><p data-lake-id=\"6cd8de0905bc1a6f66f97edbedeabdd2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"69880df79e3227d4f158bc9d3039c50f\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">虽然语雀现在的图床在外部系统也可以引用，但是保险起见还是把图片下载下来自己存储。</p><p data-lake-id=\"c05833f4f1cca38767915e0aa36d522e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">使用正则表达式把图片获取出来，然后调用github api把图片上传到指定目录，然后把文章中的图片替换成新的路径。</p><p data-lake-id=\"06f504a12f131c91284484c36c58535c\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"7560eeb1\" data-language=\"java\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">public</span> <span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">void</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">uploadToGitHub</span>(<span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">String</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">title</span>,<span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">String</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">originContent</span>){\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">String</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">content</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">cleanContent</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">originContent</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">GitHubApi</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">gitHubApi</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">GitHubApi</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getInstance</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">owner</span>,<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">repo</span>,<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">token</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">RefDto</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">refDto</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">gitHubApi</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getRef</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">CommitDto</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">commitDto</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">gitHubApi</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getCommit</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">refDto</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getObject</span>().<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getSha</span>());\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// 提取图片单独上传</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Pattern</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">pattern</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Pattern</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">compile</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"!\\\\[image.png]\\\\((.*?)\\\\)\"</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Matcher</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">matcher</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">pattern</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">matcher</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">content</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">List</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">BlobListDto</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">blobListDtoArrayList</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Lists</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">newArrayList</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">while</span> (<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">matcher</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">find</span>()) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">int</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">i</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">1</span>;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">try</span> {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">            <span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">String</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">imageUrl</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">matcher</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">group</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">i</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">            <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">URI</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">uri</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">new</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">URI</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">imageUrl</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">            <span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">String</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">path</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">uri</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getPath</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">            <span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">String</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">imageName</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">path</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">substring</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">path</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">lastIndexOf</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'/'</span>) <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">+</span> <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">1</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">            <span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">String</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">githubPath</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"/assets/\"</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">+</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">imageName</span>;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">            <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">content</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">content</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">replace</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">imageUrl</span>,<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">githubPath</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">            <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">CreateBlobResponse</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">createBlobResponse</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">gitHubApi</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">createBlob</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Base64Utils</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getImageStrFromUrl</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">imageUrl</span>),<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"base64\"</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">            <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">blobListDtoArrayList</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">add</span>(<span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">new</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">BlobListDto</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">createBlobResponse</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getSha</span>(),<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">githubPath</span>));\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        }<span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">catch</span> (<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Exception</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">e</span>){\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">            <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">log</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">error</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"{}\"</span>, <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Throwables</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getStackTraceAsString</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">e</span>));\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">i</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">++</span>;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">CreateBlobResponse</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">createBlobResponse</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">gitHubApi</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">createBlob</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">content</span>,<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"utf-8\"</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">blobListDtoArrayList</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">add</span>(<span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">new</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">BlobListDto</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">createBlobResponse</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getSha</span>(),<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"content/blog/\"</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">+</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">title</span>  <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">+</span> <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\".md\"</span>));\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">List</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Map</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">String</span>,<span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Object</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;&gt;</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">treeMpas</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Lists</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">newArrayList</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">blobListDtoArrayList</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">forEach</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">i</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">-&gt;</span>{\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">treeMpas</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">add</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ImmutableMap</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">of</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"path\"</span>,<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">i</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getPath</span>(),<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"mode\"</span>,<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"100644\"</span>,<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"type\"</span>,<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"blob\"</span>,<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"sha\"</span>,<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">i</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getSha</span>()));\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    });\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">CreateTreeResponse</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">createTreeResponse</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">gitHubApi</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">createTree</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">commitDto</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getTree</span>().<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getSha</span>(),<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">treeMpas</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">CreateCommitResponse</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">createCommitResponse</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">gitHubApi</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">createCommit</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">refDto</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getObject</span>().<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getSha</span>(),<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">createTreeResponse</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getSha</span>());\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">gitHubApi</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">updataRef</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">createCommitResponse</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getSha</span>());\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div><p data-lake-id=\"ade5fe44417a3c78633e5d132e7a92eb\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"b9e18f9a2de3aa8fc332ed93db47c53f\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><a href=\"https://github.com/lmikoto/yuque-webhook\" target=\"_blank\">完整代码</a></p></div>",
    "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"adapt\" /><meta name=\"typography\" content=\"classic\" /><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\">整体的部署流程为:</p><p data-lake-id=\"d8baf9b0402c9d28cca16542da90d17c\">在语雀发布文章 -&gt; 触发语雀 webhook -&gt; server接收到文章推送 -&gt; 请求信息中抽取文章内容和必要信息 -&gt; 调用 GitHub api 更新仓库 -&gt; netlify 自动部署 -&gt; 文章在博客发布</p><p data-lake-id=\"30fe04ec8b1c6ece454f877354549e75\">本文主要描述server的实现过程。</p><p data-lake-id=\"4568ed59c4db79d3b7a0fcae3269dc5d\"><br /></p><h3 id=\"6c8a220b\" data-lake-id=\"a64aaa5a9ff4d2e188365f0475992587\">接收webhook的推送</h3><p data-lake-id=\"4e9492a581ad805e244a6430a799ce66\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22abffc935%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22%40RestController%5Cn%40Slf4j%5Cnpublic%20class%20WebHookController%20%7B%5Cn%5Cn%20%20%20%20%40PostMapping(%5C%22%2Fyuque%2Fwebhook%5C%22)%5Cn%20%20%20%20public%20String%20webHook(%40RequestBody%20Object%20req)%7B%5Cn%20%20%20%20%20%20%20%20log.info(JacksonUtils.toJson(req))%3B%5Cn%20%20%20%20%20%20%20%20return%20%5C%22%5C%22%3B%5Cn%20%20%20%20%7D%5Cn%7D%22%7D\"></card><p data-lake-id=\"57fc0e9377a5f1a29f3d15bac510d221\"><br /></p><h3 id=\"45e8dd26\" data-lake-id=\"5679c46d7e53d8054532349e33e9fff0\">清洗语雀内容</h3><p data-lake-id=\"3c1f6344ea3451ca08895fae07786833\"><br /></p><p data-lake-id=\"52c763e8d3443bda9158f7b9b507c489\">因为语雀会在markdown中添加一些标签，所有需要清洗掉</p><p data-lake-id=\"d274000f48f3a19bf57fb23471b49fbe\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22e7fcc9b2%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22private%20String%20cleanContent(String%20content)%7B%5Cn%20%20%20%20content%20%3D%20content%5Cn%20%20%20%20%20%20%20%20.replaceAll(%5C%22%3Cbr%20%5C%5C%5C%5C%2F%3E%5C%22%2C%5C%22%5C%5Cn%5C%22)%5Cn%20%20%20%20%20%20%20%20.replaceAll(%5C%22%3Ca%20name%3D%5C%5C%5C%22.*%5C%5C%5C%22%3E%3C%2Fa%3E%5C%22%2C%5C%22%5C%22)%3B%5Cn%20%20%20%20log.info(%5C%22%E6%B8%85%E6%B4%97%E7%BB%93%E6%9D%9F%20%7B%7D%5C%22%2Ccontent)%3B%5Cn%20%20%20%20return%20content%3B%5Cn%7D%22%7D\"></card><p data-lake-id=\"57f2c6a8e8a111e9bff7033b05540592\"><br /></p><h3 id=\"7909efd5\" data-lake-id=\"657431326b35bd37fdbe2b2d1c5d0fd6\">图片替换</h3><p data-lake-id=\"6cd8de0905bc1a6f66f97edbedeabdd2\"><br /></p><p data-lake-id=\"69880df79e3227d4f158bc9d3039c50f\">虽然语雀现在的图床在外部系统也可以引用，但是保险起见还是把图片下载下来自己存储。</p><p data-lake-id=\"c05833f4f1cca38767915e0aa36d522e\">使用正则表达式把图片获取出来，然后调用github api把图片上传到指定目录，然后把文章中的图片替换成新的路径。</p><p data-lake-id=\"06f504a12f131c91284484c36c58535c\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%227560eeb1%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22public%20void%20uploadToGitHub(String%20title%2CString%20originContent)%7B%5Cn%20%20%20%20String%20content%20%3D%20cleanContent(originContent)%3B%5Cn%20%20%20%20GitHubApi%20gitHubApi%20%3D%20GitHubApi.getInstance(owner%2Crepo%2Ctoken)%3B%5Cn%20%20%20%20RefDto%20refDto%20%3D%20gitHubApi.getRef()%3B%5Cn%20%20%20%20CommitDto%20commitDto%20%3D%20gitHubApi.getCommit(refDto.getObject().getSha())%3B%5Cn%5Cn%20%20%20%20%2F%2F%20%E6%8F%90%E5%8F%96%E5%9B%BE%E7%89%87%E5%8D%95%E7%8B%AC%E4%B8%8A%E4%BC%A0%5Cn%20%20%20%20Pattern%20pattern%20%3D%20Pattern.compile(%5C%22!%5C%5C%5C%5C%5Bimage.png%5D%5C%5C%5C%5C((.*%3F)%5C%5C%5C%5C)%5C%22)%3B%5Cn%20%20%20%20Matcher%20matcher%20%3D%20pattern.matcher(content)%3B%5Cn%20%20%20%20List%3CBlobListDto%3E%20blobListDtoArrayList%20%3D%20Lists.newArrayList()%3B%5Cn%20%20%20%20while%20(matcher.find())%20%7B%5Cn%20%20%20%20%20%20%20%20int%20i%20%3D%201%3B%5Cn%20%20%20%20%20%20%20%20try%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20String%20imageUrl%20%3D%20matcher.group(i)%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20URI%20uri%20%3D%20new%20URI(imageUrl)%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20String%20path%20%3D%20uri.getPath()%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20String%20imageName%20%3D%20path.substring(path.lastIndexOf('%2F')%20%2B%201)%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20String%20githubPath%20%3D%20%5C%22%2Fassets%2F%5C%22%20%2B%20imageName%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20content%20%3D%20content.replace(imageUrl%2CgithubPath)%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20CreateBlobResponse%20createBlobResponse%20%3D%20gitHubApi.createBlob(Base64Utils.getImageStrFromUrl(imageUrl)%2C%5C%22base64%5C%22)%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20blobListDtoArrayList.add(new%20BlobListDto(createBlobResponse.getSha()%2CgithubPath))%3B%5Cn%20%20%20%20%20%20%20%20%7Dcatch%20(Exception%20e)%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20log.error(%5C%22%7B%7D%5C%22%2C%20Throwables.getStackTraceAsString(e))%3B%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20i%2B%2B%3B%5Cn%20%20%20%20%7D%5Cn%20%20%20%20CreateBlobResponse%20createBlobResponse%20%3D%20gitHubApi.createBlob(content%2C%5C%22utf-8%5C%22)%3B%5Cn%20%20%20%20blobListDtoArrayList.add(new%20BlobListDto(createBlobResponse.getSha()%2C%5C%22content%2Fblog%2F%5C%22%20%2B%20title%20%20%2B%20%5C%22.md%5C%22))%3B%5Cn%20%20%20%20List%3CMap%3CString%2CObject%3E%3E%20treeMpas%20%3D%20Lists.newArrayList()%3B%5Cn%20%20%20%20blobListDtoArrayList.forEach(i-%3E%7B%5Cn%20%20%20%20%20%20%20%20treeMpas.add(ImmutableMap.of(%5C%22path%5C%22%2Ci.getPath()%2C%5C%22mode%5C%22%2C%5C%22100644%5C%22%2C%5C%22type%5C%22%2C%5C%22blob%5C%22%2C%5C%22sha%5C%22%2Ci.getSha()))%3B%5Cn%20%20%20%20%7D)%3B%5Cn%20%20%20%20CreateTreeResponse%20createTreeResponse%20%3D%20gitHubApi.createTree(commitDto.getTree().getSha()%2CtreeMpas)%3B%5Cn%20%20%20%20CreateCommitResponse%20createCommitResponse%20%3D%20gitHubApi.createCommit(refDto.getObject().getSha()%2CcreateTreeResponse.getSha())%3B%5Cn%20%20%20%20gitHubApi.updataRef(createCommitResponse.getSha())%3B%5Cn%7D%22%7D\"></card><p data-lake-id=\"ade5fe44417a3c78633e5d132e7a92eb\"><br /></p><p data-lake-id=\"b9e18f9a2de3aa8fc332ed93db47c53f\"><a href=\"https://github.com/lmikoto/yuque-webhook\" target=\"_blank\">完整代码</a></p>",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"adapt\" /><meta name=\"typography\" content=\"classic\" /><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\">整体的部署流程为:</p><p data-lake-id=\"d8baf9b0402c9d28cca16542da90d17c\">在语雀发布文章 -&gt; 触发语雀webhook -&gt; server接收到文章推送 -&gt; 请求信息中抽取文章内容和必要信息 -&gt; 调用GitHub api更新仓库 -&gt; netlify 自动部署 -&gt; 文章在博客发布</p><p data-lake-id=\"30fe04ec8b1c6ece454f877354549e75\">本文主要描述server的实现过程。</p><p data-lake-id=\"4568ed59c4db79d3b7a0fcae3269dc5d\"><br /></p><h3 id=\"6c8a220b\" data-lake-id=\"a64aaa5a9ff4d2e188365f0475992587\">接收webhook的推送</h3><p data-lake-id=\"4e9492a581ad805e244a6430a799ce66\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22abffc935%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22%40RestController%5Cn%40Slf4j%5Cnpublic%20class%20WebHookController%20%7B%5Cn%5Cn%20%20%20%20%40PostMapping(%5C%22%2Fyuque%2Fwebhook%5C%22)%5Cn%20%20%20%20public%20String%20webHook(%40RequestBody%20Object%20req)%7B%5Cn%20%20%20%20%20%20%20%20log.info(JacksonUtils.toJson(req))%3B%5Cn%20%20%20%20%20%20%20%20return%20%5C%22%5C%22%3B%5Cn%20%20%20%20%7D%5Cn%7D%22%7D\"></card><p data-lake-id=\"57fc0e9377a5f1a29f3d15bac510d221\"><br /></p><h3 id=\"45e8dd26\" data-lake-id=\"5679c46d7e53d8054532349e33e9fff0\">清洗语雀内容</h3><p data-lake-id=\"3c1f6344ea3451ca08895fae07786833\"><br /></p><p data-lake-id=\"52c763e8d3443bda9158f7b9b507c489\">因为语雀会在<code>markdown</code>中添加一些标签，所有需要清洗掉</p><p data-lake-id=\"d274000f48f3a19bf57fb23471b49fbe\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22e7fcc9b2%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22private%20String%20cleanContent(String%20content)%7B%5Cn%20%20%20%20content%20%3D%20content%5Cn%20%20%20%20%20%20%20%20.replaceAll(%5C%22%3Cbr%20%5C%5C%5C%5C%2F%3E%5C%22%2C%5C%22%5C%5Cn%5C%22)%5Cn%20%20%20%20%20%20%20%20.replaceAll(%5C%22%3Ca%20name%3D%5C%5C%5C%22.*%5C%5C%5C%22%3E%3C%2Fa%3E%5C%22%2C%5C%22%5C%22)%3B%5Cn%20%20%20%20log.info(%5C%22%E6%B8%85%E6%B4%97%E7%BB%93%E6%9D%9F%20%7B%7D%5C%22%2Ccontent)%3B%5Cn%20%20%20%20return%20content%3B%5Cn%7D%22%7D\"></card><p data-lake-id=\"57f2c6a8e8a111e9bff7033b05540592\"><br /></p><h3 id=\"7909efd5\" data-lake-id=\"657431326b35bd37fdbe2b2d1c5d0fd6\">图片替换</h3><p data-lake-id=\"6cd8de0905bc1a6f66f97edbedeabdd2\"><br /></p><p data-lake-id=\"69880df79e3227d4f158bc9d3039c50f\">虽然语雀现在的图床在外部系统也可以引用，但是保险起见还是把图片下载下来自己存储。</p><p data-lake-id=\"c05833f4f1cca38767915e0aa36d522e\">使用正则表达式把图片获取出来，然后调用<code>github api</code>把图片上传到指定目录，然后把文章中的图片替换成新的路径。</p><p data-lake-id=\"06f504a12f131c91284484c36c58535c\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%227560eeb1%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22public%20void%20uploadToGitHub(String%20title%2CString%20originContent)%7B%5Cn%20%20%20%20String%20content%20%3D%20cleanContent(originContent)%3B%5Cn%20%20%20%20GitHubApi%20gitHubApi%20%3D%20GitHubApi.getInstance(owner%2Crepo%2Ctoken)%3B%5Cn%20%20%20%20RefDto%20refDto%20%3D%20gitHubApi.getRef()%3B%5Cn%20%20%20%20CommitDto%20commitDto%20%3D%20gitHubApi.getCommit(refDto.getObject().getSha())%3B%5Cn%5Cn%20%20%20%20%2F%2F%20%E6%8F%90%E5%8F%96%E5%9B%BE%E7%89%87%E5%8D%95%E7%8B%AC%E4%B8%8A%E4%BC%A0%5Cn%20%20%20%20Pattern%20pattern%20%3D%20Pattern.compile(%5C%22!%5C%5C%5C%5C%5Bimage.png%5D%5C%5C%5C%5C((.*%3F)%5C%5C%5C%5C)%5C%22)%3B%5Cn%20%20%20%20Matcher%20matcher%20%3D%20pattern.matcher(content)%3B%5Cn%20%20%20%20List%3CBlobListDto%3E%20blobListDtoArrayList%20%3D%20Lists.newArrayList()%3B%5Cn%20%20%20%20while%20(matcher.find())%20%7B%5Cn%20%20%20%20%20%20%20%20int%20i%20%3D%201%3B%5Cn%20%20%20%20%20%20%20%20try%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20String%20imageUrl%20%3D%20matcher.group(i)%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20URI%20uri%20%3D%20new%20URI(imageUrl)%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20String%20path%20%3D%20uri.getPath()%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20String%20imageName%20%3D%20path.substring(path.lastIndexOf('%2F')%20%2B%201)%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20String%20githubPath%20%3D%20%5C%22%2Fassets%2F%5C%22%20%2B%20imageName%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20content%20%3D%20content.replace(imageUrl%2CgithubPath)%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20CreateBlobResponse%20createBlobResponse%20%3D%20gitHubApi.createBlob(Base64Utils.getImageStrFromUrl(imageUrl)%2C%5C%22base64%5C%22)%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20blobListDtoArrayList.add(new%20BlobListDto(createBlobResponse.getSha()%2CgithubPath))%3B%5Cn%20%20%20%20%20%20%20%20%7Dcatch%20(Exception%20e)%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20log.error(%5C%22%7B%7D%5C%22%2C%20Throwables.getStackTraceAsString(e))%3B%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20i%2B%2B%3B%5Cn%20%20%20%20%7D%5Cn%20%20%20%20CreateBlobResponse%20createBlobResponse%20%3D%20gitHubApi.createBlob(content%2C%5C%22utf-8%5C%22)%3B%5Cn%20%20%20%20blobListDtoArrayList.add(new%20BlobListDto(createBlobResponse.getSha()%2C%5C%22content%2Fblog%2F%5C%22%20%2B%20title%20%20%2B%20%5C%22.md%5C%22))%3B%5Cn%20%20%20%20List%3CMap%3CString%2CObject%3E%3E%20treeMpas%20%3D%20Lists.newArrayList()%3B%5Cn%20%20%20%20blobListDtoArrayList.forEach(i-%3E%7B%5Cn%20%20%20%20%20%20%20%20treeMpas.add(ImmutableMap.of(%5C%22path%5C%22%2Ci.getPath()%2C%5C%22mode%5C%22%2C%5C%22100644%5C%22%2C%5C%22type%5C%22%2C%5C%22blob%5C%22%2C%5C%22sha%5C%22%2Ci.getSha()))%3B%5Cn%20%20%20%20%7D)%3B%5Cn%20%20%20%20CreateTreeResponse%20createTreeResponse%20%3D%20gitHubApi.createTree(commitDto.getTree().getSha()%2CtreeMpas)%3B%5Cn%20%20%20%20CreateCommitResponse%20createCommitResponse%20%3D%20gitHubApi.createCommit(refDto.getObject().getSha()%2CcreateTreeResponse.getSha())%3B%5Cn%20%20%20%20gitHubApi.updataRef(createCommitResponse.getSha())%3B%5Cn%7D%22%7D\"></card><p data-lake-id=\"ade5fe44417a3c78633e5d132e7a92eb\"><br /></p><p data-lake-id=\"b9e18f9a2de3aa8fc332ed93db47c53f\"><a href=\"https://github.com/lmikoto/yuque-webhook\" target=\"_blank\">完整代码</a></p>",
    "public": 1,
    "status": 0,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2020-09-29T14:01:51.000Z",
    "deleted_at": null,
    "created_at": "2020-09-29T13:55:09.000Z",
    "updated_at": "2020-09-29T14:01:51.000Z",
    "published_at": "2020-09-29T13:55:51.000Z",
    "first_published_at": "2020-09-29T13:55:51.000Z",
    "word_count": 619,
    "cover": null,
    "description": "整体的部署流程为:在语雀发布文章 -> 触发语雀 webhook -> server接收到文章推送 -> 请求信息中抽取文章内容和必要信息 -> 调用 GitHub api 更新仓库 -> netlify 自动部署 -> 文章在博客发布本文主要描述server的实现过程。接收webhook的推...",
    "custom_description": null,
    "hits": 0,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 13904257,
    "slug": "aro88f",
    "title": "终于解决了吃饭问题",
    "book_id": 1840429,
    "book": {
      "id": 1840429,
      "type": "Book",
      "slug": "lmikoto",
      "name": "笔记",
      "user_id": 328252,
      "description": "",
      "creator_id": 328252,
      "public": 0,
      "items_count": 5,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2020-09-29T14:00:07.257Z",
      "updated_at": "2020-09-29T14:00:07.000Z",
      "created_at": "2020-09-29T12:57:45.000Z",
      "namespace": "lmikoto/lmikoto",
      "user": {
        "id": 328252,
        "type": "User",
        "login": "lmikoto",
        "name": "lmikoto",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/328252/1578028416108-avatar/38f12fe6-da0d-471e-819c-7131fadbd750.png",
        "books_count": 1,
        "public_books_count": 0,
        "followers_count": 0,
        "following_count": 0,
        "created_at": "2019-04-25T04:31:29.000Z",
        "updated_at": "2020-09-29T12:57:45.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 328252,
    "creator": {
      "id": 328252,
      "type": "User",
      "login": "lmikoto",
      "name": "lmikoto",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/328252/1578028416108-avatar/38f12fe6-da0d-471e-819c-7131fadbd750.png",
      "books_count": 1,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2019-04-25T04:31:29.000Z",
      "updated_at": "2020-09-29T12:57:45.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "每次到吃🍚的点都会纠结到底吃啥，食堂那么多窗口，今天吃哪一个。<br />终于下定决心写个程序来帮我选择了。<br />首先分析一下需求<br />\n\n- 选择食堂的哪个窗口吃饭。最好带上权重，比如我更喜欢吃烧腊而不喜欢小笼包。但是偶尔想吃小笼包换换口味。这样可以把小笼包权重设低一点。\n- 这个程序最好不是只为吃饭服务。别的其他有选择障碍的东西也可以用这个程序来选择。\n- 最好可以带上存储功能，我关掉之后下次打开东西还在。\n\n\n<br />这些需求一个网页就可以解决掉了。存储功能使用localStorage也足够用了。<br />接下来就是实现。<br />技术栈采用 react + antd，加权随机采用扩展集合，使每一项出现的次数与其权重正相关，用均匀随机算法来从中选取的算法来解决，虽然这个算法耗费空间，但是对于这个场景来说足够了。<br />界面<br />![b3be7661-7877-4957-9fff-9ccf9c94ebbb.png](https://cdn.nlark.com/yuque/0/2020/png/328252/1601387936578-a7085974-d3c6-4d49-ae4d-9d900255595a.png#align=left&display=inline&height=1354&margin=%5Bobject%20Object%5D&name=b3be7661-7877-4957-9fff-9ccf9c94ebbb.png&originHeight=1354&originWidth=1084&size=80328&status=done&style=none&width=1084)<br />![1562d972-4598-41ee-8a5d-8160a960fe69.png](https://cdn.nlark.com/yuque/0/2020/png/328252/1601387946304-ffcfc369-bc2b-4f6d-af6d-d6a797c63612.png#align=left&display=inline&height=348&margin=%5Bobject%20Object%5D&name=1562d972-4598-41ee-8a5d-8160a960fe69.png&originHeight=348&originWidth=858&size=30403&status=done&style=none&width=858)<br />[项目访问链接](https://select.lmikoto.com/)<br />[源代码](https://github.com/lmikoto/select)\n",
    "body_draft": "每次到吃🍚的点都会纠结到底吃啥，食堂那么多窗口，今天吃哪一个。<br />终于下定决心写个程序来帮我选择了。<br />首先分析一下需求<br />\n\n- 选择食堂的哪个窗口吃饭。最好带上权重，比如我更喜欢吃烧腊而不喜欢小笼包。但是偶尔想吃小笼包换换口味。这样可以把小笼包权重设低一点。\n- 这个程序最好不是只为吃饭服务。别的其他有选择障碍的东西也可以用这个程序来选择。\n- 最好可以带上存储功能，我关掉之后下次打开东西还在。\n\n\n<br />这些需求一个网页就可以解决掉了。存储功能使用localStorage也足够用了。<br />接下来就是实现。<br />技术栈采用 react + antd，加权随机采用扩展集合，使每一项出现的次数与其权重正相关，用均匀随机算法来从中选取的算法来解决，虽然这个算法耗费空间，但是对于这个场景来说足够了。<br />界面<br />![b3be7661-7877-4957-9fff-9ccf9c94ebbb.png](https://cdn.nlark.com/yuque/0/2020/png/328252/1601387936578-a7085974-d3c6-4d49-ae4d-9d900255595a.png#align=left&display=inline&height=1354&margin=%5Bobject%20Object%5D&name=b3be7661-7877-4957-9fff-9ccf9c94ebbb.png&originHeight=1354&originWidth=1084&size=80328&status=done&style=none&width=1084)<br />![1562d972-4598-41ee-8a5d-8160a960fe69.png](https://cdn.nlark.com/yuque/0/2020/png/328252/1601387946304-ffcfc369-bc2b-4f6d-af6d-d6a797c63612.png#align=left&display=inline&height=348&margin=%5Bobject%20Object%5D&name=1562d972-4598-41ee-8a5d-8160a960fe69.png&originHeight=348&originWidth=858&size=30403&status=done&style=none&width=858)<br />[项目访问链接](https://select.lmikoto.com/)<br />[源代码](https://github.com/lmikoto/select)\n",
    "body_html": "<!doctype html><div class=\"lake-content-editor-core lake-engine lake-typography-classic\" data-lake-element=\"root\" data-selection-undefined=\"%7B%22path%22%3A%5B%5B11%2C0%5D%2C%5B11%2C0%5D%5D%2C%22active%22%3Atrue%7D\"><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">每次到吃🍚的点都会纠结到底吃啥，食堂那么多窗口，今天吃哪一个。</p><p data-lake-id=\"be2ab4e9f8550f24d91060aaa6c7b242\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">终于下定决心写个程序来帮我选择了。</p><p data-lake-id=\"c5e8c4e0d5042a84bab5a68a0023d186\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">首先分析一下需求</p><p data-lake-id=\"a69f83371e40726e0ca4d002babe33b9\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><ul data-lake-id=\"120d44e352118850bb76a34ac419c377\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"ff0a52a4d27fa48332f59cb21b7c874d\">选择食堂的哪个窗口吃饭。最好带上权重，比如我更喜欢吃烧腊而不喜欢小笼包。但是偶尔想吃小笼包换换口味。这样可以把小笼包权重设低一点。</li><li data-lake-id=\"a01a1101c18c2a31ba5aae7709f6abd8\">这个程序最好不是只为吃饭服务。别的其他有选择障碍的东西也可以用这个程序来选择。</li><li data-lake-id=\"d720694e954907af6addea78ca9220c4\">最好可以带上存储功能，我关掉之后下次打开东西还在。</li></ul><p data-lake-id=\"69d9f8033f57c8a83543054cbb500c46\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"1db3356ccb1963b8ad5896bcf6f7017e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">这些需求一个网页就可以解决掉了。存储功能使用localStorage也足够用了。</p><p data-lake-id=\"f73f3fc93bc95d1130bb3ea4c408638f\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">接下来就是实现。</p><p data-lake-id=\"a9d45633badbe29340e40308a4c1efd0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">技术栈采用 react + antd，加权随机采用扩展集合，使每一项出现的次数与其权重正相关，用均匀随机算法来从中选取的算法来解决，虽然这个算法耗费空间，但是对于这个场景来说足够了。</p><p data-lake-id=\"8437e5b78ccc7dc710ca3befbaf7a31f\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">界面</p><p data-lake-id=\"2b67d07ed7042f407284735c420c34b4\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" class=\"lake-card-margin-top lake-card-margin-bottom\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/328252/1601387936578-a7085974-d3c6-4d49-ae4d-9d900255595a.png\" data-raw-src=\"\" class=\"image lake-drag-image\" alt=\"b3be7661-7877-4957-9fff-9ccf9c94ebbb.png\" title=\"b3be7661-7877-4957-9fff-9ccf9c94ebbb.png\" data-height=\"1354px\" style=\"visibility: visible; width: 1084px;\"></span></p><p data-lake-id=\"4d45e75d96d01f24ae99f459915906c4\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" class=\"lake-card-margin-top lake-card-margin-bottom\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/328252/1601387946304-ffcfc369-bc2b-4f6d-af6d-d6a797c63612.png\" data-raw-src=\"\" class=\"image lake-drag-image\" alt=\"1562d972-4598-41ee-8a5d-8160a960fe69.png\" title=\"1562d972-4598-41ee-8a5d-8160a960fe69.png\" data-height=\"348px\" style=\"visibility: visible; width: 858px;\"></span></p><p data-lake-id=\"a8355618dfb3fa727e847d280a40cfb5\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><a href=\"https://select.lmikoto.com/\" target=\"_blank\">项目访问链接</a></p><p data-lake-id=\"0c9be7590cc24c0136525934053d2edc\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><a href=\"https://github.com/lmikoto/select\" target=\"_blank\">源代码</a></p></div>",
    "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"adapt\" /><meta name=\"typography\" content=\"classic\" /><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\">每次到吃🍚的点都会纠结到底吃啥，食堂那么多窗口，今天吃哪一个。</p><p data-lake-id=\"be2ab4e9f8550f24d91060aaa6c7b242\">终于下定决心写个程序来帮我选择了。</p><p data-lake-id=\"c5e8c4e0d5042a84bab5a68a0023d186\">首先分析一下需求</p><p data-lake-id=\"a69f83371e40726e0ca4d002babe33b9\"><br /></p><ul data-lake-id=\"120d44e352118850bb76a34ac419c377\"><li data-lake-id=\"ff0a52a4d27fa48332f59cb21b7c874d\">选择食堂的哪个窗口吃饭。最好带上权重，比如我更喜欢吃烧腊而不喜欢小笼包。但是偶尔想吃小笼包换换口味。这样可以把小笼包权重设低一点。</li><li data-lake-id=\"a01a1101c18c2a31ba5aae7709f6abd8\">这个程序最好不是只为吃饭服务。别的其他有选择障碍的东西也可以用这个程序来选择。</li><li data-lake-id=\"d720694e954907af6addea78ca9220c4\">最好可以带上存储功能，我关掉之后下次打开东西还在。</li></ul><p data-lake-id=\"69d9f8033f57c8a83543054cbb500c46\"><br /></p><p data-lake-id=\"1db3356ccb1963b8ad5896bcf6f7017e\">这些需求一个网页就可以解决掉了。存储功能使用localStorage也足够用了。</p><p data-lake-id=\"f73f3fc93bc95d1130bb3ea4c408638f\">接下来就是实现。</p><p data-lake-id=\"a9d45633badbe29340e40308a4c1efd0\">技术栈采用 react + antd，加权随机采用扩展集合，使每一项出现的次数与其权重正相关，用均匀随机算法来从中选取的算法来解决，虽然这个算法耗费空间，但是对于这个场景来说足够了。</p><p data-lake-id=\"8437e5b78ccc7dc710ca3befbaf7a31f\">界面</p><p data-lake-id=\"2b67d07ed7042f407284735c420c34b4\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F328252%2F1601387936578-a7085974-d3c6-4d49-ae4d-9d900255595a.png%22%2C%22originWidth%22%3A1084%2C%22originHeight%22%3A1354%2C%22name%22%3A%22b3be7661-7877-4957-9fff-9ccf9c94ebbb.png%22%2C%22size%22%3A80328%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A73.665184%2C%22y%22%3A61.993027%2C%22width%22%3A93.990246%2C%22height%22%3A48.186058%2C%22text%22%3A%22%E9%A1%B9%E7%9B%AE%22%7D%2C%7B%22x%22%3A74.54104%2C%22y%22%3A270.08728%2C%22width%22%3A167.87531%2C%22height%22%3A39.04595999999998%2C%22text%22%3A%22%E9%A1%B9%E7%9B%AE%E5%90%8D%E7%A7%B0%22%7D%2C%7B%22x%22%3A109.985146%2C%22y%22%3A387.3238%2C%22width%22%3A84.152944%2C%22height%22%3A44.26859999999999%2C%22text%22%3A%22%E5%90%83%E9%A5%AD%22%7D%2C%7B%22x%22%3A76.297424%2C%22y%22%3A556.4698%2C%22width%22%3A166.561096%2C%22height%22%3A41.499900000000025%2C%22text%22%3A%22%E5%8D%95%E8%A1%8C%E5%90%8D%E7%A7%B0%22%7D%2C%7B%22x%22%3A109.42122%2C%22y%22%3A678.02386%2C%22width%22%3A82.29267999999999%2C%22height%22%3A43.48684000000003%2C%22text%22%3A%22%E7%83%A7%E8%85%8A%22%7D%2C%7B%22x%22%3A689.05023%2C%22y%22%3A684.5234%2C%22width%22%3A50.27356999999995%2C%22height%22%3A34.06314999999995%2C%22text%22%3A%2210%22%7D%2C%7B%22x%22%3A76.621574%2C%22y%22%3A847.333%2C%22width%22%3A164.657936%2C%22height%22%3A41.68115999999998%2C%22text%22%3A%22%E5%8D%95%E8%A1%8C%E5%90%8D%E7%A7%B0%22%7D%2C%7B%22x%22%3A108.08698%2C%22y%22%3A963.559%2C%22width%22%3A48.28291%2C%22height%22%3A48.05799999999999%2C%22text%22%3A%22%E9%A5%AD%22%7D%2C%7B%22x%22%3A687.5543%2C%22y%22%3A969.27344%2C%22width%22%3A51.24720000000002%2C%22height%22%3A38.64958999999999%2C%22text%22%3A%2210%22%7D%2C%7B%22x%22%3A75.66208%2C%22y%22%3A1134.3124%2C%22width%22%3A167.03534%2C%22height%22%3A46.40859999999998%2C%22text%22%3A%22%E5%8D%95%E8%A1%8C%E5%90%8D%E7%A7%B0%22%7D%2C%7B%22x%22%3A111.45669%2C%22y%22%3A1254.6536%2C%22width%22%3A87.32348%2C%22height%22%3A49.0148999999999%2C%22text%22%3A%22%E8%B1%86%E8%85%90%22%7D%2C%7B%22x%22%3A687.61847%2C%22y%22%3A1262.2728%2C%22width%22%3A50.26622999999995%2C%22height%22%3A33.84159999999997%2C%22text%22%3A%2210%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%E9%A1%B9%E7%9B%AE%20%E9%A1%B9%E7%9B%AE%E5%90%8D%E7%A7%B0%20%E5%90%83%E9%A5%AD%20%E5%8D%95%E8%A1%8C%E5%90%8D%E7%A7%B0%20%E7%83%A7%E8%85%8A%2010%20%E5%8D%95%E8%A1%8C%E5%90%8D%E7%A7%B0%20%E9%A5%AD%2010%20%E5%8D%95%E8%A1%8C%E5%90%8D%E7%A7%B0%20%E8%B1%86%E8%85%90%2010%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A1084%2C%22height%22%3A1354%7D\"></card></p><p data-lake-id=\"4d45e75d96d01f24ae99f459915906c4\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F328252%2F1601387946304-ffcfc369-bc2b-4f6d-af6d-d6a797c63612.png%22%2C%22originWidth%22%3A858%2C%22originHeight%22%3A348%2C%22name%22%3A%221562d972-4598-41ee-8a5d-8160a960fe69.png%22%2C%22size%22%3A30403%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A148.97383%2C%22y%22%3A81.97252%2C%22width%22%3A178.739%2C%22height%22%3A33.606759999999994%2C%22text%22%3A%22%E7%BB%93%E6%9E%9C%E6%98%AF...%22%7D%2C%7B%22x%22%3A150.07416%2C%22y%22%3A141.01608%2C%22width%22%3A56.584299999999985%2C%22height%22%3A27.75791000000001%2C%22text%22%3A%22%E7%83%A7%E8%85%8A%22%7D%2C%7B%22x%22%3A682.9283%2C%22y%22%3A243.2655%2C%22width%22%3A65.61095%2C%22height%22%3A28.11254999999997%2C%22text%22%3A%22%E7%A1%AE%E8%AE%A4%22%7D%2C%7B%22x%22%3A539.7487%2C%22y%22%3A243.65085%2C%22width%22%3A63.0942%2C%22height%22%3A28.46735000000001%2C%22text%22%3A%22%E5%8F%96%E6%B6%88%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%E7%BB%93%E6%9E%9C%E6%98%AF...%20%E7%83%A7%E8%85%8A%20%E7%A1%AE%E8%AE%A4%20%E5%8F%96%E6%B6%88%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A858%2C%22height%22%3A348%7D\"></card></p><p data-lake-id=\"a8355618dfb3fa727e847d280a40cfb5\"><a href=\"https://select.lmikoto.com/\" target=\"_blank\">项目访问链接</a></p><p data-lake-id=\"0c9be7590cc24c0136525934053d2edc\"><a href=\"https://github.com/lmikoto/select\" target=\"_blank\">源代码</a></p>",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"adapt\" /><meta name=\"typography\" content=\"classic\" /><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\">每次到吃🍚的点都会纠结到底吃啥，食堂那么多窗口，今天吃哪一个。</p><p data-lake-id=\"be2ab4e9f8550f24d91060aaa6c7b242\">终于下定决心写个程序来帮我选择了。</p><p data-lake-id=\"c5e8c4e0d5042a84bab5a68a0023d186\">首先分析一下需求</p><p data-lake-id=\"a69f83371e40726e0ca4d002babe33b9\"><br /></p><ul data-lake-id=\"120d44e352118850bb76a34ac419c377\"><li data-lake-id=\"ff0a52a4d27fa48332f59cb21b7c874d\">选择食堂的哪个窗口吃饭。最好带上权重，比如我更喜欢吃烧腊而不喜欢小笼包。但是偶尔想吃小笼包换换口味。这样可以把小笼包权重设低一点。</li><li data-lake-id=\"a01a1101c18c2a31ba5aae7709f6abd8\">这个程序最好不是只为吃饭服务。别的其他有选择障碍的东西也可以用这个程序来选择。</li><li data-lake-id=\"d720694e954907af6addea78ca9220c4\">最好可以带上存储功能，我关掉之后下次打开东西还在。</li></ul><p data-lake-id=\"69d9f8033f57c8a83543054cbb500c46\"><br /></p><p data-lake-id=\"1db3356ccb1963b8ad5896bcf6f7017e\">这些需求一个网页就可以解决掉了。存储功能使用localStorage也足够用了。</p><p data-lake-id=\"f73f3fc93bc95d1130bb3ea4c408638f\">接下来就是实现。</p><p data-lake-id=\"a9d45633badbe29340e40308a4c1efd0\">技术栈采用 react + antd，加权随机采用扩展集合，使每一项出现的次数与其权重正相关，用均匀随机算法来从中选取的算法来解决，虽然这个算法耗费空间，但是对于这个场景来说足够了。</p><p data-lake-id=\"8437e5b78ccc7dc710ca3befbaf7a31f\">界面</p><p data-lake-id=\"2b67d07ed7042f407284735c420c34b4\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F328252%2F1601387936578-a7085974-d3c6-4d49-ae4d-9d900255595a.png%22%2C%22originWidth%22%3A1084%2C%22originHeight%22%3A1354%2C%22name%22%3A%22b3be7661-7877-4957-9fff-9ccf9c94ebbb.png%22%2C%22size%22%3A80328%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A73.665184%2C%22y%22%3A61.993027%2C%22width%22%3A93.990246%2C%22height%22%3A48.186058%2C%22text%22%3A%22%E9%A1%B9%E7%9B%AE%22%7D%2C%7B%22x%22%3A74.54104%2C%22y%22%3A270.08728%2C%22width%22%3A167.87531%2C%22height%22%3A39.04595999999998%2C%22text%22%3A%22%E9%A1%B9%E7%9B%AE%E5%90%8D%E7%A7%B0%22%7D%2C%7B%22x%22%3A109.985146%2C%22y%22%3A387.3238%2C%22width%22%3A84.152944%2C%22height%22%3A44.26859999999999%2C%22text%22%3A%22%E5%90%83%E9%A5%AD%22%7D%2C%7B%22x%22%3A76.297424%2C%22y%22%3A556.4698%2C%22width%22%3A166.561096%2C%22height%22%3A41.499900000000025%2C%22text%22%3A%22%E5%8D%95%E8%A1%8C%E5%90%8D%E7%A7%B0%22%7D%2C%7B%22x%22%3A109.42122%2C%22y%22%3A678.02386%2C%22width%22%3A82.29267999999999%2C%22height%22%3A43.48684000000003%2C%22text%22%3A%22%E7%83%A7%E8%85%8A%22%7D%2C%7B%22x%22%3A689.05023%2C%22y%22%3A684.5234%2C%22width%22%3A50.27356999999995%2C%22height%22%3A34.06314999999995%2C%22text%22%3A%2210%22%7D%2C%7B%22x%22%3A76.621574%2C%22y%22%3A847.333%2C%22width%22%3A164.657936%2C%22height%22%3A41.68115999999998%2C%22text%22%3A%22%E5%8D%95%E8%A1%8C%E5%90%8D%E7%A7%B0%22%7D%2C%7B%22x%22%3A108.08698%2C%22y%22%3A963.559%2C%22width%22%3A48.28291%2C%22height%22%3A48.05799999999999%2C%22text%22%3A%22%E9%A5%AD%22%7D%2C%7B%22x%22%3A687.5543%2C%22y%22%3A969.27344%2C%22width%22%3A51.24720000000002%2C%22height%22%3A38.64958999999999%2C%22text%22%3A%2210%22%7D%2C%7B%22x%22%3A75.66208%2C%22y%22%3A1134.3124%2C%22width%22%3A167.03534%2C%22height%22%3A46.40859999999998%2C%22text%22%3A%22%E5%8D%95%E8%A1%8C%E5%90%8D%E7%A7%B0%22%7D%2C%7B%22x%22%3A111.45669%2C%22y%22%3A1254.6536%2C%22width%22%3A87.32348%2C%22height%22%3A49.0148999999999%2C%22text%22%3A%22%E8%B1%86%E8%85%90%22%7D%2C%7B%22x%22%3A687.61847%2C%22y%22%3A1262.2728%2C%22width%22%3A50.26622999999995%2C%22height%22%3A33.84159999999997%2C%22text%22%3A%2210%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%E9%A1%B9%E7%9B%AE%20%E9%A1%B9%E7%9B%AE%E5%90%8D%E7%A7%B0%20%E5%90%83%E9%A5%AD%20%E5%8D%95%E8%A1%8C%E5%90%8D%E7%A7%B0%20%E7%83%A7%E8%85%8A%2010%20%E5%8D%95%E8%A1%8C%E5%90%8D%E7%A7%B0%20%E9%A5%AD%2010%20%E5%8D%95%E8%A1%8C%E5%90%8D%E7%A7%B0%20%E8%B1%86%E8%85%90%2010%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A1084%2C%22height%22%3A1354%7D\"></card></p><p data-lake-id=\"4d45e75d96d01f24ae99f459915906c4\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F328252%2F1601387946304-ffcfc369-bc2b-4f6d-af6d-d6a797c63612.png%22%2C%22originWidth%22%3A858%2C%22originHeight%22%3A348%2C%22name%22%3A%221562d972-4598-41ee-8a5d-8160a960fe69.png%22%2C%22size%22%3A30403%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A148.97383%2C%22y%22%3A81.97252%2C%22width%22%3A178.739%2C%22height%22%3A33.606759999999994%2C%22text%22%3A%22%E7%BB%93%E6%9E%9C%E6%98%AF...%22%7D%2C%7B%22x%22%3A150.07416%2C%22y%22%3A141.01608%2C%22width%22%3A56.584299999999985%2C%22height%22%3A27.75791000000001%2C%22text%22%3A%22%E7%83%A7%E8%85%8A%22%7D%2C%7B%22x%22%3A682.9283%2C%22y%22%3A243.2655%2C%22width%22%3A65.61095%2C%22height%22%3A28.11254999999997%2C%22text%22%3A%22%E7%A1%AE%E8%AE%A4%22%7D%2C%7B%22x%22%3A539.7487%2C%22y%22%3A243.65085%2C%22width%22%3A63.0942%2C%22height%22%3A28.46735000000001%2C%22text%22%3A%22%E5%8F%96%E6%B6%88%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%E7%BB%93%E6%9E%9C%E6%98%AF...%20%E7%83%A7%E8%85%8A%20%E7%A1%AE%E8%AE%A4%20%E5%8F%96%E6%B6%88%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A858%2C%22height%22%3A348%7D\"></card></p><p data-lake-id=\"a8355618dfb3fa727e847d280a40cfb5\"><a href=\"https://select.lmikoto.com/\" target=\"_blank\">项目访问链接</a></p><p data-lake-id=\"0c9be7590cc24c0136525934053d2edc\"><a href=\"https://github.com/lmikoto/select\" target=\"_blank\">源代码</a></p>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2020-09-29T13:59:09.000Z",
    "deleted_at": null,
    "created_at": "2020-09-29T13:57:52.000Z",
    "updated_at": "2020-09-29T13:59:10.000Z",
    "published_at": "2020-09-29T13:59:09.000Z",
    "first_published_at": "2020-09-29T13:59:09.000Z",
    "word_count": 314,
    "cover": "https://cdn.nlark.com/yuque/0/2020/png/328252/1601387936578-a7085974-d3c6-4d49-ae4d-9d900255595a.png",
    "description": "每次到吃🍚的点都会纠结到底吃啥，食堂那么多窗口，今天吃哪一个。终于下定决心写个程序来帮我选择了。首先分析一下需求选择食堂的哪个窗口吃饭。最好带上权重，比如我更喜欢吃烧腊而不喜欢小笼包。但是偶尔想吃小笼包换换口味。这样可以把小笼包权重设低一点。这个程序最好不是只为吃饭服务。别的其他有选择障碍的...",
    "custom_description": null,
    "hits": 0,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 13904640,
    "slug": "kusrdi",
    "title": "dubbo实现分布式按需调用指定服务",
    "book_id": 1840429,
    "book": {
      "id": 1840429,
      "type": "Book",
      "slug": "lmikoto",
      "name": "笔记",
      "user_id": 328252,
      "description": "",
      "creator_id": 328252,
      "public": 0,
      "items_count": 15,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2020-09-29T14:16:16.754Z",
      "updated_at": "2020-09-29T14:16:16.000Z",
      "created_at": "2020-09-29T12:57:45.000Z",
      "namespace": "lmikoto/lmikoto",
      "user": {
        "id": 328252,
        "type": "User",
        "login": "lmikoto",
        "name": "lmikoto",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/328252/1578028416108-avatar/38f12fe6-da0d-471e-819c-7131fadbd750.png",
        "books_count": 1,
        "public_books_count": 0,
        "followers_count": 0,
        "following_count": 0,
        "created_at": "2019-04-25T04:31:29.000Z",
        "updated_at": "2020-09-29T12:57:45.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 328252,
    "creator": {
      "id": 328252,
      "type": "User",
      "login": "lmikoto",
      "name": "lmikoto",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/328252/1578028416108-avatar/38f12fe6-da0d-471e-819c-7131fadbd750.png",
      "books_count": 1,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2019-04-25T04:31:29.000Z",
      "updated_at": "2020-09-29T12:57:45.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "分布式部署了很多的服务提供者，dubbo默认会调用到一个提供者，现在要调用到指定的其中一个，或者多个提供者。<br />可以通过实现`AbstractClusterInvoker`来解决这个问题<br />\n\n```java\npublic class MyClusterInvoker<T> extends AbstractClusterInvoker<T> {\n\n    @Override\n    protected Result doInvoke(Invocation invocation, List<Invoker<T>> invokers, LoadBalance loadbalance)\n            throws RpcException {\n        checkInvokers(invokers, invocation);\n\n        // 外部传入需要调用的ip\n        List<String> ips = (List<String>) RpcContext.getContext().get(\"ips\");\n\n        // 根据ip找到对应的提供者。\n        List<Invoker<T>> toInvokers = invokers.stream().filter(invoker -> ips.contains(invoker.getUrl().getHost())).collect(Collectors.toList());\n        \n        try {\n            Result result = null;\n            for (Invoker invoker: toInvokers){\n                result = invoker.invoke(invocation);\n            }\n            return result;\n        } catch (Throwable e) {\n            throw new RpcException(\"invoke fail\");\n        }\n    }\n}\n```\n",
    "body_draft": "分布式部署了很多的服务提供者，dubbo默认会调用到一个提供者，现在要调用到指定的其中一个，或者多个提供者。<br />可以通过实现`AbstractClusterInvoker`来解决这个问题<br />\n\n```java\npublic class MyClusterInvoker<T> extends AbstractClusterInvoker<T> {\n\n    @Override\n    protected Result doInvoke(Invocation invocation, List<Invoker<T>> invokers, LoadBalance loadbalance)\n            throws RpcException {\n        checkInvokers(invokers, invocation);\n\n        // 外部传入需要调用的ip\n        List<String> ips = (List<String>) RpcContext.getContext().get(\"ips\");\n\n        // 根据ip找到对应的提供者。\n        List<Invoker<T>> toInvokers = invokers.stream().filter(invoker -> ips.contains(invoker.getUrl().getHost())).collect(Collectors.toList());\n        \n        try {\n            Result result = null;\n            for (Invoker invoker: toInvokers){\n                result = invoker.invoke(invocation);\n            }\n            return result;\n        } catch (Throwable e) {\n            throw new RpcException(\"invoke fail\");\n        }\n    }\n}\n```\n",
    "body_html": "<!doctype html><div class=\"lake-content-editor-core lake-engine lake-typography-classic\" data-lake-element=\"root\" data-selection-undefined=\"%7B%22path%22%3A%5B%5B4%5D%2C%5B4%5D%5D%2C%22active%22%3Atrue%7D\"><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">分布式部署了很多的服务提供者，dubbo默认会调用到一个提供者，现在要调用到指定的其中一个，或者多个提供者。</p><p data-lake-id=\"46eaeffe777be1461f36b526f1418b00\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">可以通过实现<code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">AbstractClusterInvoker</code>来解决这个问题</p><p data-lake-id=\"093913fce9d9988150ba1e6f72138f7b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"bc7ae4d6\" data-language=\"java\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">public</span> <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">class</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">MyClusterInvoker</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">T</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span> <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">extends</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">AbstractClusterInvoker</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">T</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span> {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-meta\" style=\"color: rgb(31, 127, 154); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">@Override</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">protected</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Result</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">doInvoke</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Invocation</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">invocation</span>, <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">List</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Invoker</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">T</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;&gt;</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">invokers</span>, <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">LoadBalance</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">loadbalance</span>)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">            <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">throws</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">RpcException</span> {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">checkInvokers</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">invokers</span>, <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">invocation</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// 外部传入需要调用的ip</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">List</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">String</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ips</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> (<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">List</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">String</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span>) <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">RpcContext</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getContext</span>().<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">get</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"ips\"</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// 根据ip找到对应的提供者。</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">List</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Invoker</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">T</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;&gt;</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">toInvokers</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">invokers</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">stream</span>().<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">filter</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">invoker</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">-&gt;</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ips</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">contains</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">invoker</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getUrl</span>().<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getHost</span>())).<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">collect</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Collectors</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">toList</span>());\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        \n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">try</span> {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">            <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Result</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">result</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">null</span>;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">            <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">for</span> (<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Invoker</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">invoker</span>: <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">toInvokers</span>){\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">                <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">result</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">invoker</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">invoke</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">invocation</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">            }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">            <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">return</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">result</span>;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        } <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">catch</span> (<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Throwable</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">e</span>) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">            <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">throw</span> <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">new</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">RpcException</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"invoke fail\"</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div></div>",
    "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"adapt\" /><meta name=\"typography\" content=\"classic\" /><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\">分布式部署了很多的服务提供者，dubbo默认会调用到一个提供者，现在要调用到指定的其中一个，或者多个提供者。</p><p data-lake-id=\"46eaeffe777be1461f36b526f1418b00\">可以通过实现<code>AbstractClusterInvoker</code>来解决这个问题</p><p data-lake-id=\"093913fce9d9988150ba1e6f72138f7b\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22bc7ae4d6%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22public%20class%20MyClusterInvoker%3CT%3E%20extends%20AbstractClusterInvoker%3CT%3E%20%7B%5Cn%5Cn%20%20%20%20%40Override%5Cn%20%20%20%20protected%20Result%20doInvoke(Invocation%20invocation%2C%20List%3CInvoker%3CT%3E%3E%20invokers%2C%20LoadBalance%20loadbalance)%5Cn%20%20%20%20%20%20%20%20%20%20%20%20throws%20RpcException%20%7B%5Cn%20%20%20%20%20%20%20%20checkInvokers(invokers%2C%20invocation)%3B%5Cn%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%E5%A4%96%E9%83%A8%E4%BC%A0%E5%85%A5%E9%9C%80%E8%A6%81%E8%B0%83%E7%94%A8%E7%9A%84ip%5Cn%20%20%20%20%20%20%20%20List%3CString%3E%20ips%20%3D%20(List%3CString%3E)%20RpcContext.getContext().get(%5C%22ips%5C%22)%3B%5Cn%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%E6%A0%B9%E6%8D%AEip%E6%89%BE%E5%88%B0%E5%AF%B9%E5%BA%94%E7%9A%84%E6%8F%90%E4%BE%9B%E8%80%85%E3%80%82%5Cn%20%20%20%20%20%20%20%20List%3CInvoker%3CT%3E%3E%20toInvokers%20%3D%20invokers.stream().filter(invoker%20-%3E%20ips.contains(invoker.getUrl().getHost())).collect(Collectors.toList())%3B%5Cn%20%20%20%20%20%20%20%20%5Cn%20%20%20%20%20%20%20%20try%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20Result%20result%20%3D%20null%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20for%20(Invoker%20invoker%3A%20toInvokers)%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20result%20%3D%20invoker.invoke(invocation)%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20%20%20%20%20return%20result%3B%5Cn%20%20%20%20%20%20%20%20%7D%20catch%20(Throwable%20e)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20throw%20new%20RpcException(%5C%22invoke%20fail%5C%22)%3B%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D%5Cn%7D%22%7D\"></card>",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"adapt\" /><meta name=\"typography\" content=\"classic\" /><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\">分布式部署了很多的服务提供者，dubbo默认会调用到一个提供者，现在要调用到指定的其中一个，或者多个提供者。</p><p data-lake-id=\"46eaeffe777be1461f36b526f1418b00\">可以通过实现<code>AbstractClusterInvoker</code>来解决这个问题</p><p data-lake-id=\"093913fce9d9988150ba1e6f72138f7b\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22bc7ae4d6%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22public%20class%20MyClusterInvoker%3CT%3E%20extends%20AbstractClusterInvoker%3CT%3E%20%7B%5Cn%5Cn%20%20%20%20%40Override%5Cn%20%20%20%20protected%20Result%20doInvoke(Invocation%20invocation%2C%20List%3CInvoker%3CT%3E%3E%20invokers%2C%20LoadBalance%20loadbalance)%5Cn%20%20%20%20%20%20%20%20%20%20%20%20throws%20RpcException%20%7B%5Cn%20%20%20%20%20%20%20%20checkInvokers(invokers%2C%20invocation)%3B%5Cn%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%E5%A4%96%E9%83%A8%E4%BC%A0%E5%85%A5%E9%9C%80%E8%A6%81%E8%B0%83%E7%94%A8%E7%9A%84ip%5Cn%20%20%20%20%20%20%20%20List%3CString%3E%20ips%20%3D%20(List%3CString%3E)%20RpcContext.getContext().get(%5C%22ips%5C%22)%3B%5Cn%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%E6%A0%B9%E6%8D%AEip%E6%89%BE%E5%88%B0%E5%AF%B9%E5%BA%94%E7%9A%84%E6%8F%90%E4%BE%9B%E8%80%85%E3%80%82%5Cn%20%20%20%20%20%20%20%20List%3CInvoker%3CT%3E%3E%20toInvokers%20%3D%20invokers.stream().filter(invoker%20-%3E%20ips.contains(invoker.getUrl().getHost())).collect(Collectors.toList())%3B%5Cn%20%20%20%20%20%20%20%20%5Cn%20%20%20%20%20%20%20%20try%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20Result%20result%20%3D%20null%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20for%20(Invoker%20invoker%3A%20toInvokers)%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20result%20%3D%20invoker.invoke(invocation)%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20%20%20%20%20return%20result%3B%5Cn%20%20%20%20%20%20%20%20%7D%20catch%20(Throwable%20e)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20throw%20new%20RpcException(%5C%22invoke%20fail%5C%22)%3B%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D%5Cn%7D%22%7D\"></card>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2020-09-29T14:16:16.000Z",
    "deleted_at": null,
    "created_at": "2020-09-29T14:16:03.000Z",
    "updated_at": "2020-09-29T14:16:16.000Z",
    "published_at": "2020-09-29T14:16:16.000Z",
    "first_published_at": "2020-09-29T14:16:16.000Z",
    "word_count": 223,
    "cover": null,
    "description": "分布式部署了很多的服务提供者，dubbo默认会调用到一个提供者，现在要调用到指定的其中一个，或者多个提供者。可以通过实现AbstractClusterInvoker来解决这个问题public class MyClusterInvoker<T> extends AbstractClusterIn...",
    "custom_description": null,
    "hits": 0,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 13904622,
    "slug": "pwwyw7",
    "title": "Spring Aop实现乐观锁重试",
    "book_id": 1840429,
    "book": {
      "id": 1840429,
      "type": "Book",
      "slug": "lmikoto",
      "name": "笔记",
      "user_id": 328252,
      "description": "",
      "creator_id": 328252,
      "public": 0,
      "items_count": 15,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2020-09-29T14:16:16.754Z",
      "updated_at": "2020-09-29T14:16:16.000Z",
      "created_at": "2020-09-29T12:57:45.000Z",
      "namespace": "lmikoto/lmikoto",
      "user": {
        "id": 328252,
        "type": "User",
        "login": "lmikoto",
        "name": "lmikoto",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/328252/1578028416108-avatar/38f12fe6-da0d-471e-819c-7131fadbd750.png",
        "books_count": 1,
        "public_books_count": 0,
        "followers_count": 0,
        "following_count": 0,
        "created_at": "2019-04-25T04:31:29.000Z",
        "updated_at": "2020-09-29T12:57:45.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 328252,
    "creator": {
      "id": 328252,
      "type": "User",
      "login": "lmikoto",
      "name": "lmikoto",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/328252/1578028416108-avatar/38f12fe6-da0d-471e-819c-7131fadbd750.png",
      "books_count": 1,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2019-04-25T04:31:29.000Z",
      "updated_at": "2020-09-29T12:57:45.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "> 并发修改同一记录时，避免更新丢失，需要加锁。要么在应用层加锁，要么在缓存加锁，要么在数据库层使用乐观锁，使用version作为更新依据。说明：如果每次访问冲突概率小于20%，推荐使用乐观锁，否则使用悲观锁。乐观锁的重试次数不得小于3次。\n\n\n<br />阿里巴巴开发手册中指出乐观锁需要至少重试三次，但是我厂的应用好像都没有这个习惯，遇到冲突就直接抛错，这样对于用户来说就会相对不友好一些。<br />那么如何来实现这个乐观锁重试呢。<br />采用AOP应该是相对优雅的一种方式。<br />首先定义一个异常类方便精确定位乐观锁更新异常。当然如果使用jpa的话，可以直接捕获`ObjectOptimisticLockingFailureException`<br />\n\n```java\npublic class OptimisticLockingFailureException extends RuntimeException {\n    \n    public OptimisticLockingFailureException(String message){\n        super(message);\n    }\n}\n```\n\n<br />定义一个切面。这里切的范围就看实际应用的范围了，以我厂的架构而言，可以直接切所有RPC接口的实现。当然也可以精确到切所有DAO层的方法。这个看应用场景。为了演示方便，我这里就定义一个注解，用来切这个注解的方法，当然在实际应用中也可以像我这么搞。<br />定义注解<br />\n\n```java\n@Retention(RetentionPolicy.RUNTIME)\npublic @interface TryAgain {\n}\n```\n\n<br />切面实现<br />\n\n```java\n@Aspect\n@Component\n@Slf4j\npublic class OptimisticLockTryAgainAspect {\n\n\n    @Value(\"${optimistic.lock.retry.num:3}\")\n    private Integer maxRetries;\n\n    @Pointcut(\"@annotation(TryAgain)\")\n    public void retryOnOptFailure() {\n    }\n\n    @Around(\"retryOnOptFailure()\")\n    @Transactional(rollbackFor = Exception.class)\n    public Object doConcurrentOperation(ProceedingJoinPoint pjp) throws Throwable {\n        int retries = 0;\n        do {\n            retries++;\n            try {\n                return pjp.proceed();\n            } catch (OptimisticLockingFailureException ex) {\n                if (retries > maxRetries) {\n                    throw new RuntimeException(\"update.fail\");\n                }else{\n                    log.warn(\"retry {} num\",retries);\n                }\n            }\n        } while (retries <= this.maxRetries);\n        return null;\n    }\n}\n```\n\n<br />这样如果再update的时候，如果更新失败就可以抛`OptimisticLockingFailureException`来做到重试了。\n",
    "body_draft": "> 并发修改同一记录时，避免更新丢失，需要加锁。要么在应用层加锁，要么在缓存加锁，要么在数据库层使用乐观锁，使用version作为更新依据。说明：如果每次访问冲突概率小于20%，推荐使用乐观锁，否则使用悲观锁。乐观锁的重试次数不得小于3次。\n\n\n<br />阿里巴巴开发手册中指出乐观锁需要至少重试三次，但是我厂的应用好像都没有这个习惯，遇到冲突就直接抛错，这样对于用户来说就会相对不友好一些。<br />那么如何来实现这个乐观锁重试呢。<br />采用AOP应该是相对优雅的一种方式。<br />首先定义一个异常类方便精确定位乐观锁更新异常。当然如果使用jpa的话，可以直接捕获`ObjectOptimisticLockingFailureException`<br />\n\n```java\npublic class OptimisticLockingFailureException extends RuntimeException {\n    \n    public OptimisticLockingFailureException(String message){\n        super(message);\n    }\n}\n```\n\n<br />定义一个切面。这里切的范围就看实际应用的范围了，以我厂的架构而言，可以直接切所有RPC接口的实现。当然也可以精确到切所有DAO层的方法。这个看应用场景。为了演示方便，我这里就定义一个注解，用来切这个注解的方法，当然在实际应用中也可以像我这么搞。<br />定义注解<br />\n\n```java\n@Retention(RetentionPolicy.RUNTIME)\npublic @interface TryAgain {\n}\n```\n\n<br />切面实现<br />\n\n```java\n@Aspect\n@Component\n@Slf4j\npublic class OptimisticLockTryAgainAspect {\n\n\n    @Value(\"${optimistic.lock.retry.num:3}\")\n    private Integer maxRetries;\n\n    @Pointcut(\"@annotation(TryAgain)\")\n    public void retryOnOptFailure() {\n    }\n\n    @Around(\"retryOnOptFailure()\")\n    @Transactional(rollbackFor = Exception.class)\n    public Object doConcurrentOperation(ProceedingJoinPoint pjp) throws Throwable {\n        int retries = 0;\n        do {\n            retries++;\n            try {\n                return pjp.proceed();\n            } catch (OptimisticLockingFailureException ex) {\n                if (retries > maxRetries) {\n                    throw new RuntimeException(\"update.fail\");\n                }else{\n                    log.warn(\"retry {} num\",retries);\n                }\n            }\n        } while (retries <= this.maxRetries);\n        return null;\n    }\n}\n```\n\n<br />这样如果再update的时候，如果更新失败就可以抛`OptimisticLockingFailureException`来做到重试了。\n",
    "body_html": "<!doctype html><div class=\"lake-content-editor-core lake-engine lake-typography-classic\" data-lake-element=\"root\" data-selection-undefined=\"%7B%22path%22%3A%5B%5B1%2C0%5D%2C%5B1%2C0%5D%5D%2C%22active%22%3Atrue%7D\"><blockquote style=\"margin-top: 5px; margin-bottom: 5px; padding-left: 1em; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">并发修改同一记录时，避免更新丢失，需要加锁。要么在应用层加锁，要么在缓存加锁，要么在数据库层使用乐观锁，使用version作为更新依据。说明：如果每次访问冲突概率小于20%，推荐使用乐观锁，否则使用悲观锁。乐观锁的重试次数不得小于3次。</p></blockquote><p data-lake-id=\"35c01f5dc32958a48d67f3c03091022f\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"00911cd44e6aaf273b8da5998ff1f2d0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">阿里巴巴开发手册中指出乐观锁需要至少重试三次，但是我厂的应用好像都没有这个习惯，遇到冲突就直接抛错，这样对于用户来说就会相对不友好一些。</p><p data-lake-id=\"cd2c43e2f0697e7169115da2feca1998\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">那么如何来实现这个乐观锁重试呢。</p><p data-lake-id=\"d52dbf4a7ebf3ea20e11d8465b581fd6\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">采用AOP应该是相对优雅的一种方式。</p><p data-lake-id=\"e1c5f95efd20fd3787b73d6af2d918c2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">首先定义一个异常类方便精确定位乐观锁更新异常。当然如果使用jpa的话，可以直接捕获<code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">ObjectOptimisticLockingFailureException</code></p><p data-lake-id=\"add4d7e4f3e5a97fa4096f358397393c\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"ded809ec\" data-language=\"java\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">public</span> <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">class</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">OptimisticLockingFailureException</span> <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">extends</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">RuntimeException</span> {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    \n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">public</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">OptimisticLockingFailureException</span>(<span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">String</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">message</span>){\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">super</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">message</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div><p data-lake-id=\"b9d513c031ce54cd45ee0e38f96e5e06\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"062aa0efa350c0324dd72dda6f23755b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">定义一个切面。这里切的范围就看实际应用的范围了，以我厂的架构而言，可以直接切所有RPC接口的实现。当然也可以精确到切所有DAO层的方法。这个看应用场景。为了演示方便，我这里就定义一个注解，用来切这个注解的方法，当然在实际应用中也可以像我这么搞。</p><p data-lake-id=\"801d39c2d3836fde7026605f8b22e594\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">定义注解</p><p data-lake-id=\"92f249512cedc99cf2b768d0d14a452e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"6eabc795\" data-language=\"java\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-meta\" style=\"color: rgb(31, 127, 154); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">@Retention</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">RetentionPolicy</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">RUNTIME</span>)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">public</span> <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">@interface</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">TryAgain</span> {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div><p data-lake-id=\"1299da8433301ff30785e881f90a99e3\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"de7377852979266148297fcf699f9d8f\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">切面实现</p><p data-lake-id=\"8e803b10e66b2d4b4d162b8d0519a583\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"4bb9b5dc\" data-language=\"java\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-meta\" style=\"color: rgb(31, 127, 154); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">@Aspect</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-meta\" style=\"color: rgb(31, 127, 154); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">@Component</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-meta\" style=\"color: rgb(31, 127, 154); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">@Slf4j</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">public</span> <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">class</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">OptimisticLockTryAgainAspect</span> {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-meta\" style=\"color: rgb(31, 127, 154); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">@Value</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"${optimistic.lock.retry.num:3}\"</span>)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">private</span> <span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Integer</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">maxRetries</span>;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-meta\" style=\"color: rgb(31, 127, 154); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">@Pointcut</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"@annotation(TryAgain)\"</span>)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">public</span> <span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">void</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">retryOnOptFailure</span>() {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-meta\" style=\"color: rgb(31, 127, 154); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">@Around</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"retryOnOptFailure()\"</span>)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-meta\" style=\"color: rgb(31, 127, 154); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">@Transactional</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">rollbackFor</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Exception</span>.<span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">class</span>)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">public</span> <span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Object</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">doConcurrentOperation</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ProceedingJoinPoint</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">pjp</span>) <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">throws</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Throwable</span> {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">int</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">retries</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">0</span>;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">do</span> {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">            <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">retries</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">++</span>;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">            <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">try</span> {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">                <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">return</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">pjp</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">proceed</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">            } <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">catch</span> (<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">OptimisticLockingFailureException</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ex</span>) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">                <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">if</span> (<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">retries</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">maxRetries</span>) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">                    <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">throw</span> <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">new</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">RuntimeException</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"update.fail\"</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">                }<span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">else</span>{\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">                    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">log</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">warn</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"retry {} num\"</span>,<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">retries</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">                }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">            }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        } <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">while</span> (<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">retries</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;=</span> <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">this</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">maxRetries</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">return</span> <span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">null</span>;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div><p data-lake-id=\"6dbc2125a1ba059b036e4220cbcebb8a\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"4ddf2ce7ac0694b2aeaab53a1ad7f266\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">这样如果再update的时候，如果更新失败就可以抛<code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">OptimisticLockingFailureException</code>来做到重试了。</p></div>",
    "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"adapt\" /><meta name=\"typography\" content=\"classic\" /><blockquote><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\">并发修改同一记录时，避免更新丢失，需要加锁。要么在应用层加锁，要么在缓存加锁，要么在数据库层使用乐观锁，使用version作为更新依据。说明：如果每次访问冲突概率小于20%，推荐使用乐观锁，否则使用悲观锁。乐观锁的重试次数不得小于3次。</p></blockquote><p data-lake-id=\"35c01f5dc32958a48d67f3c03091022f\"><br /></p><p data-lake-id=\"00911cd44e6aaf273b8da5998ff1f2d0\">阿里巴巴开发手册中指出乐观锁需要至少重试三次，但是我厂的应用好像都没有这个习惯，遇到冲突就直接抛错，这样对于用户来说就会相对不友好一些。</p><p data-lake-id=\"cd2c43e2f0697e7169115da2feca1998\">那么如何来实现这个乐观锁重试呢。</p><p data-lake-id=\"d52dbf4a7ebf3ea20e11d8465b581fd6\">采用AOP应该是相对优雅的一种方式。</p><p data-lake-id=\"e1c5f95efd20fd3787b73d6af2d918c2\">首先定义一个异常类方便精确定位乐观锁更新异常。当然如果使用jpa的话，可以直接捕获<code>ObjectOptimisticLockingFailureException</code></p><p data-lake-id=\"add4d7e4f3e5a97fa4096f358397393c\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22ded809ec%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22public%20class%20OptimisticLockingFailureException%20extends%20RuntimeException%20%7B%5Cn%20%20%20%20%5Cn%20%20%20%20public%20OptimisticLockingFailureException(String%20message)%7B%5Cn%20%20%20%20%20%20%20%20super(message)%3B%5Cn%20%20%20%20%7D%5Cn%7D%22%7D\"></card><p data-lake-id=\"b9d513c031ce54cd45ee0e38f96e5e06\"><br /></p><p data-lake-id=\"062aa0efa350c0324dd72dda6f23755b\">定义一个切面。这里切的范围就看实际应用的范围了，以我厂的架构而言，可以直接切所有RPC接口的实现。当然也可以精确到切所有DAO层的方法。这个看应用场景。为了演示方便，我这里就定义一个注解，用来切这个注解的方法，当然在实际应用中也可以像我这么搞。</p><p data-lake-id=\"801d39c2d3836fde7026605f8b22e594\">定义注解</p><p data-lake-id=\"92f249512cedc99cf2b768d0d14a452e\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%226eabc795%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22%40Retention(RetentionPolicy.RUNTIME)%5Cnpublic%20%40interface%20TryAgain%20%7B%5Cn%7D%22%7D\"></card><p data-lake-id=\"1299da8433301ff30785e881f90a99e3\"><br /></p><p data-lake-id=\"de7377852979266148297fcf699f9d8f\">切面实现</p><p data-lake-id=\"8e803b10e66b2d4b4d162b8d0519a583\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%224bb9b5dc%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22%40Aspect%5Cn%40Component%5Cn%40Slf4j%5Cnpublic%20class%20OptimisticLockTryAgainAspect%20%7B%5Cn%5Cn%5Cn%20%20%20%20%40Value(%5C%22%24%7Boptimistic.lock.retry.num%3A3%7D%5C%22)%5Cn%20%20%20%20private%20Integer%20maxRetries%3B%5Cn%5Cn%20%20%20%20%40Pointcut(%5C%22%40annotation(TryAgain)%5C%22)%5Cn%20%20%20%20public%20void%20retryOnOptFailure()%20%7B%5Cn%20%20%20%20%7D%5Cn%5Cn%20%20%20%20%40Around(%5C%22retryOnOptFailure()%5C%22)%5Cn%20%20%20%20%40Transactional(rollbackFor%20%3D%20Exception.class)%5Cn%20%20%20%20public%20Object%20doConcurrentOperation(ProceedingJoinPoint%20pjp)%20throws%20Throwable%20%7B%5Cn%20%20%20%20%20%20%20%20int%20retries%20%3D%200%3B%5Cn%20%20%20%20%20%20%20%20do%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20retries%2B%2B%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20try%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20pjp.proceed()%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%7D%20catch%20(OptimisticLockingFailureException%20ex)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20if%20(retries%20%3E%20maxRetries)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20throw%20new%20RuntimeException(%5C%22update.fail%5C%22)%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7Delse%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20log.warn(%5C%22retry%20%7B%7D%20num%5C%22%2Cretries)%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20%7D%20while%20(retries%20%3C%3D%20this.maxRetries)%3B%5Cn%20%20%20%20%20%20%20%20return%20null%3B%5Cn%20%20%20%20%7D%5Cn%7D%22%7D\"></card><p data-lake-id=\"6dbc2125a1ba059b036e4220cbcebb8a\"><br /></p><p data-lake-id=\"4ddf2ce7ac0694b2aeaab53a1ad7f266\">这样如果再update的时候，如果更新失败就可以抛<code>OptimisticLockingFailureException</code>来做到重试了。</p>",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"adapt\" /><meta name=\"typography\" content=\"classic\" /><blockquote><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\">并发修改同一记录时，避免更新丢失，需要加锁。要么在应用层加锁，要么在缓存加锁，要么在数据库层使用乐观锁，使用version作为更新依据。说明：如果每次访问冲突概率小于20%，推荐使用乐观锁，否则使用悲观锁。乐观锁的重试次数不得小于3次。</p></blockquote><p data-lake-id=\"35c01f5dc32958a48d67f3c03091022f\"><br /></p><p data-lake-id=\"00911cd44e6aaf273b8da5998ff1f2d0\">阿里巴巴开发手册中指出乐观锁需要至少重试三次，但是我厂的应用好像都没有这个习惯，遇到冲突就直接抛错，这样对于用户来说就会相对不友好一些。</p><p data-lake-id=\"cd2c43e2f0697e7169115da2feca1998\">那么如何来实现这个乐观锁重试呢。</p><p data-lake-id=\"d52dbf4a7ebf3ea20e11d8465b581fd6\">采用AOP应该是相对优雅的一种方式。</p><p data-lake-id=\"e1c5f95efd20fd3787b73d6af2d918c2\">首先定义一个异常类方便精确定位乐观锁更新异常。当然如果使用jpa的话，可以直接捕获<code>ObjectOptimisticLockingFailureException</code></p><p data-lake-id=\"add4d7e4f3e5a97fa4096f358397393c\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22ded809ec%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22public%20class%20OptimisticLockingFailureException%20extends%20RuntimeException%20%7B%5Cn%20%20%20%20%5Cn%20%20%20%20public%20OptimisticLockingFailureException(String%20message)%7B%5Cn%20%20%20%20%20%20%20%20super(message)%3B%5Cn%20%20%20%20%7D%5Cn%7D%22%7D\"></card><p data-lake-id=\"b9d513c031ce54cd45ee0e38f96e5e06\"><br /></p><p data-lake-id=\"062aa0efa350c0324dd72dda6f23755b\">定义一个切面。这里切的范围就看实际应用的范围了，以我厂的架构而言，可以直接切所有RPC接口的实现。当然也可以精确到切所有DAO层的方法。这个看应用场景。为了演示方便，我这里就定义一个注解，用来切这个注解的方法，当然在实际应用中也可以像我这么搞。</p><p data-lake-id=\"801d39c2d3836fde7026605f8b22e594\">定义注解</p><p data-lake-id=\"92f249512cedc99cf2b768d0d14a452e\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%226eabc795%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22%40Retention(RetentionPolicy.RUNTIME)%5Cnpublic%20%40interface%20TryAgain%20%7B%5Cn%7D%22%7D\"></card><p data-lake-id=\"1299da8433301ff30785e881f90a99e3\"><br /></p><p data-lake-id=\"de7377852979266148297fcf699f9d8f\">切面实现</p><p data-lake-id=\"8e803b10e66b2d4b4d162b8d0519a583\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%224bb9b5dc%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22%40Aspect%5Cn%40Component%5Cn%40Slf4j%5Cnpublic%20class%20OptimisticLockTryAgainAspect%20%7B%5Cn%5Cn%5Cn%20%20%20%20%40Value(%5C%22%24%7Boptimistic.lock.retry.num%3A3%7D%5C%22)%5Cn%20%20%20%20private%20Integer%20maxRetries%3B%5Cn%5Cn%20%20%20%20%40Pointcut(%5C%22%40annotation(TryAgain)%5C%22)%5Cn%20%20%20%20public%20void%20retryOnOptFailure()%20%7B%5Cn%20%20%20%20%7D%5Cn%5Cn%20%20%20%20%40Around(%5C%22retryOnOptFailure()%5C%22)%5Cn%20%20%20%20%40Transactional(rollbackFor%20%3D%20Exception.class)%5Cn%20%20%20%20public%20Object%20doConcurrentOperation(ProceedingJoinPoint%20pjp)%20throws%20Throwable%20%7B%5Cn%20%20%20%20%20%20%20%20int%20retries%20%3D%200%3B%5Cn%20%20%20%20%20%20%20%20do%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20retries%2B%2B%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20try%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20pjp.proceed()%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%7D%20catch%20(OptimisticLockingFailureException%20ex)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20if%20(retries%20%3E%20maxRetries)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20throw%20new%20RuntimeException(%5C%22update.fail%5C%22)%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7Delse%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20log.warn(%5C%22retry%20%7B%7D%20num%5C%22%2Cretries)%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20%7D%20while%20(retries%20%3C%3D%20this.maxRetries)%3B%5Cn%20%20%20%20%20%20%20%20return%20null%3B%5Cn%20%20%20%20%7D%5Cn%7D%22%7D\"></card><p data-lake-id=\"6dbc2125a1ba059b036e4220cbcebb8a\"><br /></p><p data-lake-id=\"4ddf2ce7ac0694b2aeaab53a1ad7f266\">这样如果再update的时候，如果更新失败就可以抛<code>OptimisticLockingFailureException</code>来做到重试了。</p>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2020-09-29T14:15:50.000Z",
    "deleted_at": null,
    "created_at": "2020-09-29T14:14:51.000Z",
    "updated_at": "2020-09-29T14:15:50.000Z",
    "published_at": "2020-09-29T14:15:50.000Z",
    "first_published_at": "2020-09-29T14:15:50.000Z",
    "word_count": 546,
    "cover": null,
    "description": "并发修改同一记录时，避免更新丢失，需要加锁。要么在应用层加锁，要么在缓存加锁，要么在数据库层使用乐观锁，使用version作为更新依据。说明：如果每次访问冲突概率小于20%，推荐使用乐观锁，否则使用悲观锁。乐观锁的重试次数不得小于3次。阿里巴巴开发手册中指出乐观锁需要至少重试三次，但是我厂的应...",
    "custom_description": null,
    "hits": 0,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 13904578,
    "slug": "nwxrfc",
    "title": "Activiti7源码分析(七)-DeploymentCache",
    "book_id": 1840429,
    "book": {
      "id": 1840429,
      "type": "Book",
      "slug": "lmikoto",
      "name": "笔记",
      "user_id": 328252,
      "description": "",
      "creator_id": 328252,
      "public": 0,
      "items_count": 15,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2020-09-29T14:16:16.754Z",
      "updated_at": "2020-09-29T14:16:16.000Z",
      "created_at": "2020-09-29T12:57:45.000Z",
      "namespace": "lmikoto/lmikoto",
      "user": {
        "id": 328252,
        "type": "User",
        "login": "lmikoto",
        "name": "lmikoto",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/328252/1578028416108-avatar/38f12fe6-da0d-471e-819c-7131fadbd750.png",
        "books_count": 1,
        "public_books_count": 0,
        "followers_count": 0,
        "following_count": 0,
        "created_at": "2019-04-25T04:31:29.000Z",
        "updated_at": "2020-09-29T12:57:45.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 328252,
    "creator": {
      "id": 328252,
      "type": "User",
      "login": "lmikoto",
      "name": "lmikoto",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/328252/1578028416108-avatar/38f12fe6-da0d-471e-819c-7131fadbd750.png",
      "books_count": 1,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2019-04-25T04:31:29.000Z",
      "updated_at": "2020-09-29T12:57:45.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "之前提到过流程的定义是放到缓存中的，而默认缓存是在内存中的在多实例部署的情况下会有隐患。今天来看一下这个缓存是如何实现的。<br />\n\n```java\npublic interface DeploymentCache<T> {\n\n  T get(String id);\n\n  boolean contains(String id);\n\n  void add(String id, T object);\n\n  void remove(String id);\n\n  void clear();\n\n}\n```\n\n<br />activiti抽象了一个接口。并且提供了一个默认实现。<br />这个默认实现有两个构造函数。<br />先来看一下有参数的这个构造函数<br />\n\n```java\npublic DefaultDeploymentCache() {\n  this.cache = synchronizedMap(new HashMap<String, T>());\n}\n```\n\n<br />当使用无参构造函数的时候。缓存容器是HashMap<br />再来看一下有参构造函数<br />\n\n```java\npublic DefaultDeploymentCache(final int limit) {\n  this.cache = synchronizedMap(new LinkedHashMap<String, T>(limit + 1, 0.75f, true) { // +1 is needed, because the entry is inserted first, before it is removed\n        // 0.75 is the default (see javadocs)\n        // true will keep the 'access-order', which is needed to have a real LRU cache\n        private static final long serialVersionUID = 1L;\n\n        protected boolean removeEldestEntry(Map.Entry<String, T> eldest) {\n          boolean removeEldest = size() > limit;\n          if (removeEldest && logger.isTraceEnabled()) {\n            logger.trace(\"Cache limit is reached, {} will be evicted\", eldest.getKey());\n          }\n          return removeEldest;\n        }\n\n      });\n}\n```\n\n<br />有参构造函数会传入一个limit,也就是缓存大小。下面的策略说的也很明白，如果超过了这个大小就会最老的给移除掉。<br />如果确定流程定义很少，那么可以用无限制的，如果很多肯定要用有限制的。<br />所以无论有参还是无参，默认的缓存都是在内存里。<br />缓存的读取策略一般都是先从缓存拿，如果没拿到就从db拿，然后把缓存更新一下。多实例的情况下缓存不会同步，正常情况下也不会产生太多的问题，只是可能没命中多查了一次db而已。而之前提到的用ProcessDefinitionKey发起流程是特殊情况，这样的情况下没有同步缓存就会产生事故。<br />所以针对上述问题，个人认为最好还是使用redis这种中间键来做缓存。替换也很简单，实现一下DeploymentCache接口。然后在配置类中把他替换掉就好了。如果使用spring的话，直接替换bean即可。\n",
    "body_draft": "之前提到过流程的定义是放到缓存中的，而默认缓存是在内存中的在多实例部署的情况下会有隐患。今天来看一下这个缓存是如何实现的。<br />\n\n```java\npublic interface DeploymentCache<T> {\n\n  T get(String id);\n\n  boolean contains(String id);\n\n  void add(String id, T object);\n\n  void remove(String id);\n\n  void clear();\n\n}\n```\n\n<br />activiti抽象了一个接口。并且提供了一个默认实现。<br />这个默认实现有两个构造函数。<br />先来看一下有参数的这个构造函数<br />\n\n```java\npublic DefaultDeploymentCache() {\n  this.cache = synchronizedMap(new HashMap<String, T>());\n}\n```\n\n<br />当使用无参构造函数的时候。缓存容器是HashMap<br />再来看一下有参构造函数<br />\n\n```java\npublic DefaultDeploymentCache(final int limit) {\n  this.cache = synchronizedMap(new LinkedHashMap<String, T>(limit + 1, 0.75f, true) { // +1 is needed, because the entry is inserted first, before it is removed\n        // 0.75 is the default (see javadocs)\n        // true will keep the 'access-order', which is needed to have a real LRU cache\n        private static final long serialVersionUID = 1L;\n\n        protected boolean removeEldestEntry(Map.Entry<String, T> eldest) {\n          boolean removeEldest = size() > limit;\n          if (removeEldest && logger.isTraceEnabled()) {\n            logger.trace(\"Cache limit is reached, {} will be evicted\", eldest.getKey());\n          }\n          return removeEldest;\n        }\n\n      });\n}\n```\n\n<br />有参构造函数会传入一个limit,也就是缓存大小。下面的策略说的也很明白，如果超过了这个大小就会最老的给移除掉。<br />如果确定流程定义很少，那么可以用无限制的，如果很多肯定要用有限制的。<br />所以无论有参还是无参，默认的缓存都是在内存里。<br />缓存的读取策略一般都是先从缓存拿，如果没拿到就从db拿，然后把缓存更新一下。多实例的情况下缓存不会同步，正常情况下也不会产生太多的问题，只是可能没命中多查了一次db而已。而之前提到的用ProcessDefinitionKey发起流程是特殊情况，这样的情况下没有同步缓存就会产生事故。<br />所以针对上述问题，个人认为最好还是使用redis这种中间键来做缓存。替换也很简单，实现一下DeploymentCache接口。然后在配置类中把他替换掉就好了。如果使用spring的话，直接替换bean即可。\n",
    "body_html": "<!doctype html><div class=\"lake-content-editor-core lake-engine lake-typography-classic\" data-lake-element=\"root\" data-selection-undefined=\"%7B%22path%22%3A%5B%5B19%2C0%2C103%5D%2C%5B19%2C0%2C103%5D%5D%2C%22active%22%3Atrue%7D\"><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">之前提到过流程的定义是放到缓存中的，而默认缓存是在内存中的在多实例部署的情况下会有隐患。今天来看一下这个缓存是如何实现的。</p><p data-lake-id=\"1f9caa87a61e2279a19084f5181fad6a\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"a38fe6ae\" data-language=\"java\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">public</span> <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">interface</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">DeploymentCache</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">T</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span> {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">T</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">get</span>(<span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">String</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">id</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">boolean</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">contains</span>(<span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">String</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">id</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">void</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">add</span>(<span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">String</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">id</span>, <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">T</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">object</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">void</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">remove</span>(<span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">String</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">id</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">void</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">clear</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div><p data-lake-id=\"4900074e25b12be36128a1645a0390ab\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"f6fabd96d40087073c33720e89816b02\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">activiti抽象了一个接口。并且提供了一个默认实现。</p><p data-lake-id=\"7209c30e0da85bee57e5d112b0ceaa26\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">这个默认实现有两个构造函数。</p><p data-lake-id=\"1526a7c70d9d924e443fd8d61cf81cc3\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">先来看一下有参数的这个构造函数</p><p data-lake-id=\"c08177ab5f951e9b682017ceb2816cc1\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"251361d1\" data-language=\"java\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">public</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">DefaultDeploymentCache</span>() {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">this</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">cache</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">synchronizedMap</span>(<span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">new</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">HashMap</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">String</span>, <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">T</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span>());\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div><p data-lake-id=\"d8d80f205f175f25b381946f377656b9\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"a38f03e06ff331a998d0b6bd54d78639\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">当使用无参构造函数的时候。缓存容器是HashMap</p><p data-lake-id=\"a47a25cedc27393d5c511893d0733656\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">再来看一下有参构造函数</p><p data-lake-id=\"979b644610c52370d9aa543b35710022\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"b0140089\" data-language=\"java\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">public</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">DefaultDeploymentCache</span>(<span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">final</span> <span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">int</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">limit</span>) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">this</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">cache</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">synchronizedMap</span>(<span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">new</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">LinkedHashMap</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">String</span>, <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">T</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">limit</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">+</span> <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">1</span>, <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">0.75f</span>, <span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">true</span>) { <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// +1 is needed, because the entry is inserted first, before it is removed</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// 0.75 is the default (see javadocs)</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// true will keep the 'access-order', which is needed to have a real LRU cache</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">private</span> <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">static</span> <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">final</span> <span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">long</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">serialVersionUID</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">1L</span>;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">protected</span> <span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">boolean</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">removeEldestEntry</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Map</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Entry</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">String</span>, <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">T</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">eldest</span>) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">          <span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">boolean</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">removeEldest</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">size</span>() <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">limit</span>;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">          <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">if</span> (<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">removeEldest</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&amp;&amp;</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">logger</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">isTraceEnabled</span>()) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">            <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">logger</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">trace</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"Cache limit is reached, {} will be evicted\"</span>, <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">eldest</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getKey</span>());\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">          }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">          <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">return</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">removeEldest</span>;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      });\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div><p data-lake-id=\"17490a72a62f039c321d72c74cd18d4f\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"f19526bf81763214327e3ac677836308\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">有参构造函数会传入一个limit,也就是缓存大小。下面的策略说的也很明白，如果超过了这个大小就会最老的给移除掉。</p><p data-lake-id=\"9577abb3cdb83bc9356405097f22cf20\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">如果确定流程定义很少，那么可以用无限制的，如果很多肯定要用有限制的。</p><p data-lake-id=\"c882fb5ee2c223d55718327fd4ea9876\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">所以无论有参还是无参，默认的缓存都是在内存里。</p><p data-lake-id=\"38149927f3adb4420e8892f924f659d7\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">缓存的读取策略一般都是先从缓存拿，如果没拿到就从db拿，然后把缓存更新一下。多实例的情况下缓存不会同步，正常情况下也不会产生太多的问题，只是可能没命中多查了一次db而已。而之前提到的用ProcessDefinitionKey发起流程是特殊情况，这样的情况下没有同步缓存就会产生事故。</p><p data-lake-id=\"aa698477e3367da7b92350847621e139\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">所以针对上述问题，个人认为最好还是使用redis这种中间键来做缓存。替换也很简单，实现一下DeploymentCache接口。然后在配置类中把他替换掉就好了。如果使用spring的话，直接替换bean即可。</p></div>",
    "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"adapt\" /><meta name=\"typography\" content=\"classic\" /><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\">之前提到过流程的定义是放到缓存中的，而默认缓存是在内存中的在多实例部署的情况下会有隐患。今天来看一下这个缓存是如何实现的。</p><p data-lake-id=\"1f9caa87a61e2279a19084f5181fad6a\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22a38fe6ae%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22public%20interface%20DeploymentCache%3CT%3E%20%7B%5Cn%5Cn%20%20T%20get(String%20id)%3B%5Cn%5Cn%20%20boolean%20contains(String%20id)%3B%5Cn%5Cn%20%20void%20add(String%20id%2C%20T%20object)%3B%5Cn%5Cn%20%20void%20remove(String%20id)%3B%5Cn%5Cn%20%20void%20clear()%3B%5Cn%5Cn%7D%22%7D\"></card><p data-lake-id=\"4900074e25b12be36128a1645a0390ab\"><br /></p><p data-lake-id=\"f6fabd96d40087073c33720e89816b02\">activiti抽象了一个接口。并且提供了一个默认实现。</p><p data-lake-id=\"7209c30e0da85bee57e5d112b0ceaa26\">这个默认实现有两个构造函数。</p><p data-lake-id=\"1526a7c70d9d924e443fd8d61cf81cc3\">先来看一下有参数的这个构造函数</p><p data-lake-id=\"c08177ab5f951e9b682017ceb2816cc1\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22251361d1%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22public%20DefaultDeploymentCache()%20%7B%5Cn%20%20this.cache%20%3D%20synchronizedMap(new%20HashMap%3CString%2C%20T%3E())%3B%5Cn%7D%22%7D\"></card><p data-lake-id=\"d8d80f205f175f25b381946f377656b9\"><br /></p><p data-lake-id=\"a38f03e06ff331a998d0b6bd54d78639\">当使用无参构造函数的时候。缓存容器是HashMap</p><p data-lake-id=\"a47a25cedc27393d5c511893d0733656\">再来看一下有参构造函数</p><p data-lake-id=\"979b644610c52370d9aa543b35710022\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22b0140089%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22public%20DefaultDeploymentCache(final%20int%20limit)%20%7B%5Cn%20%20this.cache%20%3D%20synchronizedMap(new%20LinkedHashMap%3CString%2C%20T%3E(limit%20%2B%201%2C%200.75f%2C%20true)%20%7B%20%2F%2F%20%2B1%20is%20needed%2C%20because%20the%20entry%20is%20inserted%20first%2C%20before%20it%20is%20removed%5Cn%20%20%20%20%20%20%20%20%2F%2F%200.75%20is%20the%20default%20(see%20javadocs)%5Cn%20%20%20%20%20%20%20%20%2F%2F%20true%20will%20keep%20the%20'access-order'%2C%20which%20is%20needed%20to%20have%20a%20real%20LRU%20cache%5Cn%20%20%20%20%20%20%20%20private%20static%20final%20long%20serialVersionUID%20%3D%201L%3B%5Cn%5Cn%20%20%20%20%20%20%20%20protected%20boolean%20removeEldestEntry(Map.Entry%3CString%2C%20T%3E%20eldest)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20boolean%20removeEldest%20%3D%20size()%20%3E%20limit%3B%5Cn%20%20%20%20%20%20%20%20%20%20if%20(removeEldest%20%26%26%20logger.isTraceEnabled())%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20logger.trace(%5C%22Cache%20limit%20is%20reached%2C%20%7B%7D%20will%20be%20evicted%5C%22%2C%20eldest.getKey())%3B%5Cn%20%20%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20%20%20return%20removeEldest%3B%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%5Cn%20%20%20%20%20%20%7D)%3B%5Cn%7D%22%7D\"></card><p data-lake-id=\"17490a72a62f039c321d72c74cd18d4f\"><br /></p><p data-lake-id=\"f19526bf81763214327e3ac677836308\">有参构造函数会传入一个limit,也就是缓存大小。下面的策略说的也很明白，如果超过了这个大小就会最老的给移除掉。</p><p data-lake-id=\"9577abb3cdb83bc9356405097f22cf20\">如果确定流程定义很少，那么可以用无限制的，如果很多肯定要用有限制的。</p><p data-lake-id=\"c882fb5ee2c223d55718327fd4ea9876\">所以无论有参还是无参，默认的缓存都是在内存里。</p><p data-lake-id=\"38149927f3adb4420e8892f924f659d7\">缓存的读取策略一般都是先从缓存拿，如果没拿到就从db拿，然后把缓存更新一下。多实例的情况下缓存不会同步，正常情况下也不会产生太多的问题，只是可能没命中多查了一次db而已。而之前提到的用ProcessDefinitionKey发起流程是特殊情况，这样的情况下没有同步缓存就会产生事故。</p><p data-lake-id=\"aa698477e3367da7b92350847621e139\">所以针对上述问题，个人认为最好还是使用redis这种中间键来做缓存。替换也很简单，实现一下DeploymentCache接口。然后在配置类中把他替换掉就好了。如果使用spring的话，直接替换bean即可。</p>",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"adapt\" /><meta name=\"typography\" content=\"classic\" /><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\">之前提到过流程的定义是放到缓存中的，而默认缓存是在内存中的在多实例部署的情况下会有隐患。今天来看一下这个缓存是如何实现的。</p><p data-lake-id=\"1f9caa87a61e2279a19084f5181fad6a\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22a38fe6ae%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22public%20interface%20DeploymentCache%3CT%3E%20%7B%5Cn%5Cn%20%20T%20get(String%20id)%3B%5Cn%5Cn%20%20boolean%20contains(String%20id)%3B%5Cn%5Cn%20%20void%20add(String%20id%2C%20T%20object)%3B%5Cn%5Cn%20%20void%20remove(String%20id)%3B%5Cn%5Cn%20%20void%20clear()%3B%5Cn%5Cn%7D%22%7D\"></card><p data-lake-id=\"4900074e25b12be36128a1645a0390ab\"><br /></p><p data-lake-id=\"f6fabd96d40087073c33720e89816b02\">activiti抽象了一个接口。并且提供了一个默认实现。</p><p data-lake-id=\"7209c30e0da85bee57e5d112b0ceaa26\">这个默认实现有两个构造函数。</p><p data-lake-id=\"1526a7c70d9d924e443fd8d61cf81cc3\">先来看一下有参数的这个构造函数</p><p data-lake-id=\"c08177ab5f951e9b682017ceb2816cc1\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22251361d1%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22public%20DefaultDeploymentCache()%20%7B%5Cn%20%20this.cache%20%3D%20synchronizedMap(new%20HashMap%3CString%2C%20T%3E())%3B%5Cn%7D%22%7D\"></card><p data-lake-id=\"d8d80f205f175f25b381946f377656b9\"><br /></p><p data-lake-id=\"a38f03e06ff331a998d0b6bd54d78639\">当使用无参构造函数的时候。缓存容器是HashMap</p><p data-lake-id=\"a47a25cedc27393d5c511893d0733656\">再来看一下有参构造函数</p><p data-lake-id=\"979b644610c52370d9aa543b35710022\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22b0140089%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22public%20DefaultDeploymentCache(final%20int%20limit)%20%7B%5Cn%20%20this.cache%20%3D%20synchronizedMap(new%20LinkedHashMap%3CString%2C%20T%3E(limit%20%2B%201%2C%200.75f%2C%20true)%20%7B%20%2F%2F%20%2B1%20is%20needed%2C%20because%20the%20entry%20is%20inserted%20first%2C%20before%20it%20is%20removed%5Cn%20%20%20%20%20%20%20%20%2F%2F%200.75%20is%20the%20default%20(see%20javadocs)%5Cn%20%20%20%20%20%20%20%20%2F%2F%20true%20will%20keep%20the%20'access-order'%2C%20which%20is%20needed%20to%20have%20a%20real%20LRU%20cache%5Cn%20%20%20%20%20%20%20%20private%20static%20final%20long%20serialVersionUID%20%3D%201L%3B%5Cn%5Cn%20%20%20%20%20%20%20%20protected%20boolean%20removeEldestEntry(Map.Entry%3CString%2C%20T%3E%20eldest)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20boolean%20removeEldest%20%3D%20size()%20%3E%20limit%3B%5Cn%20%20%20%20%20%20%20%20%20%20if%20(removeEldest%20%26%26%20logger.isTraceEnabled())%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20logger.trace(%5C%22Cache%20limit%20is%20reached%2C%20%7B%7D%20will%20be%20evicted%5C%22%2C%20eldest.getKey())%3B%5Cn%20%20%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20%20%20return%20removeEldest%3B%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%5Cn%20%20%20%20%20%20%7D)%3B%5Cn%7D%22%7D\"></card><p data-lake-id=\"17490a72a62f039c321d72c74cd18d4f\"><br /></p><p data-lake-id=\"f19526bf81763214327e3ac677836308\">有参构造函数会传入一个limit,也就是缓存大小。下面的策略说的也很明白，如果超过了这个大小就会最老的给移除掉。</p><p data-lake-id=\"9577abb3cdb83bc9356405097f22cf20\">如果确定流程定义很少，那么可以用无限制的，如果很多肯定要用有限制的。</p><p data-lake-id=\"c882fb5ee2c223d55718327fd4ea9876\">所以无论有参还是无参，默认的缓存都是在内存里。</p><p data-lake-id=\"38149927f3adb4420e8892f924f659d7\">缓存的读取策略一般都是先从缓存拿，如果没拿到就从db拿，然后把缓存更新一下。多实例的情况下缓存不会同步，正常情况下也不会产生太多的问题，只是可能没命中多查了一次db而已。而之前提到的用ProcessDefinitionKey发起流程是特殊情况，这样的情况下没有同步缓存就会产生事故。</p><p data-lake-id=\"aa698477e3367da7b92350847621e139\">所以针对上述问题，个人认为最好还是使用redis这种中间键来做缓存。替换也很简单，实现一下DeploymentCache接口。然后在配置类中把他替换掉就好了。如果使用spring的话，直接替换bean即可。</p>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2020-09-29T14:13:44.000Z",
    "deleted_at": null,
    "created_at": "2020-09-29T14:13:26.000Z",
    "updated_at": "2020-09-29T14:13:45.000Z",
    "published_at": "2020-09-29T14:13:44.000Z",
    "first_published_at": "2020-09-29T14:13:44.000Z",
    "word_count": 634,
    "cover": null,
    "description": "之前提到过流程的定义是放到缓存中的，而默认缓存是在内存中的在多实例部署的情况下会有隐患。今天来看一下这个缓存是如何实现的。public interface DeploymentCache<T> {    T get(String id);    boolean contains(String ...",
    "custom_description": null,
    "hits": 0,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 13904496,
    "slug": "ibxg7i",
    "title": "Activiti7源码分析(六)-发起流程",
    "book_id": 1840429,
    "book": {
      "id": 1840429,
      "type": "Book",
      "slug": "lmikoto",
      "name": "笔记",
      "user_id": 328252,
      "description": "",
      "creator_id": 328252,
      "public": 0,
      "items_count": 15,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2020-09-29T14:16:16.754Z",
      "updated_at": "2020-09-29T14:16:16.000Z",
      "created_at": "2020-09-29T12:57:45.000Z",
      "namespace": "lmikoto/lmikoto",
      "user": {
        "id": 328252,
        "type": "User",
        "login": "lmikoto",
        "name": "lmikoto",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/328252/1578028416108-avatar/38f12fe6-da0d-471e-819c-7131fadbd750.png",
        "books_count": 1,
        "public_books_count": 0,
        "followers_count": 0,
        "following_count": 0,
        "created_at": "2019-04-25T04:31:29.000Z",
        "updated_at": "2020-09-29T12:57:45.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 328252,
    "creator": {
      "id": 328252,
      "type": "User",
      "login": "lmikoto",
      "name": "lmikoto",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/328252/1578028416108-avatar/38f12fe6-da0d-471e-819c-7131fadbd750.png",
      "books_count": 1,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2019-04-25T04:31:29.000Z",
      "updated_at": "2020-09-29T12:57:45.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "发起流程是service都在runtimeService中。Service的调用链路可以看之前的文章。这里直接从cmd开始。<br />发起流程肯定要获取这个流程是怎么定义的。<br />```Java<br />DeploymentManager deploymentCache = commandContext.getProcessEngineConfiguration().getDeploymentManager();<br />\n<br />ProcessDefinitionRetriever processRetriever = new ProcessDefinitionRetriever(this.tenantId, deploymentCache);<br />ProcessDefinition processDefinition = processRetriever.getProcessDefinition(this.processDefinitionId, this.processDefinitionKey);<br />```<br />看一下getProcessDefinition的实现<br />```Java<br />if (processDefinitionId == null && processDefinitionKey == null) {<br />      throw new ActivitiIllegalArgumentException(\"processDefinitionKey and processDefinitionId are null\");<br />  }<br />\n<br />  ProcessDefinition processDefinition = this.getProcessDefinitionByProcessDefinitionId(processDefinitionId, deploymentCache);<br />  if(processDefinition == null) {<br />      processDefinition = (processDefinitionKey != null && hasNoTenant(tenantId)) ?<br />          this.getProcessDefinitionByProcessDefinitionKey(processDefinitionKey, deploymentCache):<br />          this.getProcessDefinitionByProcessDefinitionKeyAndTenantId(processDefinitionKey, tenantId, deploymentCache);<br />      if (processDefinition == null) {<br />          throw new ActivitiObjectNotFoundException(\"No process definition found for key '\" + processDefinitionKey + \"' for tenant identifier \" + tenantId, ProcessDefinition.class);<br />      }<br />  }<br />\n<br />  return processDefinition;<br />```<br />这里先简单介绍一下processDefinitionId、processDefinitionKey吧。processDefinitionId是流程图的唯一标示。每次修改流程图，新的流程图都会和之前的不一样。而processDefinitionKey是创建图的时候会新建一个，而之后修改都不会变动。<br />调用这个cmd的方法，有的会把这两个都传过来，有的只会传一个，所以这里会有一些判断。<br />由于processDefinitionId是唯一的，所以他这里会先判断有没有processDefinitionId，如果有的话用processDefinitionId从缓存中找流程定义。如果没有的话，再用processDefinitionKey从缓存中找。<br />这里其实有点小坑。如果在多实例的情况下，使用默认的缓存机制及内存缓存。如果更新了定义，不同实例的缓存是不会同步的。如果是用processDefinitionKey为依据去发起流程的话，可能会由于缓存没同步而造成事故。<br />针对这个坑点，发起实例尽量用processDefinitionId来发起，或者使用中间键作为缓存。<br />我们继续。这里会尝试从缓存中拿。如果拿不到就从db中拿。代码如下<br />```Java<br />public ProcessDefinition findDeployedProcessDefinitionById(String processDefinitionId) {<br />    if (processDefinitionId == null) {<br />      throw new ActivitiIllegalArgumentException(\"Invalid process definition id : null\");<br />    }<br />\n<br />    // first try the cache<br />    ProcessDefinitionCacheEntry cacheEntry = processDefinitionCache.get(processDefinitionId);<br />    ProcessDefinition processDefinition = cacheEntry != null ? cacheEntry.getProcessDefinition() : null;<br />\n<br />    if (processDefinition == null) {<br />      processDefinition = processDefinitionEntityManager.findById(processDefinitionId);<br />      if (processDefinition == null) {<br />        throw new ActivitiObjectNotFoundException(\"no deployed process definition found with id '\" + processDefinitionId + \"'\", ProcessDefinition.class);<br />      }<br />      processDefinition = resolveProcessDefinition(processDefinition).getProcessDefinition();<br />    }<br />    return processDefinition;<br />  }<br />```<br />拿到流程定义之后，发起流程<br />```Java<br />ProcessInstance processInstance = createAndStartProcessInstance(processDefinition, businessKey, processInstanceName, variables, transientVariables);<br />```<br />点进去这个，然后向下追踪<br />```Java<br />public ExecutionEntity createProcessInstanceWithInitialFlowElement(ProcessDefinition processDefinition,<br />                                                                       String businessKey,<br />                                                                       String processInstanceName,<br />                                                                       FlowElement initialFlowElement,<br />                                                                       Process process) {<br />\n<br />        // ....<br />        ExecutionEntity processInstance = commandContext.getExecutionEntityManager()<br />            .createProcessInstanceExecution(processDefinition,<br />                businessKey,<br />                processDefinition.getTenantId(),<br />                initiatorVariableName);<br />        // ....<br />\n<br />        return processInstance;<br />    }<br />```<br />ProcessInstance（流程实例）、Execution（执行实例)。ProcessInstance是主执行流，继承Execution。当流程中没有分治的时候这两个概念其实是相等的。在activiti中，这种情况下他们的id都会相同。而如果流程中存在分支比，那么在分支口会形成子Execution。<br />这里我们点进去看他的方法。首先进行数据组装。<br />```Java<br />ExecutionEntity processInstanceExecution = executionDataManager.create();<br />\n<br />if (isExecutionRelatedEntityCountEnabledGlobally()) {<br />    ((CountingExecutionEntity) processInstanceExecution).setCountEnabled(true);<br />}<br />\n<br />processInstanceExecution.setProcessDefinitionId(processDefinition.getId());<br />processInstanceExecution.setProcessDefinitionKey(processDefinition.getKey());<br />processInstanceExecution.setProcessDefinitionName(processDefinition.getName());<br />processInstanceExecution.setProcessDefinitionVersion(processDefinition.getVersion());<br />processInstanceExecution.setAppVersion(processDefinition.getAppVersion());<br />processInstanceExecution.setBusinessKey(businessKey);<br />processInstanceExecution.setScope(true); // process instance is always a scope for all child executions<br />\n<br />// Inherit tenant id (if any)<br />if (tenantId != null) {<br />    processInstanceExecution.setTenantId(tenantId);<br />}<br />\n<br />String authenticatedUserId = Authentication.getAuthenticatedUserId();<br />\n<br />processInstanceExecution.setStartUserId(authenticatedUserId);<br />```<br />插入数据库,这里可以看到 流程实例执行的时候会抛两个事件，ENTITY_CREATED、ENTITY_INITIALIZED可以接一下用于定制化需求。<br />```Java<br />public void insert(EntityImpl entity, boolean fireCreateEvent) {<br />    getDataManager().insert(entity);<br />\n<br />    ActivitiEventDispatcher eventDispatcher = getEventDispatcher();<br />    if (fireCreateEvent && eventDispatcher.isEnabled()) {<br />      eventDispatcher.dispatchEvent(ActivitiEventBuilder.createEntityEvent(ActivitiEventType.ENTITY_CREATED, entity));<br />      eventDispatcher.dispatchEvent(ActivitiEventBuilder.createEntityEvent(ActivitiEventType.ENTITY_INITIALIZED, entity));<br />    }<br />  }<br />```<br />这里插入的是ExecutionEntity对象，他对应的表是ACT_RU_EXECUTION。然后返回流程实例id。<br />回到之前<br />```Java<br />if (startProcessInstance) {<br />    CommandContext commandContext = Context.getCommandContext();<br />    startProcessInstance(processInstance, commandContext, variables, initialFlowElement, transientVariables);<br />}<br />```<br />如果创建流程实例成功。则启动实例。<br />具体的启动实例这里就不展开了。启动实例之后返回流程实例id，至此流程发布结束。\n",
    "body_draft": "发起流程是service都在runtimeService中。Service的调用链路可以看之前的文章。这里直接从cmd开始。<br />发起流程肯定要获取这个流程是怎么定义的。<br />\n\n```java\nDeploymentManager deploymentCache = commandContext.getProcessEngineConfiguration().getDeploymentManager();\n\nProcessDefinitionRetriever processRetriever = new ProcessDefinitionRetriever(this.tenantId, deploymentCache);\nProcessDefinition processDefinition = processRetriever.getProcessDefinition(this.processDefinitionId, this.processDefinitionKey);\n```\n\n<br />看一下getProcessDefinition的实现<br />\n\n```java\nif (processDefinitionId == null && processDefinitionKey == null) {\n      throw new ActivitiIllegalArgumentException(\"processDefinitionKey and processDefinitionId are null\");\n  }\n\n  ProcessDefinition processDefinition = this.getProcessDefinitionByProcessDefinitionId(processDefinitionId, deploymentCache);\n  if(processDefinition == null) {\n      processDefinition = (processDefinitionKey != null && hasNoTenant(tenantId)) ?\n          this.getProcessDefinitionByProcessDefinitionKey(processDefinitionKey, deploymentCache):\n          this.getProcessDefinitionByProcessDefinitionKeyAndTenantId(processDefinitionKey, tenantId, deploymentCache);\n      if (processDefinition == null) {\n          throw new ActivitiObjectNotFoundException(\"No process definition found for key '\" + processDefinitionKey + \"' for tenant identifier \" + tenantId, ProcessDefinition.class);\n      }\n  }\n\n  return processDefinition;\n```\n\n<br />这里先简单介绍一下processDefinitionId、processDefinitionKey吧。processDefinitionId是流程图的唯一标示。每次修改流程图，新的流程图都会和之前的不一样。而processDefinitionKey是创建图的时候会新建一个，而之后修改都不会变动。<br />调用这个cmd的方法，有的会把这两个都传过来，有的只会传一个，所以这里会有一些判断。<br />由于processDefinitionId是唯一的，所以他这里会先判断有没有processDefinitionId，如果有的话用processDefinitionId从缓存中找流程定义。如果没有的话，再用processDefinitionKey从缓存中找。<br />这里其实有点小坑。如果在多实例的情况下，使用默认的缓存机制及内存缓存。如果更新了定义，不同实例的缓存是不会同步的。如果是用processDefinitionKey为依据去发起流程的话，可能会由于缓存没同步而造成事故。<br />针对这个坑点，发起实例尽量用processDefinitionId来发起，或者使用中间键作为缓存。<br />我们继续。这里会尝试从缓存中拿。如果拿不到就从db中拿。代码如下<br />\n\n```java\npublic ProcessDefinition findDeployedProcessDefinitionById(String processDefinitionId) {\n    if (processDefinitionId == null) {\n      throw new ActivitiIllegalArgumentException(\"Invalid process definition id : null\");\n    }\n\n    // first try the cache\n    ProcessDefinitionCacheEntry cacheEntry = processDefinitionCache.get(processDefinitionId);\n    ProcessDefinition processDefinition = cacheEntry != null ? cacheEntry.getProcessDefinition() : null;\n\n    if (processDefinition == null) {\n      processDefinition = processDefinitionEntityManager.findById(processDefinitionId);\n      if (processDefinition == null) {\n        throw new ActivitiObjectNotFoundException(\"no deployed process definition found with id '\" + processDefinitionId + \"'\", ProcessDefinition.class);\n      }\n      processDefinition = resolveProcessDefinition(processDefinition).getProcessDefinition();\n    }\n    return processDefinition;\n  }\n```\n\n<br />拿到流程定义之后，发起流程<br />\n\n```java\nProcessInstance processInstance = createAndStartProcessInstance(processDefinition, businessKey, processInstanceName, variables, transientVariables);\n```\n\n<br />点进去这个，然后向下追踪<br />\n\n```java\npublic ExecutionEntity createProcessInstanceWithInitialFlowElement(ProcessDefinition processDefinition,\n                                                                       String businessKey,\n                                                                       String processInstanceName,\n                                                                       FlowElement initialFlowElement,\n                                                                       Process process) {\n\n        // ....\n        ExecutionEntity processInstance = commandContext.getExecutionEntityManager()\n            .createProcessInstanceExecution(processDefinition,\n                businessKey,\n                processDefinition.getTenantId(),\n                initiatorVariableName);\n        // ....\n\n        return processInstance;\n    }\n```\n\n<br />ProcessInstance（流程实例）、Execution（执行实例)。ProcessInstance是主执行流，继承Execution。当流程中没有分治的时候这两个概念其实是相等的。在activiti中，这种情况下他们的id都会相同。而如果流程中存在分支比，那么在分支口会形成子Execution。<br />这里我们点进去看他的方法。首先进行数据组装。<br />\n\n```java\nExecutionEntity processInstanceExecution = executionDataManager.create();\n\nif (isExecutionRelatedEntityCountEnabledGlobally()) {\n    ((CountingExecutionEntity) processInstanceExecution).setCountEnabled(true);\n}\n\nprocessInstanceExecution.setProcessDefinitionId(processDefinition.getId());\nprocessInstanceExecution.setProcessDefinitionKey(processDefinition.getKey());\nprocessInstanceExecution.setProcessDefinitionName(processDefinition.getName());\nprocessInstanceExecution.setProcessDefinitionVersion(processDefinition.getVersion());\nprocessInstanceExecution.setAppVersion(processDefinition.getAppVersion());\nprocessInstanceExecution.setBusinessKey(businessKey);\nprocessInstanceExecution.setScope(true); // process instance is always a scope for all child executions\n\n// Inherit tenant id (if any)\nif (tenantId != null) {\n    processInstanceExecution.setTenantId(tenantId);\n}\n\nString authenticatedUserId = Authentication.getAuthenticatedUserId();\n\nprocessInstanceExecution.setStartUserId(authenticatedUserId);\n```\n\n<br />插入数据库,这里可以看到 流程实例执行的时候会抛两个事件，ENTITY_CREATED、ENTITY_INITIALIZED可以接一下用于定制化需求。<br />\n\n```java\npublic void insert(EntityImpl entity, boolean fireCreateEvent) {\n    getDataManager().insert(entity);\n\n    ActivitiEventDispatcher eventDispatcher = getEventDispatcher();\n    if (fireCreateEvent && eventDispatcher.isEnabled()) {\n      eventDispatcher.dispatchEvent(ActivitiEventBuilder.createEntityEvent(ActivitiEventType.ENTITY_CREATED, entity));\n      eventDispatcher.dispatchEvent(ActivitiEventBuilder.createEntityEvent(ActivitiEventType.ENTITY_INITIALIZED, entity));\n    }\n  }\n```\n\n<br />这里插入的是ExecutionEntity对象，他对应的表是ACT_RU_EXECUTION。然后返回流程实例id。<br />回到之前<br />\n\n```java\nif (startProcessInstance) {\n    CommandContext commandContext = Context.getCommandContext();\n    startProcessInstance(processInstance, commandContext, variables, initialFlowElement, transientVariables);\n}\n```\n\n<br />如果创建流程实例成功。则启动实例。<br />具体的启动实例这里就不展开了。启动实例之后返回流程实例id，至此流程发布结束。\n",
    "body_html": "<!doctype html><div class=\"lake-content-editor-core lake-engine lake-typography-classic\" data-lake-element=\"root\" data-selection-undefined=\"%7B%22path%22%3A%5B%5B122%2C0%2C0%2C39%5D%2C%5B122%2C0%2C0%2C39%5D%5D%2C%22active%22%3Atrue%7D\"><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">发起流程是service都在runtimeService中。Service的调用链路可以看之前的文章。这里直接从cmd开始。</span></p><p data-lake-id=\"78cfd8ea9cd88e07a4d1432605dcef04\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">发起流程肯定要获取这个流程是怎么定义的。</span></p><p data-lake-id=\"52761c7e77b7edc93a571243f6443fd2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">```Java</span></p><p data-lake-id=\"6d80a2f206a2540c8615b67409b4ac83\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #4ec9b0;\">DeploymentManager</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #9cdcfe;\">deploymentCache</span><span style=\"color: #d4d4d4;\"> = </span><span style=\"color: #9cdcfe;\">commandContext</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">getProcessEngineConfiguration</span><span style=\"color: #d4d4d4;\">().</span><span style=\"color: #dcdcaa;\">getDeploymentManager</span><span style=\"color: #d4d4d4;\">();</span></p><p data-lake-id=\"ef1f47c147804152edd76f9728016a41\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"f887b1ebe68a0eb7188879b4709abab4\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #4ec9b0;\">ProcessDefinitionRetriever</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #9cdcfe;\">processRetriever</span><span style=\"color: #d4d4d4;\"> = </span><span style=\"color: #c586c0;\">new</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #dcdcaa;\">ProcessDefinitionRetriever</span><span style=\"color: #d4d4d4;\">(</span><span style=\"color: #569cd6;\">this</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #9cdcfe;\">tenantId</span><span style=\"color: #d4d4d4;\">, deploymentCache);</span></p><p data-lake-id=\"80b12b1823db5d6113a2599760cca24f\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #4ec9b0;\">ProcessDefinition</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #9cdcfe;\">processDefinition</span><span style=\"color: #d4d4d4;\"> = </span><span style=\"color: #9cdcfe;\">processRetriever</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">getProcessDefinition</span><span style=\"color: #d4d4d4;\">(</span><span style=\"color: #569cd6;\">this</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #9cdcfe;\">processDefinitionId</span><span style=\"color: #d4d4d4;\">, </span><span style=\"color: #569cd6;\">this</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #9cdcfe;\">processDefinitionKey</span><span style=\"color: #d4d4d4;\">);</span></p><p data-lake-id=\"1e2aa65c23e5c0c9ed7b2a094c7206b3\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">```</span></p><p data-lake-id=\"2bb0bc94e5bedea6ba8dc4ee13634b41\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">看一下getProcessDefinition的实现</span></p><p data-lake-id=\"57bfbac835e340c5c36e8e82a83d5c91\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">```Java</span></p><p data-lake-id=\"970fbcc790c8fad45f40c392f95468f2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #c586c0;\">if</span><span style=\"color: #d4d4d4;\"> (processDefinitionId == </span><span style=\"color: #569cd6;\">null</span><span style=\"color: #d4d4d4;\"> &amp;&amp; processDefinitionKey == </span><span style=\"color: #569cd6;\">null</span><span style=\"color: #d4d4d4;\">) {</span></p><p data-lake-id=\"9c0eace996a889183828730feb45a31e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">      </span><span style=\"color: #c586c0;\">throw</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #c586c0;\">new</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #dcdcaa;\">ActivitiIllegalArgumentException</span><span style=\"color: #d4d4d4;\">(</span><span style=\"color: #ce9178;\">\"processDefinitionKey and processDefinitionId are null\"</span><span style=\"color: #d4d4d4;\">);</span></p><p data-lake-id=\"e76b69f1226e053bcfbb6f53daedc678\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">  }</span></p><p data-lake-id=\"f478c4b58c65eff58321ff4893beeb71\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"c9185fe77cbe409f8cbc510dd4283343\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">  </span><span style=\"color: #4ec9b0;\">ProcessDefinition</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #9cdcfe;\">processDefinition</span><span style=\"color: #d4d4d4;\"> = </span><span style=\"color: #569cd6;\">this</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">getProcessDefinitionByProcessDefinitionId</span><span style=\"color: #d4d4d4;\">(processDefinitionId, deploymentCache);</span></p><p data-lake-id=\"b3c78218f528730a0f8de0b82162aa5e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">  </span><span style=\"color: #c586c0;\">if</span><span style=\"color: #d4d4d4;\">(processDefinition == </span><span style=\"color: #569cd6;\">null</span><span style=\"color: #d4d4d4;\">) {</span></p><p data-lake-id=\"421c5c91d26d3145252ee0f04ec03e10\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">      processDefinition = (processDefinitionKey != </span><span style=\"color: #569cd6;\">null</span><span style=\"color: #d4d4d4;\"> &amp;&amp; </span><span style=\"color: #dcdcaa;\">hasNoTenant</span><span style=\"color: #d4d4d4;\">(tenantId)) </span><span style=\"color: #c586c0;\">?</span></p><p data-lake-id=\"e66bc68809284beec4ba3b0846db8c1e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">          </span><span style=\"color: #569cd6;\">this</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">getProcessDefinitionByProcessDefinitionKey</span><span style=\"color: #d4d4d4;\">(processDefinitionKey, deploymentCache)</span><span style=\"color: #c586c0;\">:</span></p><p data-lake-id=\"5e835ca6ef7ae8ea91710b58ee238136\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">          </span><span style=\"color: #569cd6;\">this</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">getProcessDefinitionByProcessDefinitionKeyAndTenantId</span><span style=\"color: #d4d4d4;\">(processDefinitionKey, tenantId, deploymentCache);</span></p><p data-lake-id=\"4d830efeae23d6ff9d3613a22c42f800\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">      </span><span style=\"color: #c586c0;\">if</span><span style=\"color: #d4d4d4;\"> (processDefinition == </span><span style=\"color: #569cd6;\">null</span><span style=\"color: #d4d4d4;\">) {</span></p><p data-lake-id=\"7794b167d1b718f7fe1bc7ae640fe572\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">          </span><span style=\"color: #c586c0;\">throw</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #c586c0;\">new</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #dcdcaa;\">ActivitiObjectNotFoundException</span><span style=\"color: #d4d4d4;\">(</span><span style=\"color: #ce9178;\">\"No process definition found for key '\"</span><span style=\"color: #d4d4d4;\"> + processDefinitionKey + </span><span style=\"color: #ce9178;\">\"' for tenant identifier \"</span><span style=\"color: #d4d4d4;\"> + tenantId, </span><span style=\"color: #9cdcfe;\">ProcessDefinition</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #9cdcfe;\">class</span><span style=\"color: #d4d4d4;\">);</span></p><p data-lake-id=\"59b4725ad63cee4b04203c7c0fb80e97\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">      }</span></p><p data-lake-id=\"9f7966c42d600d4b496df27244d87934\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">  }</span></p><p data-lake-id=\"8c2fdaecc2fbf57519b6fb03cb429bea\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"96d5b601c909eb6cef6c7509f4038926\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">  </span><span style=\"color: #c586c0;\">return</span><span style=\"color: #d4d4d4;\"> processDefinition;</span></p><p data-lake-id=\"7dfd5bc422d00108aba610c0b1c562cd\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">```</span></p><p data-lake-id=\"8d65dfabc6951c5e35366f1e144c0731\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">这里先简单介绍一下processDefinitionId、processDefinitionKey吧。processDefinitionId是流程图的唯一标示。每次修改流程图，新的流程图都会和之前的不一样。而processDefinitionKey是创建图的时候会新建一个，而之后修改都不会变动。</span></p><p data-lake-id=\"eb6569e47b8d704f3c9628f74b77ef67\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">调用这个cmd的方法，有的会把这两个都传过来，有的只会传一个，所以这里会有一些判断。</span></p><p data-lake-id=\"1ad72d2db1c1c43d904ecc738c9332c6\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">由于processDefinitionId是唯一的，所以他这里会先判断有没有processDefinitionId，如果有的话用processDefinitionId从缓存中找流程定义。如果没有的话，再用processDefinitionKey从缓存中找。</span></p><p data-lake-id=\"5f86e736024fb327803a6bf5ee75a6a3\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">这里其实有点小坑。如果在多实例的情况下，使用默认的缓存机制及内存缓存。如果更新了定义，不同实例的缓存是不会同步的。如果是用processDefinitionKey为依据去发起流程的话，可能会由于缓存没同步而造成事故。</span></p><p data-lake-id=\"42f49db540f13d062910fb358d783daf\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">针对这个坑点，发起实例尽量用processDefinitionId来发起，或者使用中间键作为缓存。</span></p><p data-lake-id=\"45482345e2083308ba2c92ceb7e6fbbb\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">我们继续。这里会尝试从缓存中拿。如果拿不到就从db中拿。代码如下</span></p><p data-lake-id=\"f3f9d6af9aeb017443323e964d0ab2bf\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">```Java</span></p><p data-lake-id=\"30581f5b6cbc58e2d022a8f27ff183dc\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #569cd6;\">public</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #4ec9b0;\">ProcessDefinition</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #dcdcaa;\">findDeployedProcessDefinitionById</span><span style=\"color: #d4d4d4;\">(</span><span style=\"color: #4ec9b0;\">String</span><span style=\"color: #d4d4d4;\"> processDefinitionId) {</span></p><p data-lake-id=\"febd88ca09f7ce4763369faed2462b78\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">    </span><span style=\"color: #c586c0;\">if</span><span style=\"color: #d4d4d4;\"> (processDefinitionId == </span><span style=\"color: #569cd6;\">null</span><span style=\"color: #d4d4d4;\">) {</span></p><p data-lake-id=\"2b559de66fb77bdc0a67a48e399b6b2e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">      </span><span style=\"color: #c586c0;\">throw</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #c586c0;\">new</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #dcdcaa;\">ActivitiIllegalArgumentException</span><span style=\"color: #d4d4d4;\">(</span><span style=\"color: #ce9178;\">\"Invalid process definition id : null\"</span><span style=\"color: #d4d4d4;\">);</span></p><p data-lake-id=\"16d3de3d371f9921eacf84d6f55c861e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">    }</span></p><p data-lake-id=\"bc28b6a0c0e94f671ee617302c89f8bd\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"716f0691cf91da6a5c323d9587d17dca\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">    </span><span style=\"color: #6a9955;\">// first try the cache</span></p><p data-lake-id=\"2d43a800afc8a060479afd2f43a32ee0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">    </span><span style=\"color: #4ec9b0;\">ProcessDefinitionCacheEntry</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #9cdcfe;\">cacheEntry</span><span style=\"color: #d4d4d4;\"> = </span><span style=\"color: #9cdcfe;\">processDefinitionCache</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">get</span><span style=\"color: #d4d4d4;\">(processDefinitionId);</span></p><p data-lake-id=\"fedaf80ea599a640d2f5fad6ea58069b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">    </span><span style=\"color: #4ec9b0;\">ProcessDefinition</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #9cdcfe;\">processDefinition</span><span style=\"color: #d4d4d4;\"> = cacheEntry != </span><span style=\"color: #569cd6;\">null</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #c586c0;\">?</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #9cdcfe;\">cacheEntry</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">getProcessDefinition</span><span style=\"color: #d4d4d4;\">() </span><span style=\"color: #c586c0;\">:</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #569cd6;\">null</span><span style=\"color: #d4d4d4;\">;</span></p><p data-lake-id=\"eaf7077f7424437f51d67e4659016b89\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"8191aeaac1c7fcf2eb6d1c132cc2f667\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">    </span><span style=\"color: #c586c0;\">if</span><span style=\"color: #d4d4d4;\"> (processDefinition == </span><span style=\"color: #569cd6;\">null</span><span style=\"color: #d4d4d4;\">) {</span></p><p data-lake-id=\"019b80f47bb06a71f7603432978fe554\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">      processDefinition = </span><span style=\"color: #9cdcfe;\">processDefinitionEntityManager</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">findById</span><span style=\"color: #d4d4d4;\">(processDefinitionId);</span></p><p data-lake-id=\"92f1fc344e559e37c0399504c29a1cd2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">      </span><span style=\"color: #c586c0;\">if</span><span style=\"color: #d4d4d4;\"> (processDefinition == </span><span style=\"color: #569cd6;\">null</span><span style=\"color: #d4d4d4;\">) {</span></p><p data-lake-id=\"c1cd43990d48e4a620bf1c1c3d10716e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">        </span><span style=\"color: #c586c0;\">throw</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #c586c0;\">new</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #dcdcaa;\">ActivitiObjectNotFoundException</span><span style=\"color: #d4d4d4;\">(</span><span style=\"color: #ce9178;\">\"no deployed process definition found with id '\"</span><span style=\"color: #d4d4d4;\"> + processDefinitionId + </span><span style=\"color: #ce9178;\">\"'\"</span><span style=\"color: #d4d4d4;\">, </span><span style=\"color: #9cdcfe;\">ProcessDefinition</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #9cdcfe;\">class</span><span style=\"color: #d4d4d4;\">);</span></p><p data-lake-id=\"d378170ddf46dad804edfda3cf278456\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">      }</span></p><p data-lake-id=\"d5ff9bab696b77bf0fd13d5f13c6dffa\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">      processDefinition = </span><span style=\"color: #dcdcaa;\">resolveProcessDefinition</span><span style=\"color: #d4d4d4;\">(processDefinition).</span><span style=\"color: #dcdcaa;\">getProcessDefinition</span><span style=\"color: #d4d4d4;\">();</span></p><p data-lake-id=\"e92faea7e8476da6025a4cfcec419a88\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">    }</span></p><p data-lake-id=\"b86bec03ed7b66dcdc7d1a98d82cc177\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">    </span><span style=\"color: #c586c0;\">return</span><span style=\"color: #d4d4d4;\"> processDefinition;</span></p><p data-lake-id=\"c95e19f94fdd34e9a5301dee02d16314\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">  }</span></p><p data-lake-id=\"0a81d79802e494071de69e3f9350d40e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">```</span></p><p data-lake-id=\"0b57718b100750b2f7ef1feaf1aa82d8\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">拿到流程定义之后，发起流程</span></p><p data-lake-id=\"d72eca3ac18114745667bffd66d95f43\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">```Java</span></p><p data-lake-id=\"0a1c2ebb735cb7d88526c5c2565f732d\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #4ec9b0;\">ProcessInstance</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #9cdcfe;\">processInstance</span><span style=\"color: #d4d4d4;\"> = </span><span style=\"color: #dcdcaa;\">createAndStartProcessInstance</span><span style=\"color: #d4d4d4;\">(processDefinition, businessKey, processInstanceName, variables, transientVariables);</span></p><p data-lake-id=\"56fd1b0a9fda63f344a9cebbbe65a05a\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">```</span></p><p data-lake-id=\"72b8a311622c5f76c43af07951a95070\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">点进去这个，然后向下追踪</span></p><p data-lake-id=\"7d0ca2eff7938f73146dfccaac817bbe\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">```Java</span></p><p data-lake-id=\"24c7b260e99f8f22641069f6c1a1af4c\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #569cd6;\">public</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #4ec9b0;\">ExecutionEntity</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #dcdcaa;\">createProcessInstanceWithInitialFlowElement</span><span style=\"color: #d4d4d4;\">(</span><span style=\"color: #4ec9b0;\">ProcessDefinition</span><span style=\"color: #d4d4d4;\"> processDefinition,</span></p><p data-lake-id=\"e9a6220191db2ee54b3ae3bdbbd1cedf\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">                                                                       </span><span style=\"color: #4ec9b0;\">String</span><span style=\"color: #d4d4d4;\"> businessKey,</span></p><p data-lake-id=\"e24b484b5b96f72f7d0bbcea95363008\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">                                                                       </span><span style=\"color: #4ec9b0;\">String</span><span style=\"color: #d4d4d4;\"> processInstanceName,</span></p><p data-lake-id=\"9b7d0e3c3613479520d0f529c80b0285\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">                                                                       </span><span style=\"color: #4ec9b0;\">FlowElement</span><span style=\"color: #d4d4d4;\"> initialFlowElement,</span></p><p data-lake-id=\"dee08ebcdcc23e1f86e164e1f72d0de8\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">                                                                       </span><span style=\"color: #4ec9b0;\">Process</span><span style=\"color: #d4d4d4;\"> process) {</span></p><p data-lake-id=\"611c8f77bc7d124928a7970b7aa17a4c\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"dfa2399a9a8d0903f66d08f0d9e572fc\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">        </span><span style=\"color: #6a9955;\">// ....</span></p><p data-lake-id=\"95577c1c673bdecc49170c65bef2450f\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">        </span><span style=\"color: #4ec9b0;\">ExecutionEntity</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #9cdcfe;\">processInstance</span><span style=\"color: #d4d4d4;\"> = </span><span style=\"color: #9cdcfe;\">commandContext</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">getExecutionEntityManager</span><span style=\"color: #d4d4d4;\">()</span></p><p data-lake-id=\"980a8d1327fbd3b4fb7624a994c159b9\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">            .</span><span style=\"color: #dcdcaa;\">createProcessInstanceExecution</span><span style=\"color: #d4d4d4;\">(processDefinition,</span></p><p data-lake-id=\"5a2b293627d84585f20f2990b874ea2d\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">                businessKey,</span></p><p data-lake-id=\"31743a42f4b159b5a89cd75ba4b43a42\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">                </span><span style=\"color: #9cdcfe;\">processDefinition</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">getTenantId</span><span style=\"color: #d4d4d4;\">(),</span></p><p data-lake-id=\"4605a9c74d2fe4e9c7fc678181464e34\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">                initiatorVariableName);</span></p><p data-lake-id=\"f6de363266c854bb440ac7218d3d3f75\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">        </span><span style=\"color: #6a9955;\">// ....</span></p><p data-lake-id=\"cef0aba62ce21e876e25c92b045522e6\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"ceb80b24f3042418ece7cec2d053b41e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">        </span><span style=\"color: #c586c0;\">return</span><span style=\"color: #d4d4d4;\"> processInstance;</span></p><p data-lake-id=\"1277e54a8fbff1eb97d6ee72f2713f8d\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">    }</span></p><p data-lake-id=\"7e5a696a72dada77b53c7c974365fbd8\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">```</span></p><p data-lake-id=\"81ddce92767f56334089ffad94fb6924\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">ProcessInstance（流程实例）、Execution（执行实例)。ProcessInstance是主执行流，继承Execution。当流程中没有分治的时候这两个概念其实是相等的。在activiti中，这种情况下他们的id都会相同。而如果流程中存在分支比，那么在分支口会形成子Execution。</span></p><p data-lake-id=\"10c419bf1c7631bc64e70a3a56ddaf57\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">这里我们点进去看他的方法。首先进行数据组装。</span></p><p data-lake-id=\"2083a031bb03899395c5ae974eec5689\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">```Java</span></p><p data-lake-id=\"d5adc6556146472d875445f36f7dbc86\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #4ec9b0;\">ExecutionEntity</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #9cdcfe;\">processInstanceExecution</span><span style=\"color: #d4d4d4;\"> = </span><span style=\"color: #9cdcfe;\">executionDataManager</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">create</span><span style=\"color: #d4d4d4;\">();</span></p><p data-lake-id=\"81cc86157b8c24504a56307ee7272e0b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"cab23f474ea6149b03baaa731f6db29e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #c586c0;\">if</span><span style=\"color: #d4d4d4;\"> (</span><span style=\"color: #dcdcaa;\">isExecutionRelatedEntityCountEnabledGlobally</span><span style=\"color: #d4d4d4;\">()) {</span></p><p data-lake-id=\"8a3faf7239d3ebb541456680b9dd78ce\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">    ((CountingExecutionEntity) processInstanceExecution).</span><span style=\"color: #dcdcaa;\">setCountEnabled</span><span style=\"color: #d4d4d4;\">(</span><span style=\"color: #569cd6;\">true</span><span style=\"color: #d4d4d4;\">);</span></p><p data-lake-id=\"30c22831b9a9e50ce2ffb5aeee4055a7\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">}</span></p><p data-lake-id=\"e54daec61d2d4a28f817259f83b5f760\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"042aa17b8cda5e392b9ede8adc13d4c5\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #9cdcfe;\">processInstanceExecution</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">setProcessDefinitionId</span><span style=\"color: #d4d4d4;\">(</span><span style=\"color: #9cdcfe;\">processDefinition</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">getId</span><span style=\"color: #d4d4d4;\">());</span></p><p data-lake-id=\"248ee7220fbea7085e56d6481edf994f\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #9cdcfe;\">processInstanceExecution</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">setProcessDefinitionKey</span><span style=\"color: #d4d4d4;\">(</span><span style=\"color: #9cdcfe;\">processDefinition</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">getKey</span><span style=\"color: #d4d4d4;\">());</span></p><p data-lake-id=\"267d363ed766817076fd20ff3e7ceeb5\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #9cdcfe;\">processInstanceExecution</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">setProcessDefinitionName</span><span style=\"color: #d4d4d4;\">(</span><span style=\"color: #9cdcfe;\">processDefinition</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">getName</span><span style=\"color: #d4d4d4;\">());</span></p><p data-lake-id=\"bae9f076ba38837716a1c3161fdec33f\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #9cdcfe;\">processInstanceExecution</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">setProcessDefinitionVersion</span><span style=\"color: #d4d4d4;\">(</span><span style=\"color: #9cdcfe;\">processDefinition</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">getVersion</span><span style=\"color: #d4d4d4;\">());</span></p><p data-lake-id=\"696e13cafc8b08dd7934092c420a43bc\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #9cdcfe;\">processInstanceExecution</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">setAppVersion</span><span style=\"color: #d4d4d4;\">(</span><span style=\"color: #9cdcfe;\">processDefinition</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">getAppVersion</span><span style=\"color: #d4d4d4;\">());</span></p><p data-lake-id=\"b09f599bc713f8357f95f2e813612771\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #9cdcfe;\">processInstanceExecution</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">setBusinessKey</span><span style=\"color: #d4d4d4;\">(businessKey);</span></p><p data-lake-id=\"31e4077264d00080c2fe61d8cefc79eb\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #9cdcfe;\">processInstanceExecution</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">setScope</span><span style=\"color: #d4d4d4;\">(</span><span style=\"color: #569cd6;\">true</span><span style=\"color: #d4d4d4;\">); </span><span style=\"color: #6a9955;\">// process instance is always a scope for all child executions</span></p><p data-lake-id=\"41cb3a52e3b3c3c0e6005bbc3b166eb2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"e13aa98a4c712237351293cedd2e07f9\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #6a9955;\">// Inherit tenant id (if any)</span></p><p data-lake-id=\"4dcf07984d8e6a39055ccddb673c89c3\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #c586c0;\">if</span><span style=\"color: #d4d4d4;\"> (tenantId != </span><span style=\"color: #569cd6;\">null</span><span style=\"color: #d4d4d4;\">) {</span></p><p data-lake-id=\"d5116aa4d04910c05bff71965004b5f5\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">    </span><span style=\"color: #9cdcfe;\">processInstanceExecution</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">setTenantId</span><span style=\"color: #d4d4d4;\">(tenantId);</span></p><p data-lake-id=\"3bf3c8fbd8183379e71f61e127a7d644\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">}</span></p><p data-lake-id=\"940a16cd7c2df07a9b3c6938af6e894d\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"ede56c17654b1d79d5a5875f8272d960\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #4ec9b0;\">String</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #9cdcfe;\">authenticatedUserId</span><span style=\"color: #d4d4d4;\"> = </span><span style=\"color: #9cdcfe;\">Authentication</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">getAuthenticatedUserId</span><span style=\"color: #d4d4d4;\">();</span></p><p data-lake-id=\"6726c7dfe46f18eb8e4a73d38cb98fb9\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"0ae5b763ecd1798b561e50a7797f8dc4\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #9cdcfe;\">processInstanceExecution</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">setStartUserId</span><span style=\"color: #d4d4d4;\">(authenticatedUserId);</span></p><p data-lake-id=\"1aee3fb6ca09d4f72382d3fef91388de\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">```</span></p><p data-lake-id=\"ff138139e451b704c3bfcd6d9c3f0991\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">插入数据库,这里可以看到 流程实例执行的时候会抛两个事件，ENTITY_CREATED、ENTITY_INITIALIZED可以接一下用于定制化需求。</span></p><p data-lake-id=\"65f5a1611f2ae89fbb9c1f5b83898ccd\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">```Java</span></p><p data-lake-id=\"964837566f26ba89b5070865e8859bbf\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #569cd6;\">public</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #4ec9b0;\">void</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #dcdcaa;\">insert</span><span style=\"color: #d4d4d4;\">(</span><span style=\"color: #4ec9b0;\">EntityImpl</span><span style=\"color: #d4d4d4;\"> entity, </span><span style=\"color: #4ec9b0;\">boolean</span><span style=\"color: #d4d4d4;\"> fireCreateEvent) {</span></p><p data-lake-id=\"1ea192f78e6df1b8ff6be398b48ad63b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">    </span><span style=\"color: #dcdcaa;\">getDataManager</span><span style=\"color: #d4d4d4;\">().</span><span style=\"color: #dcdcaa;\">insert</span><span style=\"color: #d4d4d4;\">(entity);</span></p><p data-lake-id=\"ac109426c932720d37d6b85824911225\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"a6f95352c7d52af3f594e9743e689ab0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">    </span><span style=\"color: #4ec9b0;\">ActivitiEventDispatcher</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #9cdcfe;\">eventDispatcher</span><span style=\"color: #d4d4d4;\"> = </span><span style=\"color: #dcdcaa;\">getEventDispatcher</span><span style=\"color: #d4d4d4;\">();</span></p><p data-lake-id=\"32681631efa502376cbfa5a2892242f5\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">    </span><span style=\"color: #c586c0;\">if</span><span style=\"color: #d4d4d4;\"> (fireCreateEvent &amp;&amp; </span><span style=\"color: #9cdcfe;\">eventDispatcher</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">isEnabled</span><span style=\"color: #d4d4d4;\">()) {</span></p><p data-lake-id=\"3aeadce3cc644b8b1abb300689efdff6\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">      </span><span style=\"color: #9cdcfe;\">eventDispatcher</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">dispatchEvent</span><span style=\"color: #d4d4d4;\">(</span><span style=\"color: #9cdcfe;\">ActivitiEventBuilder</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">createEntityEvent</span><span style=\"color: #d4d4d4;\">(</span><span style=\"color: #9cdcfe;\">ActivitiEventType</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #9cdcfe;\">ENTITY_CREATED</span><span style=\"color: #d4d4d4;\">, entity));</span></p><p data-lake-id=\"6ac1c49ab016d38debd5262c02dd069f\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">      </span><span style=\"color: #9cdcfe;\">eventDispatcher</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">dispatchEvent</span><span style=\"color: #d4d4d4;\">(</span><span style=\"color: #9cdcfe;\">ActivitiEventBuilder</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">createEntityEvent</span><span style=\"color: #d4d4d4;\">(</span><span style=\"color: #9cdcfe;\">ActivitiEventType</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #9cdcfe;\">ENTITY_INITIALIZED</span><span style=\"color: #d4d4d4;\">, entity));</span></p><p data-lake-id=\"22486c1997bfbc287568c4bb5ed1cf1e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">    }</span></p><p data-lake-id=\"46eb884ca0622ef7c6a968c4b7dbf64e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">  }</span></p><p data-lake-id=\"6a3efc72b0cddc8b061602b3e128dc2b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">```</span></p><p data-lake-id=\"42f4d0ae63b9e375a619d9ae22de6a18\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">这里插入的是ExecutionEntity对象，他对应的表是ACT_RU_EXECUTION。然后返回流程实例id。</span></p><p data-lake-id=\"fd7782df0f69574fa53a111e3968f146\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">回到之前</span></p><p data-lake-id=\"cfa464fdb6fb837492c8584de2219c92\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">```Java</span></p><p data-lake-id=\"7e6a30af610eb387de832d97460e3214\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #c586c0;\">if</span><span style=\"color: #d4d4d4;\"> (startProcessInstance) {</span></p><p data-lake-id=\"277d2b1e0c44d69aa02457e197cc57ec\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">    </span><span style=\"color: #4ec9b0;\">CommandContext</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #9cdcfe;\">commandContext</span><span style=\"color: #d4d4d4;\"> = </span><span style=\"color: #9cdcfe;\">Context</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">getCommandContext</span><span style=\"color: #d4d4d4;\">();</span></p><p data-lake-id=\"fab769c77f92dacbf3de4bbef3f3a4dd\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">    </span><span style=\"color: #dcdcaa;\">startProcessInstance</span><span style=\"color: #d4d4d4;\">(processInstance, commandContext, variables, initialFlowElement, transientVariables);</span></p><p data-lake-id=\"070bc33915999c3e3c5b97c0b8b5312c\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">}</span></p><p data-lake-id=\"917a7caf0f9b3051d233fc0df9d3e4c5\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">```</span></p><p data-lake-id=\"3c3aae2241f1b2ac6351751b00aab3b5\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">如果创建流程实例成功。则启动实例。</span></p><p data-lake-id=\"dcc29aa0c9915d4e03061a6807ccb6ca\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #d4d4d4;\">具体的启动实例这里就不展开了。启动实例之后返回流程实例id，至此流程发布结束。</span></p></div>",
    "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"adapt\" /><meta name=\"typography\" content=\"classic\" /><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\"><span style=\"color: #d4d4d4;\">发起流程是service都在runtimeService中。Service的调用链路可以看之前的文章。这里直接从cmd开始。</span></p><p data-lake-id=\"78cfd8ea9cd88e07a4d1432605dcef04\"><span style=\"color: #d4d4d4;\">发起流程肯定要获取这个流程是怎么定义的。</span></p><p data-lake-id=\"52761c7e77b7edc93a571243f6443fd2\"><span style=\"color: #d4d4d4;\">```Java</span></p><p data-lake-id=\"6d80a2f206a2540c8615b67409b4ac83\"><span style=\"color: #4ec9b0;\">DeploymentManager</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #9cdcfe;\">deploymentCache</span><span style=\"color: #d4d4d4;\"> = </span><span style=\"color: #9cdcfe;\">commandContext</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">getProcessEngineConfiguration</span><span style=\"color: #d4d4d4;\">().</span><span style=\"color: #dcdcaa;\">getDeploymentManager</span><span style=\"color: #d4d4d4;\">();</span></p><p data-lake-id=\"ef1f47c147804152edd76f9728016a41\"><br /></p><p data-lake-id=\"f887b1ebe68a0eb7188879b4709abab4\"><span style=\"color: #4ec9b0;\">ProcessDefinitionRetriever</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #9cdcfe;\">processRetriever</span><span style=\"color: #d4d4d4;\"> = </span><span style=\"color: #c586c0;\">new</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #dcdcaa;\">ProcessDefinitionRetriever</span><span style=\"color: #d4d4d4;\">(</span><span style=\"color: #569cd6;\">this</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #9cdcfe;\">tenantId</span><span style=\"color: #d4d4d4;\">, deploymentCache);</span></p><p data-lake-id=\"80b12b1823db5d6113a2599760cca24f\"><span style=\"color: #4ec9b0;\">ProcessDefinition</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #9cdcfe;\">processDefinition</span><span style=\"color: #d4d4d4;\"> = </span><span style=\"color: #9cdcfe;\">processRetriever</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">getProcessDefinition</span><span style=\"color: #d4d4d4;\">(</span><span style=\"color: #569cd6;\">this</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #9cdcfe;\">processDefinitionId</span><span style=\"color: #d4d4d4;\">, </span><span style=\"color: #569cd6;\">this</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #9cdcfe;\">processDefinitionKey</span><span style=\"color: #d4d4d4;\">);</span></p><p data-lake-id=\"1e2aa65c23e5c0c9ed7b2a094c7206b3\"><span style=\"color: #d4d4d4;\">```</span></p><p data-lake-id=\"2bb0bc94e5bedea6ba8dc4ee13634b41\"><span style=\"color: #d4d4d4;\">看一下getProcessDefinition的实现</span></p><p data-lake-id=\"57bfbac835e340c5c36e8e82a83d5c91\"><span style=\"color: #d4d4d4;\">```Java</span></p><p data-lake-id=\"970fbcc790c8fad45f40c392f95468f2\"><span style=\"color: #c586c0;\">if</span><span style=\"color: #d4d4d4;\"> (processDefinitionId == </span><span style=\"color: #569cd6;\">null</span><span style=\"color: #d4d4d4;\"> &amp;&amp; processDefinitionKey == </span><span style=\"color: #569cd6;\">null</span><span style=\"color: #d4d4d4;\">) {</span></p><p data-lake-id=\"9c0eace996a889183828730feb45a31e\"><span style=\"color: #d4d4d4;\">      </span><span style=\"color: #c586c0;\">throw</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #c586c0;\">new</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #dcdcaa;\">ActivitiIllegalArgumentException</span><span style=\"color: #d4d4d4;\">(</span><span style=\"color: #ce9178;\">&quot;processDefinitionKey and processDefinitionId are null&quot;</span><span style=\"color: #d4d4d4;\">);</span></p><p data-lake-id=\"e76b69f1226e053bcfbb6f53daedc678\"><span style=\"color: #d4d4d4;\">  }</span></p><p data-lake-id=\"f478c4b58c65eff58321ff4893beeb71\"><br /></p><p data-lake-id=\"c9185fe77cbe409f8cbc510dd4283343\"><span style=\"color: #d4d4d4;\">  </span><span style=\"color: #4ec9b0;\">ProcessDefinition</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #9cdcfe;\">processDefinition</span><span style=\"color: #d4d4d4;\"> = </span><span style=\"color: #569cd6;\">this</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">getProcessDefinitionByProcessDefinitionId</span><span style=\"color: #d4d4d4;\">(processDefinitionId, deploymentCache);</span></p><p data-lake-id=\"b3c78218f528730a0f8de0b82162aa5e\"><span style=\"color: #d4d4d4;\">  </span><span style=\"color: #c586c0;\">if</span><span style=\"color: #d4d4d4;\">(processDefinition == </span><span style=\"color: #569cd6;\">null</span><span style=\"color: #d4d4d4;\">) {</span></p><p data-lake-id=\"421c5c91d26d3145252ee0f04ec03e10\"><span style=\"color: #d4d4d4;\">      processDefinition = (processDefinitionKey != </span><span style=\"color: #569cd6;\">null</span><span style=\"color: #d4d4d4;\"> &amp;&amp; </span><span style=\"color: #dcdcaa;\">hasNoTenant</span><span style=\"color: #d4d4d4;\">(tenantId)) </span><span style=\"color: #c586c0;\">?</span></p><p data-lake-id=\"e66bc68809284beec4ba3b0846db8c1e\"><span style=\"color: #d4d4d4;\">          </span><span style=\"color: #569cd6;\">this</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">getProcessDefinitionByProcessDefinitionKey</span><span style=\"color: #d4d4d4;\">(processDefinitionKey, deploymentCache)</span><span style=\"color: #c586c0;\">:</span></p><p data-lake-id=\"5e835ca6ef7ae8ea91710b58ee238136\"><span style=\"color: #d4d4d4;\">          </span><span style=\"color: #569cd6;\">this</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">getProcessDefinitionByProcessDefinitionKeyAndTenantId</span><span style=\"color: #d4d4d4;\">(processDefinitionKey, tenantId, deploymentCache);</span></p><p data-lake-id=\"4d830efeae23d6ff9d3613a22c42f800\"><span style=\"color: #d4d4d4;\">      </span><span style=\"color: #c586c0;\">if</span><span style=\"color: #d4d4d4;\"> (processDefinition == </span><span style=\"color: #569cd6;\">null</span><span style=\"color: #d4d4d4;\">) {</span></p><p data-lake-id=\"7794b167d1b718f7fe1bc7ae640fe572\"><span style=\"color: #d4d4d4;\">          </span><span style=\"color: #c586c0;\">throw</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #c586c0;\">new</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #dcdcaa;\">ActivitiObjectNotFoundException</span><span style=\"color: #d4d4d4;\">(</span><span style=\"color: #ce9178;\">&quot;No process definition found for key '&quot;</span><span style=\"color: #d4d4d4;\"> + processDefinitionKey + </span><span style=\"color: #ce9178;\">&quot;' for tenant identifier &quot;</span><span style=\"color: #d4d4d4;\"> + tenantId, </span><span style=\"color: #9cdcfe;\">ProcessDefinition</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #9cdcfe;\">class</span><span style=\"color: #d4d4d4;\">);</span></p><p data-lake-id=\"59b4725ad63cee4b04203c7c0fb80e97\"><span style=\"color: #d4d4d4;\">      }</span></p><p data-lake-id=\"9f7966c42d600d4b496df27244d87934\"><span style=\"color: #d4d4d4;\">  }</span></p><p data-lake-id=\"8c2fdaecc2fbf57519b6fb03cb429bea\"><br /></p><p data-lake-id=\"96d5b601c909eb6cef6c7509f4038926\"><span style=\"color: #d4d4d4;\">  </span><span style=\"color: #c586c0;\">return</span><span style=\"color: #d4d4d4;\"> processDefinition;</span></p><p data-lake-id=\"7dfd5bc422d00108aba610c0b1c562cd\"><span style=\"color: #d4d4d4;\">```</span></p><p data-lake-id=\"8d65dfabc6951c5e35366f1e144c0731\"><span style=\"color: #d4d4d4;\">这里先简单介绍一下processDefinitionId、processDefinitionKey吧。processDefinitionId是流程图的唯一标示。每次修改流程图，新的流程图都会和之前的不一样。而processDefinitionKey是创建图的时候会新建一个，而之后修改都不会变动。</span></p><p data-lake-id=\"eb6569e47b8d704f3c9628f74b77ef67\"><span style=\"color: #d4d4d4;\">调用这个cmd的方法，有的会把这两个都传过来，有的只会传一个，所以这里会有一些判断。</span></p><p data-lake-id=\"1ad72d2db1c1c43d904ecc738c9332c6\"><span style=\"color: #d4d4d4;\">由于processDefinitionId是唯一的，所以他这里会先判断有没有processDefinitionId，如果有的话用processDefinitionId从缓存中找流程定义。如果没有的话，再用processDefinitionKey从缓存中找。</span></p><p data-lake-id=\"5f86e736024fb327803a6bf5ee75a6a3\"><span style=\"color: #d4d4d4;\">这里其实有点小坑。如果在多实例的情况下，使用默认的缓存机制及内存缓存。如果更新了定义，不同实例的缓存是不会同步的。如果是用processDefinitionKey为依据去发起流程的话，可能会由于缓存没同步而造成事故。</span></p><p data-lake-id=\"42f49db540f13d062910fb358d783daf\"><span style=\"color: #d4d4d4;\">针对这个坑点，发起实例尽量用processDefinitionId来发起，或者使用中间键作为缓存。</span></p><p data-lake-id=\"45482345e2083308ba2c92ceb7e6fbbb\"><span style=\"color: #d4d4d4;\">我们继续。这里会尝试从缓存中拿。如果拿不到就从db中拿。代码如下</span></p><p data-lake-id=\"f3f9d6af9aeb017443323e964d0ab2bf\"><span style=\"color: #d4d4d4;\">```Java</span></p><p data-lake-id=\"30581f5b6cbc58e2d022a8f27ff183dc\"><span style=\"color: #569cd6;\">public</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #4ec9b0;\">ProcessDefinition</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #dcdcaa;\">findDeployedProcessDefinitionById</span><span style=\"color: #d4d4d4;\">(</span><span style=\"color: #4ec9b0;\">String</span><span style=\"color: #d4d4d4;\"> processDefinitionId) {</span></p><p data-lake-id=\"febd88ca09f7ce4763369faed2462b78\"><span style=\"color: #d4d4d4;\">    </span><span style=\"color: #c586c0;\">if</span><span style=\"color: #d4d4d4;\"> (processDefinitionId == </span><span style=\"color: #569cd6;\">null</span><span style=\"color: #d4d4d4;\">) {</span></p><p data-lake-id=\"2b559de66fb77bdc0a67a48e399b6b2e\"><span style=\"color: #d4d4d4;\">      </span><span style=\"color: #c586c0;\">throw</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #c586c0;\">new</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #dcdcaa;\">ActivitiIllegalArgumentException</span><span style=\"color: #d4d4d4;\">(</span><span style=\"color: #ce9178;\">&quot;Invalid process definition id : null&quot;</span><span style=\"color: #d4d4d4;\">);</span></p><p data-lake-id=\"16d3de3d371f9921eacf84d6f55c861e\"><span style=\"color: #d4d4d4;\">    }</span></p><p data-lake-id=\"bc28b6a0c0e94f671ee617302c89f8bd\"><br /></p><p data-lake-id=\"716f0691cf91da6a5c323d9587d17dca\"><span style=\"color: #d4d4d4;\">    </span><span style=\"color: #6a9955;\">// first try the cache</span></p><p data-lake-id=\"2d43a800afc8a060479afd2f43a32ee0\"><span style=\"color: #d4d4d4;\">    </span><span style=\"color: #4ec9b0;\">ProcessDefinitionCacheEntry</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #9cdcfe;\">cacheEntry</span><span style=\"color: #d4d4d4;\"> = </span><span style=\"color: #9cdcfe;\">processDefinitionCache</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">get</span><span style=\"color: #d4d4d4;\">(processDefinitionId);</span></p><p data-lake-id=\"fedaf80ea599a640d2f5fad6ea58069b\"><span style=\"color: #d4d4d4;\">    </span><span style=\"color: #4ec9b0;\">ProcessDefinition</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #9cdcfe;\">processDefinition</span><span style=\"color: #d4d4d4;\"> = cacheEntry != </span><span style=\"color: #569cd6;\">null</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #c586c0;\">?</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #9cdcfe;\">cacheEntry</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">getProcessDefinition</span><span style=\"color: #d4d4d4;\">() </span><span style=\"color: #c586c0;\">:</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #569cd6;\">null</span><span style=\"color: #d4d4d4;\">;</span></p><p data-lake-id=\"eaf7077f7424437f51d67e4659016b89\"><br /></p><p data-lake-id=\"8191aeaac1c7fcf2eb6d1c132cc2f667\"><span style=\"color: #d4d4d4;\">    </span><span style=\"color: #c586c0;\">if</span><span style=\"color: #d4d4d4;\"> (processDefinition == </span><span style=\"color: #569cd6;\">null</span><span style=\"color: #d4d4d4;\">) {</span></p><p data-lake-id=\"019b80f47bb06a71f7603432978fe554\"><span style=\"color: #d4d4d4;\">      processDefinition = </span><span style=\"color: #9cdcfe;\">processDefinitionEntityManager</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">findById</span><span style=\"color: #d4d4d4;\">(processDefinitionId);</span></p><p data-lake-id=\"92f1fc344e559e37c0399504c29a1cd2\"><span style=\"color: #d4d4d4;\">      </span><span style=\"color: #c586c0;\">if</span><span style=\"color: #d4d4d4;\"> (processDefinition == </span><span style=\"color: #569cd6;\">null</span><span style=\"color: #d4d4d4;\">) {</span></p><p data-lake-id=\"c1cd43990d48e4a620bf1c1c3d10716e\"><span style=\"color: #d4d4d4;\">        </span><span style=\"color: #c586c0;\">throw</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #c586c0;\">new</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #dcdcaa;\">ActivitiObjectNotFoundException</span><span style=\"color: #d4d4d4;\">(</span><span style=\"color: #ce9178;\">&quot;no deployed process definition found with id '&quot;</span><span style=\"color: #d4d4d4;\"> + processDefinitionId + </span><span style=\"color: #ce9178;\">&quot;'&quot;</span><span style=\"color: #d4d4d4;\">, </span><span style=\"color: #9cdcfe;\">ProcessDefinition</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #9cdcfe;\">class</span><span style=\"color: #d4d4d4;\">);</span></p><p data-lake-id=\"d378170ddf46dad804edfda3cf278456\"><span style=\"color: #d4d4d4;\">      }</span></p><p data-lake-id=\"d5ff9bab696b77bf0fd13d5f13c6dffa\"><span style=\"color: #d4d4d4;\">      processDefinition = </span><span style=\"color: #dcdcaa;\">resolveProcessDefinition</span><span style=\"color: #d4d4d4;\">(processDefinition).</span><span style=\"color: #dcdcaa;\">getProcessDefinition</span><span style=\"color: #d4d4d4;\">();</span></p><p data-lake-id=\"e92faea7e8476da6025a4cfcec419a88\"><span style=\"color: #d4d4d4;\">    }</span></p><p data-lake-id=\"b86bec03ed7b66dcdc7d1a98d82cc177\"><span style=\"color: #d4d4d4;\">    </span><span style=\"color: #c586c0;\">return</span><span style=\"color: #d4d4d4;\"> processDefinition;</span></p><p data-lake-id=\"c95e19f94fdd34e9a5301dee02d16314\"><span style=\"color: #d4d4d4;\">  }</span></p><p data-lake-id=\"0a81d79802e494071de69e3f9350d40e\"><span style=\"color: #d4d4d4;\">```</span></p><p data-lake-id=\"0b57718b100750b2f7ef1feaf1aa82d8\"><span style=\"color: #d4d4d4;\">拿到流程定义之后，发起流程</span></p><p data-lake-id=\"d72eca3ac18114745667bffd66d95f43\"><span style=\"color: #d4d4d4;\">```Java</span></p><p data-lake-id=\"0a1c2ebb735cb7d88526c5c2565f732d\"><span style=\"color: #4ec9b0;\">ProcessInstance</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #9cdcfe;\">processInstance</span><span style=\"color: #d4d4d4;\"> = </span><span style=\"color: #dcdcaa;\">createAndStartProcessInstance</span><span style=\"color: #d4d4d4;\">(processDefinition, businessKey, processInstanceName, variables, transientVariables);</span></p><p data-lake-id=\"56fd1b0a9fda63f344a9cebbbe65a05a\"><span style=\"color: #d4d4d4;\">```</span></p><p data-lake-id=\"72b8a311622c5f76c43af07951a95070\"><span style=\"color: #d4d4d4;\">点进去这个，然后向下追踪</span></p><p data-lake-id=\"7d0ca2eff7938f73146dfccaac817bbe\"><span style=\"color: #d4d4d4;\">```Java</span></p><p data-lake-id=\"24c7b260e99f8f22641069f6c1a1af4c\"><span style=\"color: #569cd6;\">public</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #4ec9b0;\">ExecutionEntity</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #dcdcaa;\">createProcessInstanceWithInitialFlowElement</span><span style=\"color: #d4d4d4;\">(</span><span style=\"color: #4ec9b0;\">ProcessDefinition</span><span style=\"color: #d4d4d4;\"> processDefinition,</span></p><p data-lake-id=\"e9a6220191db2ee54b3ae3bdbbd1cedf\"><span style=\"color: #d4d4d4;\">                                                                       </span><span style=\"color: #4ec9b0;\">String</span><span style=\"color: #d4d4d4;\"> businessKey,</span></p><p data-lake-id=\"e24b484b5b96f72f7d0bbcea95363008\"><span style=\"color: #d4d4d4;\">                                                                       </span><span style=\"color: #4ec9b0;\">String</span><span style=\"color: #d4d4d4;\"> processInstanceName,</span></p><p data-lake-id=\"9b7d0e3c3613479520d0f529c80b0285\"><span style=\"color: #d4d4d4;\">                                                                       </span><span style=\"color: #4ec9b0;\">FlowElement</span><span style=\"color: #d4d4d4;\"> initialFlowElement,</span></p><p data-lake-id=\"dee08ebcdcc23e1f86e164e1f72d0de8\"><span style=\"color: #d4d4d4;\">                                                                       </span><span style=\"color: #4ec9b0;\">Process</span><span style=\"color: #d4d4d4;\"> process) {</span></p><p data-lake-id=\"611c8f77bc7d124928a7970b7aa17a4c\"><br /></p><p data-lake-id=\"dfa2399a9a8d0903f66d08f0d9e572fc\"><span style=\"color: #d4d4d4;\">        </span><span style=\"color: #6a9955;\">// ....</span></p><p data-lake-id=\"95577c1c673bdecc49170c65bef2450f\"><span style=\"color: #d4d4d4;\">        </span><span style=\"color: #4ec9b0;\">ExecutionEntity</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #9cdcfe;\">processInstance</span><span style=\"color: #d4d4d4;\"> = </span><span style=\"color: #9cdcfe;\">commandContext</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">getExecutionEntityManager</span><span style=\"color: #d4d4d4;\">()</span></p><p data-lake-id=\"980a8d1327fbd3b4fb7624a994c159b9\"><span style=\"color: #d4d4d4;\">            .</span><span style=\"color: #dcdcaa;\">createProcessInstanceExecution</span><span style=\"color: #d4d4d4;\">(processDefinition,</span></p><p data-lake-id=\"5a2b293627d84585f20f2990b874ea2d\"><span style=\"color: #d4d4d4;\">                businessKey,</span></p><p data-lake-id=\"31743a42f4b159b5a89cd75ba4b43a42\"><span style=\"color: #d4d4d4;\">                </span><span style=\"color: #9cdcfe;\">processDefinition</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">getTenantId</span><span style=\"color: #d4d4d4;\">(),</span></p><p data-lake-id=\"4605a9c74d2fe4e9c7fc678181464e34\"><span style=\"color: #d4d4d4;\">                initiatorVariableName);</span></p><p data-lake-id=\"f6de363266c854bb440ac7218d3d3f75\"><span style=\"color: #d4d4d4;\">        </span><span style=\"color: #6a9955;\">// ....</span></p><p data-lake-id=\"cef0aba62ce21e876e25c92b045522e6\"><br /></p><p data-lake-id=\"ceb80b24f3042418ece7cec2d053b41e\"><span style=\"color: #d4d4d4;\">        </span><span style=\"color: #c586c0;\">return</span><span style=\"color: #d4d4d4;\"> processInstance;</span></p><p data-lake-id=\"1277e54a8fbff1eb97d6ee72f2713f8d\"><span style=\"color: #d4d4d4;\">    }</span></p><p data-lake-id=\"7e5a696a72dada77b53c7c974365fbd8\"><span style=\"color: #d4d4d4;\">```</span></p><p data-lake-id=\"81ddce92767f56334089ffad94fb6924\"><span style=\"color: #d4d4d4;\">ProcessInstance（流程实例）、Execution（执行实例)。ProcessInstance是主执行流，继承Execution。当流程中没有分治的时候这两个概念其实是相等的。在activiti中，这种情况下他们的id都会相同。而如果流程中存在分支比，那么在分支口会形成子Execution。</span></p><p data-lake-id=\"10c419bf1c7631bc64e70a3a56ddaf57\"><span style=\"color: #d4d4d4;\">这里我们点进去看他的方法。首先进行数据组装。</span></p><p data-lake-id=\"2083a031bb03899395c5ae974eec5689\"><span style=\"color: #d4d4d4;\">```Java</span></p><p data-lake-id=\"d5adc6556146472d875445f36f7dbc86\"><span style=\"color: #4ec9b0;\">ExecutionEntity</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #9cdcfe;\">processInstanceExecution</span><span style=\"color: #d4d4d4;\"> = </span><span style=\"color: #9cdcfe;\">executionDataManager</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">create</span><span style=\"color: #d4d4d4;\">();</span></p><p data-lake-id=\"81cc86157b8c24504a56307ee7272e0b\"><br /></p><p data-lake-id=\"cab23f474ea6149b03baaa731f6db29e\"><span style=\"color: #c586c0;\">if</span><span style=\"color: #d4d4d4;\"> (</span><span style=\"color: #dcdcaa;\">isExecutionRelatedEntityCountEnabledGlobally</span><span style=\"color: #d4d4d4;\">()) {</span></p><p data-lake-id=\"8a3faf7239d3ebb541456680b9dd78ce\"><span style=\"color: #d4d4d4;\">    ((CountingExecutionEntity) processInstanceExecution).</span><span style=\"color: #dcdcaa;\">setCountEnabled</span><span style=\"color: #d4d4d4;\">(</span><span style=\"color: #569cd6;\">true</span><span style=\"color: #d4d4d4;\">);</span></p><p data-lake-id=\"30c22831b9a9e50ce2ffb5aeee4055a7\"><span style=\"color: #d4d4d4;\">}</span></p><p data-lake-id=\"e54daec61d2d4a28f817259f83b5f760\"><br /></p><p data-lake-id=\"042aa17b8cda5e392b9ede8adc13d4c5\"><span style=\"color: #9cdcfe;\">processInstanceExecution</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">setProcessDefinitionId</span><span style=\"color: #d4d4d4;\">(</span><span style=\"color: #9cdcfe;\">processDefinition</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">getId</span><span style=\"color: #d4d4d4;\">());</span></p><p data-lake-id=\"248ee7220fbea7085e56d6481edf994f\"><span style=\"color: #9cdcfe;\">processInstanceExecution</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">setProcessDefinitionKey</span><span style=\"color: #d4d4d4;\">(</span><span style=\"color: #9cdcfe;\">processDefinition</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">getKey</span><span style=\"color: #d4d4d4;\">());</span></p><p data-lake-id=\"267d363ed766817076fd20ff3e7ceeb5\"><span style=\"color: #9cdcfe;\">processInstanceExecution</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">setProcessDefinitionName</span><span style=\"color: #d4d4d4;\">(</span><span style=\"color: #9cdcfe;\">processDefinition</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">getName</span><span style=\"color: #d4d4d4;\">());</span></p><p data-lake-id=\"bae9f076ba38837716a1c3161fdec33f\"><span style=\"color: #9cdcfe;\">processInstanceExecution</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">setProcessDefinitionVersion</span><span style=\"color: #d4d4d4;\">(</span><span style=\"color: #9cdcfe;\">processDefinition</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">getVersion</span><span style=\"color: #d4d4d4;\">());</span></p><p data-lake-id=\"696e13cafc8b08dd7934092c420a43bc\"><span style=\"color: #9cdcfe;\">processInstanceExecution</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">setAppVersion</span><span style=\"color: #d4d4d4;\">(</span><span style=\"color: #9cdcfe;\">processDefinition</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">getAppVersion</span><span style=\"color: #d4d4d4;\">());</span></p><p data-lake-id=\"b09f599bc713f8357f95f2e813612771\"><span style=\"color: #9cdcfe;\">processInstanceExecution</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">setBusinessKey</span><span style=\"color: #d4d4d4;\">(businessKey);</span></p><p data-lake-id=\"31e4077264d00080c2fe61d8cefc79eb\"><span style=\"color: #9cdcfe;\">processInstanceExecution</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">setScope</span><span style=\"color: #d4d4d4;\">(</span><span style=\"color: #569cd6;\">true</span><span style=\"color: #d4d4d4;\">); </span><span style=\"color: #6a9955;\">// process instance is always a scope for all child executions</span></p><p data-lake-id=\"41cb3a52e3b3c3c0e6005bbc3b166eb2\"><br /></p><p data-lake-id=\"e13aa98a4c712237351293cedd2e07f9\"><span style=\"color: #6a9955;\">// Inherit tenant id (if any)</span></p><p data-lake-id=\"4dcf07984d8e6a39055ccddb673c89c3\"><span style=\"color: #c586c0;\">if</span><span style=\"color: #d4d4d4;\"> (tenantId != </span><span style=\"color: #569cd6;\">null</span><span style=\"color: #d4d4d4;\">) {</span></p><p data-lake-id=\"d5116aa4d04910c05bff71965004b5f5\"><span style=\"color: #d4d4d4;\">    </span><span style=\"color: #9cdcfe;\">processInstanceExecution</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">setTenantId</span><span style=\"color: #d4d4d4;\">(tenantId);</span></p><p data-lake-id=\"3bf3c8fbd8183379e71f61e127a7d644\"><span style=\"color: #d4d4d4;\">}</span></p><p data-lake-id=\"940a16cd7c2df07a9b3c6938af6e894d\"><br /></p><p data-lake-id=\"ede56c17654b1d79d5a5875f8272d960\"><span style=\"color: #4ec9b0;\">String</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #9cdcfe;\">authenticatedUserId</span><span style=\"color: #d4d4d4;\"> = </span><span style=\"color: #9cdcfe;\">Authentication</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">getAuthenticatedUserId</span><span style=\"color: #d4d4d4;\">();</span></p><p data-lake-id=\"6726c7dfe46f18eb8e4a73d38cb98fb9\"><br /></p><p data-lake-id=\"0ae5b763ecd1798b561e50a7797f8dc4\"><span style=\"color: #9cdcfe;\">processInstanceExecution</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">setStartUserId</span><span style=\"color: #d4d4d4;\">(authenticatedUserId);</span></p><p data-lake-id=\"1aee3fb6ca09d4f72382d3fef91388de\"><span style=\"color: #d4d4d4;\">```</span></p><p data-lake-id=\"ff138139e451b704c3bfcd6d9c3f0991\"><span style=\"color: #d4d4d4;\">插入数据库,这里可以看到 流程实例执行的时候会抛两个事件，ENTITY_CREATED、ENTITY_INITIALIZED可以接一下用于定制化需求。</span></p><p data-lake-id=\"65f5a1611f2ae89fbb9c1f5b83898ccd\"><span style=\"color: #d4d4d4;\">```Java</span></p><p data-lake-id=\"964837566f26ba89b5070865e8859bbf\"><span style=\"color: #569cd6;\">public</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #4ec9b0;\">void</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #dcdcaa;\">insert</span><span style=\"color: #d4d4d4;\">(</span><span style=\"color: #4ec9b0;\">EntityImpl</span><span style=\"color: #d4d4d4;\"> entity, </span><span style=\"color: #4ec9b0;\">boolean</span><span style=\"color: #d4d4d4;\"> fireCreateEvent) {</span></p><p data-lake-id=\"1ea192f78e6df1b8ff6be398b48ad63b\"><span style=\"color: #d4d4d4;\">    </span><span style=\"color: #dcdcaa;\">getDataManager</span><span style=\"color: #d4d4d4;\">().</span><span style=\"color: #dcdcaa;\">insert</span><span style=\"color: #d4d4d4;\">(entity);</span></p><p data-lake-id=\"ac109426c932720d37d6b85824911225\"><br /></p><p data-lake-id=\"a6f95352c7d52af3f594e9743e689ab0\"><span style=\"color: #d4d4d4;\">    </span><span style=\"color: #4ec9b0;\">ActivitiEventDispatcher</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #9cdcfe;\">eventDispatcher</span><span style=\"color: #d4d4d4;\"> = </span><span style=\"color: #dcdcaa;\">getEventDispatcher</span><span style=\"color: #d4d4d4;\">();</span></p><p data-lake-id=\"32681631efa502376cbfa5a2892242f5\"><span style=\"color: #d4d4d4;\">    </span><span style=\"color: #c586c0;\">if</span><span style=\"color: #d4d4d4;\"> (fireCreateEvent &amp;&amp; </span><span style=\"color: #9cdcfe;\">eventDispatcher</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">isEnabled</span><span style=\"color: #d4d4d4;\">()) {</span></p><p data-lake-id=\"3aeadce3cc644b8b1abb300689efdff6\"><span style=\"color: #d4d4d4;\">      </span><span style=\"color: #9cdcfe;\">eventDispatcher</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">dispatchEvent</span><span style=\"color: #d4d4d4;\">(</span><span style=\"color: #9cdcfe;\">ActivitiEventBuilder</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">createEntityEvent</span><span style=\"color: #d4d4d4;\">(</span><span style=\"color: #9cdcfe;\">ActivitiEventType</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #9cdcfe;\">ENTITY_CREATED</span><span style=\"color: #d4d4d4;\">, entity));</span></p><p data-lake-id=\"6ac1c49ab016d38debd5262c02dd069f\"><span style=\"color: #d4d4d4;\">      </span><span style=\"color: #9cdcfe;\">eventDispatcher</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">dispatchEvent</span><span style=\"color: #d4d4d4;\">(</span><span style=\"color: #9cdcfe;\">ActivitiEventBuilder</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">createEntityEvent</span><span style=\"color: #d4d4d4;\">(</span><span style=\"color: #9cdcfe;\">ActivitiEventType</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #9cdcfe;\">ENTITY_INITIALIZED</span><span style=\"color: #d4d4d4;\">, entity));</span></p><p data-lake-id=\"22486c1997bfbc287568c4bb5ed1cf1e\"><span style=\"color: #d4d4d4;\">    }</span></p><p data-lake-id=\"46eb884ca0622ef7c6a968c4b7dbf64e\"><span style=\"color: #d4d4d4;\">  }</span></p><p data-lake-id=\"6a3efc72b0cddc8b061602b3e128dc2b\"><span style=\"color: #d4d4d4;\">```</span></p><p data-lake-id=\"42f4d0ae63b9e375a619d9ae22de6a18\"><span style=\"color: #d4d4d4;\">这里插入的是ExecutionEntity对象，他对应的表是ACT_RU_EXECUTION。然后返回流程实例id。</span></p><p data-lake-id=\"fd7782df0f69574fa53a111e3968f146\"><span style=\"color: #d4d4d4;\">回到之前</span></p><p data-lake-id=\"cfa464fdb6fb837492c8584de2219c92\"><span style=\"color: #d4d4d4;\">```Java</span></p><p data-lake-id=\"7e6a30af610eb387de832d97460e3214\"><span style=\"color: #c586c0;\">if</span><span style=\"color: #d4d4d4;\"> (startProcessInstance) {</span></p><p data-lake-id=\"277d2b1e0c44d69aa02457e197cc57ec\"><span style=\"color: #d4d4d4;\">    </span><span style=\"color: #4ec9b0;\">CommandContext</span><span style=\"color: #d4d4d4;\"> </span><span style=\"color: #9cdcfe;\">commandContext</span><span style=\"color: #d4d4d4;\"> = </span><span style=\"color: #9cdcfe;\">Context</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #dcdcaa;\">getCommandContext</span><span style=\"color: #d4d4d4;\">();</span></p><p data-lake-id=\"fab769c77f92dacbf3de4bbef3f3a4dd\"><span style=\"color: #d4d4d4;\">    </span><span style=\"color: #dcdcaa;\">startProcessInstance</span><span style=\"color: #d4d4d4;\">(processInstance, commandContext, variables, initialFlowElement, transientVariables);</span></p><p data-lake-id=\"070bc33915999c3e3c5b97c0b8b5312c\"><span style=\"color: #d4d4d4;\">}</span></p><p data-lake-id=\"917a7caf0f9b3051d233fc0df9d3e4c5\"><span style=\"color: #d4d4d4;\">```</span></p><p data-lake-id=\"3c3aae2241f1b2ac6351751b00aab3b5\"><span style=\"color: #d4d4d4;\">如果创建流程实例成功。则启动实例。</span></p><p data-lake-id=\"dcc29aa0c9915d4e03061a6807ccb6ca\"><span style=\"color: #d4d4d4;\">具体的启动实例这里就不展开了。启动实例之后返回流程实例id，至此流程发布结束。</span></p>",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"adapt\" /><meta name=\"typography\" content=\"classic\" /><p data-lake-id=\"bc9704fc9550ab764807df9f4dac8a19\">发起流程是service都在runtimeService中。Service的调用链路可以看之前的文章。这里直接从cmd开始。</p><p data-lake-id=\"ff52d95b59259c4bcacc15797205bd2e\">发起流程肯定要获取这个流程是怎么定义的。</p><p data-lake-id=\"856a7c040ba38f347e61f2f9215d1e28\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22242f24c7%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22DeploymentManager%20deploymentCache%20%3D%20commandContext.getProcessEngineConfiguration().getDeploymentManager()%3B%5Cn%5CnProcessDefinitionRetriever%20processRetriever%20%3D%20new%20ProcessDefinitionRetriever(this.tenantId%2C%20deploymentCache)%3B%5CnProcessDefinition%20processDefinition%20%3D%20processRetriever.getProcessDefinition(this.processDefinitionId%2C%20this.processDefinitionKey)%3B%22%7D\"></card><p data-lake-id=\"82a56108156255f2aa6fb9794063bbec\"><br /></p><p data-lake-id=\"6d068addba1ed0ea822aa44744f9f17b\">看一下getProcessDefinition的实现</p><p data-lake-id=\"f180e234f461c064cdbafdb4141cf435\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22a93c5542%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22if%20(processDefinitionId%20%3D%3D%20null%20%26%26%20processDefinitionKey%20%3D%3D%20null)%20%7B%5Cn%20%20%20%20%20%20throw%20new%20ActivitiIllegalArgumentException(%5C%22processDefinitionKey%20and%20processDefinitionId%20are%20null%5C%22)%3B%5Cn%20%20%7D%5Cn%5Cn%20%20ProcessDefinition%20processDefinition%20%3D%20this.getProcessDefinitionByProcessDefinitionId(processDefinitionId%2C%20deploymentCache)%3B%5Cn%20%20if(processDefinition%20%3D%3D%20null)%20%7B%5Cn%20%20%20%20%20%20processDefinition%20%3D%20(processDefinitionKey%20!%3D%20null%20%26%26%20hasNoTenant(tenantId))%20%3F%5Cn%20%20%20%20%20%20%20%20%20%20this.getProcessDefinitionByProcessDefinitionKey(processDefinitionKey%2C%20deploymentCache)%3A%5Cn%20%20%20%20%20%20%20%20%20%20this.getProcessDefinitionByProcessDefinitionKeyAndTenantId(processDefinitionKey%2C%20tenantId%2C%20deploymentCache)%3B%5Cn%20%20%20%20%20%20if%20(processDefinition%20%3D%3D%20null)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20throw%20new%20ActivitiObjectNotFoundException(%5C%22No%20process%20definition%20found%20for%20key%20'%5C%22%20%2B%20processDefinitionKey%20%2B%20%5C%22'%20for%20tenant%20identifier%20%5C%22%20%2B%20tenantId%2C%20ProcessDefinition.class)%3B%5Cn%20%20%20%20%20%20%7D%5Cn%20%20%7D%5Cn%5Cn%20%20return%20processDefinition%3B%22%7D\"></card><p data-lake-id=\"fdcbe35037e270260a85b127e6896318\"><br /></p><p data-lake-id=\"edeb5f7879d5a488d4dc0e29a319e446\">这里先简单介绍一下processDefinitionId、processDefinitionKey吧。processDefinitionId是流程图的唯一标示。每次修改流程图，新的流程图都会和之前的不一样。而processDefinitionKey是创建图的时候会新建一个，而之后修改都不会变动。</p><p data-lake-id=\"965ab5d80e0027da9dd6eb7ae67a262b\">调用这个cmd的方法，有的会把这两个都传过来，有的只会传一个，所以这里会有一些判断。</p><p data-lake-id=\"1dff2c9d52bd4a3d30c075893983cb80\">由于processDefinitionId是唯一的，所以他这里会先判断有没有processDefinitionId，如果有的话用processDefinitionId从缓存中找流程定义。如果没有的话，再用processDefinitionKey从缓存中找。</p><p data-lake-id=\"c51186c57c3274a44355a6e1d92aef3d\">这里其实有点小坑。如果在多实例的情况下，使用默认的缓存机制及内存缓存。如果更新了定义，不同实例的缓存是不会同步的。如果是用processDefinitionKey为依据去发起流程的话，可能会由于缓存没同步而造成事故。</p><p data-lake-id=\"3e142eb104028ac35f4ca5b66857e91c\">针对这个坑点，发起实例尽量用processDefinitionId来发起，或者使用中间键作为缓存。</p><p data-lake-id=\"db698df0ad94f45897c247858faa5cb9\">我们继续。这里会尝试从缓存中拿。如果拿不到就从db中拿。代码如下</p><p data-lake-id=\"3a1959ccec6e87bdb8d9736fcaca4c81\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%2261576ba3%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22public%20ProcessDefinition%20findDeployedProcessDefinitionById(String%20processDefinitionId)%20%7B%5Cn%20%20%20%20if%20(processDefinitionId%20%3D%3D%20null)%20%7B%5Cn%20%20%20%20%20%20throw%20new%20ActivitiIllegalArgumentException(%5C%22Invalid%20process%20definition%20id%20%3A%20null%5C%22)%3B%5Cn%20%20%20%20%7D%5Cn%5Cn%20%20%20%20%2F%2F%20first%20try%20the%20cache%5Cn%20%20%20%20ProcessDefinitionCacheEntry%20cacheEntry%20%3D%20processDefinitionCache.get(processDefinitionId)%3B%5Cn%20%20%20%20ProcessDefinition%20processDefinition%20%3D%20cacheEntry%20!%3D%20null%20%3F%20cacheEntry.getProcessDefinition()%20%3A%20null%3B%5Cn%5Cn%20%20%20%20if%20(processDefinition%20%3D%3D%20null)%20%7B%5Cn%20%20%20%20%20%20processDefinition%20%3D%20processDefinitionEntityManager.findById(processDefinitionId)%3B%5Cn%20%20%20%20%20%20if%20(processDefinition%20%3D%3D%20null)%20%7B%5Cn%20%20%20%20%20%20%20%20throw%20new%20ActivitiObjectNotFoundException(%5C%22no%20deployed%20process%20definition%20found%20with%20id%20'%5C%22%20%2B%20processDefinitionId%20%2B%20%5C%22'%5C%22%2C%20ProcessDefinition.class)%3B%5Cn%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20processDefinition%20%3D%20resolveProcessDefinition(processDefinition).getProcessDefinition()%3B%5Cn%20%20%20%20%7D%5Cn%20%20%20%20return%20processDefinition%3B%5Cn%20%20%7D%22%7D\"></card><p data-lake-id=\"a323ce01ff59af8d011cc95290567531\"><br /></p><p data-lake-id=\"0a79d72d16172f03e2c5cb57f974405e\">拿到流程定义之后，发起流程</p><p data-lake-id=\"a949809f372d62850e8a41b5bac25565\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%2277f66a01%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22ProcessInstance%20processInstance%20%3D%20createAndStartProcessInstance(processDefinition%2C%20businessKey%2C%20processInstanceName%2C%20variables%2C%20transientVariables)%3B%22%7D\"></card><p data-lake-id=\"8326bf1161e5b14faa96d0acbdea3340\"><br /></p><p data-lake-id=\"b8c783b0c86f339234a1eec1cd1494c8\">点进去这个，然后向下追踪</p><p data-lake-id=\"9eeab61c183ae83e100fd6dd1b17ff8d\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%2228d79851%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22public%20ExecutionEntity%20createProcessInstanceWithInitialFlowElement(ProcessDefinition%20processDefinition%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20String%20businessKey%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20String%20processInstanceName%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20FlowElement%20initialFlowElement%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20Process%20process)%20%7B%5Cn%5Cn%20%20%20%20%20%20%20%20%2F%2F%20....%5Cn%20%20%20%20%20%20%20%20ExecutionEntity%20processInstance%20%3D%20commandContext.getExecutionEntityManager()%5Cn%20%20%20%20%20%20%20%20%20%20%20%20.createProcessInstanceExecution(processDefinition%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20businessKey%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20processDefinition.getTenantId()%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20initiatorVariableName)%3B%5Cn%20%20%20%20%20%20%20%20%2F%2F%20....%5Cn%5Cn%20%20%20%20%20%20%20%20return%20processInstance%3B%5Cn%20%20%20%20%7D%22%7D\"></card><p data-lake-id=\"961ed5117807e615485ef865272ff530\"><br /></p><p data-lake-id=\"503901512f24eba851fcce0ccac5ca4f\">ProcessInstance（流程实例）、Execution（执行实例)。ProcessInstance是主执行流，继承Execution。当流程中没有分治的时候这两个概念其实是相等的。在activiti中，这种情况下他们的id都会相同。而如果流程中存在分支比，那么在分支口会形成子Execution。</p><p data-lake-id=\"f1d46ee6164088470cc98eaa1cb409f5\">这里我们点进去看他的方法。首先进行数据组装。</p><p data-lake-id=\"c67cdcaf82db82a66174ab5757f39b34\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%224d8177ac%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22ExecutionEntity%20processInstanceExecution%20%3D%20executionDataManager.create()%3B%5Cn%5Cnif%20(isExecutionRelatedEntityCountEnabledGlobally())%20%7B%5Cn%20%20%20%20((CountingExecutionEntity)%20processInstanceExecution).setCountEnabled(true)%3B%5Cn%7D%5Cn%5CnprocessInstanceExecution.setProcessDefinitionId(processDefinition.getId())%3B%5CnprocessInstanceExecution.setProcessDefinitionKey(processDefinition.getKey())%3B%5CnprocessInstanceExecution.setProcessDefinitionName(processDefinition.getName())%3B%5CnprocessInstanceExecution.setProcessDefinitionVersion(processDefinition.getVersion())%3B%5CnprocessInstanceExecution.setAppVersion(processDefinition.getAppVersion())%3B%5CnprocessInstanceExecution.setBusinessKey(businessKey)%3B%5CnprocessInstanceExecution.setScope(true)%3B%20%2F%2F%20process%20instance%20is%20always%20a%20scope%20for%20all%20child%20executions%5Cn%5Cn%2F%2F%20Inherit%20tenant%20id%20(if%20any)%5Cnif%20(tenantId%20!%3D%20null)%20%7B%5Cn%20%20%20%20processInstanceExecution.setTenantId(tenantId)%3B%5Cn%7D%5Cn%5CnString%20authenticatedUserId%20%3D%20Authentication.getAuthenticatedUserId()%3B%5Cn%5CnprocessInstanceExecution.setStartUserId(authenticatedUserId)%3B%22%7D\"></card><p data-lake-id=\"1983f3968bfafe5de74e6c48496f5885\"><br /></p><p data-lake-id=\"30d5a805b122d2c364fb6d4c1ec1f8bc\">插入数据库,这里可以看到 流程实例执行的时候会抛两个事件，ENTITY_CREATED、ENTITY_INITIALIZED可以接一下用于定制化需求。</p><p data-lake-id=\"6386b8d017ce00642bcd853005b4ef25\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%2272f1b32c%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22public%20void%20insert(EntityImpl%20entity%2C%20boolean%20fireCreateEvent)%20%7B%5Cn%20%20%20%20getDataManager().insert(entity)%3B%5Cn%5Cn%20%20%20%20ActivitiEventDispatcher%20eventDispatcher%20%3D%20getEventDispatcher()%3B%5Cn%20%20%20%20if%20(fireCreateEvent%20%26%26%20eventDispatcher.isEnabled())%20%7B%5Cn%20%20%20%20%20%20eventDispatcher.dispatchEvent(ActivitiEventBuilder.createEntityEvent(ActivitiEventType.ENTITY_CREATED%2C%20entity))%3B%5Cn%20%20%20%20%20%20eventDispatcher.dispatchEvent(ActivitiEventBuilder.createEntityEvent(ActivitiEventType.ENTITY_INITIALIZED%2C%20entity))%3B%5Cn%20%20%20%20%7D%5Cn%20%20%7D%22%7D\"></card><p data-lake-id=\"ba09b92eb026ecc890b58a6b24df41bd\"><br /></p><p data-lake-id=\"53e55e5df7084c722988cae6c97469c8\">这里插入的是ExecutionEntity对象，他对应的表是ACT_RU_EXECUTION。然后返回流程实例id。</p><p data-lake-id=\"3ec4f8fce122af8d9d301fa7584d10af\">回到之前</p><p data-lake-id=\"1be677e8eb632749a328831cc8220cd4\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%224b1112e5%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22if%20(startProcessInstance)%20%7B%5Cn%20%20%20%20CommandContext%20commandContext%20%3D%20Context.getCommandContext()%3B%5Cn%20%20%20%20startProcessInstance(processInstance%2C%20commandContext%2C%20variables%2C%20initialFlowElement%2C%20transientVariables)%3B%5Cn%7D%22%7D\"></card><p data-lake-id=\"5ca389151a7bbab704c7ee47d7859d60\"><br /></p><p data-lake-id=\"f3ff59a9b826454fc9840e66cc4d1ff6\">如果创建流程实例成功。则启动实例。</p><p data-lake-id=\"cc6b4ac7e60d9503d0c09259e683e954\">具体的启动实例这里就不展开了。启动实例之后返回流程实例id，至此流程发布结束。</p>",
    "public": 1,
    "status": 0,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2020-09-29T14:13:26.000Z",
    "deleted_at": null,
    "created_at": "2020-09-29T14:08:35.000Z",
    "updated_at": "2020-09-29T14:13:26.000Z",
    "published_at": "2020-09-29T14:10:09.000Z",
    "first_published_at": "2020-09-29T14:09:38.000Z",
    "word_count": 1121,
    "cover": null,
    "description": "发起流程是service都在runtimeService中。Service的调用链路可以看之前的文章。这里直接从cmd开始。发起流程肯定要获取这个流程是怎么定义的。```JavaDeploymentManager deploymentCache = commandContext.getProc...",
    "custom_description": null,
    "hits": 0,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 13904443,
    "slug": "ev01pg",
    "title": "Activiti7源码分析(四)-id生成器",
    "book_id": 1840429,
    "book": {
      "id": 1840429,
      "type": "Book",
      "slug": "lmikoto",
      "name": "笔记",
      "user_id": 328252,
      "description": "",
      "creator_id": 328252,
      "public": 0,
      "items_count": 15,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2020-09-29T14:16:16.754Z",
      "updated_at": "2020-09-29T14:16:16.000Z",
      "created_at": "2020-09-29T12:57:45.000Z",
      "namespace": "lmikoto/lmikoto",
      "user": {
        "id": 328252,
        "type": "User",
        "login": "lmikoto",
        "name": "lmikoto",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/328252/1578028416108-avatar/38f12fe6-da0d-471e-819c-7131fadbd750.png",
        "books_count": 1,
        "public_books_count": 0,
        "followers_count": 0,
        "following_count": 0,
        "created_at": "2019-04-25T04:31:29.000Z",
        "updated_at": "2020-09-29T12:57:45.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 328252,
    "creator": {
      "id": 328252,
      "type": "User",
      "login": "lmikoto",
      "name": "lmikoto",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/328252/1578028416108-avatar/38f12fe6-da0d-471e-819c-7131fadbd750.png",
      "books_count": 1,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2019-04-25T04:31:29.000Z",
      "updated_at": "2020-09-29T12:57:45.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "activiti中定义了id生成器的接口，并且提供两个实现。当然你也可以自行实现。<br />\n\n```java\npublic interface IdGenerator {\n\n  String getNextId();\n\n}\n```\n\n<br />我们来看一下这个接口的两个实现。<br />\n\n<a name=\"DbIdGenerator\"></a>\n### DbIdGenerator\n\n<br />DbIdGenerator是activiti的IdGenerator默认实现。<br />\n\n```java\npublic synchronized String getNextId() {\n  if (lastId < nextId) {\n    getNewBlock();\n  }\n  long _nextId = nextId++;\n  return Long.toString(_nextId);\n}\n\nprotected synchronized void getNewBlock() {\n  IdBlock idBlock = commandExecutor.execute(commandConfig, new GetNextIdBlockCmd(idBlockSize));\n  this.nextId = idBlock.getNextId();\n  this.lastId = idBlock.getLastId();\n}\n\npublic IdBlock execute(CommandContext commandContext) {\n  PropertyEntity property = (PropertyEntity) commandContext.getPropertyEntityManager().findById(\"next.dbid\");\n  long oldValue = Long.parseLong(property.getValue());\n  long newValue = oldValue + idBlockSize;\n  property.setValue(Long.toString(newValue));\n  return new IdBlock(oldValue, newValue - 1);\n}\n```\n\n<br />从代码上很容易看出来，这种方案是在db里面记录了一个next.id的，每次生成2500个id，然后依次发放。<br />不过这里有点小坑。getNextId上面有synchronized关键字。保证了在单机模式下这个方法没有并发问题。但是在分布式环境下。这里有并发问题。可能生成出来的id重复。<br />\n\n<a name=\"StrongUuidGenerator\"></a>\n### StrongUuidGenerator\n\n\n```java\nprotected void ensureGeneratorInitialized() {\n  if (timeBasedGenerator == null) {\n    synchronized (StrongUuidGenerator.class) {\n      if (timeBasedGenerator == null) {\n        timeBasedGenerator = Generators.timeBasedGenerator(EthernetAddress.fromInterface());\n      }\n    }\n  }\n}\n```\n\n<br />这里是用jackson里面的uuid生成方法。而且也把机器环境传入进去了，这种id生成策略是不会有上面那个方法的分布式id重复问题。\n",
    "body_draft": "activiti中定义了id生成器的接口，并且提供两个实现。当然你也可以自行实现。<br />\n\n```java\npublic interface IdGenerator {\n\n  String getNextId();\n\n}\n```\n\n<br />我们来看一下这个接口的两个实现。<br />\n\n<a name=\"DbIdGenerator\"></a>\n### DbIdGenerator\n\n<br />DbIdGenerator是activiti的IdGenerator默认实现。<br />\n\n```java\npublic synchronized String getNextId() {\n  if (lastId < nextId) {\n    getNewBlock();\n  }\n  long _nextId = nextId++;\n  return Long.toString(_nextId);\n}\n\nprotected synchronized void getNewBlock() {\n  IdBlock idBlock = commandExecutor.execute(commandConfig, new GetNextIdBlockCmd(idBlockSize));\n  this.nextId = idBlock.getNextId();\n  this.lastId = idBlock.getLastId();\n}\n\npublic IdBlock execute(CommandContext commandContext) {\n  PropertyEntity property = (PropertyEntity) commandContext.getPropertyEntityManager().findById(\"next.dbid\");\n  long oldValue = Long.parseLong(property.getValue());\n  long newValue = oldValue + idBlockSize;\n  property.setValue(Long.toString(newValue));\n  return new IdBlock(oldValue, newValue - 1);\n}\n```\n\n<br />从代码上很容易看出来，这种方案是在db里面记录了一个next.id的，每次生成2500个id，然后依次发放。<br />不过这里有点小坑。getNextId上面有synchronized关键字。保证了在单机模式下这个方法没有并发问题。但是在分布式环境下。这里有并发问题。可能生成出来的id重复。<br />\n\n<a name=\"StrongUuidGenerator\"></a>\n### StrongUuidGenerator\n\n\n```java\nprotected void ensureGeneratorInitialized() {\n  if (timeBasedGenerator == null) {\n    synchronized (StrongUuidGenerator.class) {\n      if (timeBasedGenerator == null) {\n        timeBasedGenerator = Generators.timeBasedGenerator(EthernetAddress.fromInterface());\n      }\n    }\n  }\n}\n```\n\n<br />这里是用jackson里面的uuid生成方法。而且也把机器环境传入进去了，这种id生成策略是不会有上面那个方法的分布式id重复问题。\n",
    "body_html": "<!doctype html><div class=\"lake-content-editor-core lake-engine lake-typography-classic\" data-lake-element=\"root\" data-selection-undefined=\"%7B%22path%22%3A%5B%5B19%2C0%2C66%5D%2C%5B19%2C0%2C66%5D%5D%2C%22active%22%3Atrue%7D\"><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">activiti中定义了id生成器的接口，并且提供两个实现。当然你也可以自行实现。</p><p data-lake-id=\"66030a250dfb1120a6d8712276a21b3e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"b33dc075\" data-language=\"java\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">public</span> <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">interface</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">IdGenerator</span> {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">String</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getNextId</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div><p data-lake-id=\"ca537cdc9f06e69cecfadbc00da69126\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"cae6d1c7701b1eee206a30b181fe23bf\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">我们来看一下这个接口的两个实现。</p><p data-lake-id=\"7761fcec4dbfdacc007b31eb0035552b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 id=\"DbIdGenerator\" data-lake-id=\"b668f22bde3b2871d26cdd833c69ac60\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">DbIdGenerator</h3><p data-lake-id=\"430910208e4c64a4c5de7d806abd987a\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"499f5cd1ec01fe8f40e899df9a7398bd\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">DbIdGenerator是activiti的IdGenerator默认实现。</p><p data-lake-id=\"b296a6995d320e4e42a563a30795c5c9\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"7fff7215\" data-language=\"java\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">public</span> <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">synchronized</span> <span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">String</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getNextId</span>() {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">if</span> (<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">lastId</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">nextId</span>) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getNewBlock</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">long</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">_nextId</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">nextId</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">++</span>;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">return</span> <span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Long</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">toString</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">_nextId</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">protected</span> <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">synchronized</span> <span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">void</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getNewBlock</span>() {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">IdBlock</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">idBlock</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">commandExecutor</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">execute</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">commandConfig</span>, <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">new</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">GetNextIdBlockCmd</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">idBlockSize</span>));\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">this</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">nextId</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">idBlock</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getNextId</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">this</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">lastId</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">idBlock</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getLastId</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">public</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">IdBlock</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">execute</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">CommandContext</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">commandContext</span>) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">PropertyEntity</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">property</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> (<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">PropertyEntity</span>) <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">commandContext</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getPropertyEntityManager</span>().<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">findById</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"next.dbid\"</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">long</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">oldValue</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Long</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">parseLong</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">property</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getValue</span>());\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">long</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">newValue</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">oldValue</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">+</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">idBlockSize</span>;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">property</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">setValue</span>(<span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Long</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">toString</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">newValue</span>));\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">return</span> <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">new</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">IdBlock</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">oldValue</span>, <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">newValue</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">-</span> <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">1</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div><p data-lake-id=\"6f61ba5a5073db998b9f7843f813efb1\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"1cd9fe9983b2cd6525407eed348b1059\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">从代码上很容易看出来，这种方案是在db里面记录了一个next.id的，每次生成2500个id，然后依次发放。</p><p data-lake-id=\"530c7535c6e93e59d2cb37c189eb52af\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">不过这里有点小坑。getNextId上面有synchronized关键字。保证了在单机模式下这个方法没有并发问题。但是在分布式环境下。这里有并发问题。可能生成出来的id重复。</p><p data-lake-id=\"c8ebc5a46f231961bc493165fc3e121a\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 id=\"StrongUuidGenerator\" data-lake-id=\"69c61ce3cef642955d8d60730dd2ae9b\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">StrongUuidGenerator</h3><p data-lake-id=\"dfe251fadf3661d7af8a6780e314d313\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"c5aca15d\" data-language=\"java\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">protected</span> <span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">void</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ensureGeneratorInitialized</span>() {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">if</span> (<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">timeBasedGenerator</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">==</span> <span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">null</span>) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">synchronized</span> (<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">StrongUuidGenerator</span>.<span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">class</span>) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">if</span> (<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">timeBasedGenerator</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">==</span> <span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">null</span>) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">timeBasedGenerator</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Generators</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">timeBasedGenerator</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">EthernetAddress</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">fromInterface</span>());\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div><p data-lake-id=\"0eeb07ad26abf447d5dae7e524961721\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"99bd0b973ae6672b36a49c61a029d313\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">这里是用jackson里面的uuid生成方法。而且也把机器环境传入进去了，这种id生成策略是不会有上面那个方法的分布式id重复问题。</p></div>",
    "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"adapt\" /><meta name=\"typography\" content=\"classic\" /><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\">activiti中定义了id生成器的接口，并且提供两个实现。当然你也可以自行实现。</p><p data-lake-id=\"66030a250dfb1120a6d8712276a21b3e\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22b33dc075%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22public%20interface%20IdGenerator%20%7B%5Cn%5Cn%20%20String%20getNextId()%3B%5Cn%5Cn%7D%22%7D\"></card><p data-lake-id=\"ca537cdc9f06e69cecfadbc00da69126\"><br /></p><p data-lake-id=\"cae6d1c7701b1eee206a30b181fe23bf\">我们来看一下这个接口的两个实现。</p><p data-lake-id=\"7761fcec4dbfdacc007b31eb0035552b\"><br /></p><h3 id=\"DbIdGenerator\" data-lake-id=\"b668f22bde3b2871d26cdd833c69ac60\">DbIdGenerator</h3><p data-lake-id=\"430910208e4c64a4c5de7d806abd987a\"><br /></p><p data-lake-id=\"499f5cd1ec01fe8f40e899df9a7398bd\">DbIdGenerator是activiti的IdGenerator默认实现。</p><p data-lake-id=\"b296a6995d320e4e42a563a30795c5c9\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%227fff7215%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22public%20synchronized%20String%20getNextId()%20%7B%5Cn%20%20if%20(lastId%20%3C%20nextId)%20%7B%5Cn%20%20%20%20getNewBlock()%3B%5Cn%20%20%7D%5Cn%20%20long%20_nextId%20%3D%20nextId%2B%2B%3B%5Cn%20%20return%20Long.toString(_nextId)%3B%5Cn%7D%5Cn%5Cnprotected%20synchronized%20void%20getNewBlock()%20%7B%5Cn%20%20IdBlock%20idBlock%20%3D%20commandExecutor.execute(commandConfig%2C%20new%20GetNextIdBlockCmd(idBlockSize))%3B%5Cn%20%20this.nextId%20%3D%20idBlock.getNextId()%3B%5Cn%20%20this.lastId%20%3D%20idBlock.getLastId()%3B%5Cn%7D%5Cn%5Cnpublic%20IdBlock%20execute(CommandContext%20commandContext)%20%7B%5Cn%20%20PropertyEntity%20property%20%3D%20(PropertyEntity)%20commandContext.getPropertyEntityManager().findById(%5C%22next.dbid%5C%22)%3B%5Cn%20%20long%20oldValue%20%3D%20Long.parseLong(property.getValue())%3B%5Cn%20%20long%20newValue%20%3D%20oldValue%20%2B%20idBlockSize%3B%5Cn%20%20property.setValue(Long.toString(newValue))%3B%5Cn%20%20return%20new%20IdBlock(oldValue%2C%20newValue%20-%201)%3B%5Cn%7D%22%7D\"></card><p data-lake-id=\"6f61ba5a5073db998b9f7843f813efb1\"><br /></p><p data-lake-id=\"1cd9fe9983b2cd6525407eed348b1059\">从代码上很容易看出来，这种方案是在db里面记录了一个next.id的，每次生成2500个id，然后依次发放。</p><p data-lake-id=\"530c7535c6e93e59d2cb37c189eb52af\">不过这里有点小坑。getNextId上面有synchronized关键字。保证了在单机模式下这个方法没有并发问题。但是在分布式环境下。这里有并发问题。可能生成出来的id重复。</p><p data-lake-id=\"c8ebc5a46f231961bc493165fc3e121a\"><br /></p><h3 id=\"StrongUuidGenerator\" data-lake-id=\"69c61ce3cef642955d8d60730dd2ae9b\">StrongUuidGenerator</h3><p data-lake-id=\"dfe251fadf3661d7af8a6780e314d313\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22c5aca15d%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22protected%20void%20ensureGeneratorInitialized()%20%7B%5Cn%20%20if%20(timeBasedGenerator%20%3D%3D%20null)%20%7B%5Cn%20%20%20%20synchronized%20(StrongUuidGenerator.class)%20%7B%5Cn%20%20%20%20%20%20if%20(timeBasedGenerator%20%3D%3D%20null)%20%7B%5Cn%20%20%20%20%20%20%20%20timeBasedGenerator%20%3D%20Generators.timeBasedGenerator(EthernetAddress.fromInterface())%3B%5Cn%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D%5Cn%20%20%7D%5Cn%7D%22%7D\"></card><p data-lake-id=\"0eeb07ad26abf447d5dae7e524961721\"><br /></p><p data-lake-id=\"99bd0b973ae6672b36a49c61a029d313\">这里是用jackson里面的uuid生成方法。而且也把机器环境传入进去了，这种id生成策略是不会有上面那个方法的分布式id重复问题。</p>",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"adapt\" /><meta name=\"typography\" content=\"classic\" /><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\">activiti中定义了id生成器的接口，并且提供两个实现。当然你也可以自行实现。</p><p data-lake-id=\"66030a250dfb1120a6d8712276a21b3e\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22b33dc075%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22public%20interface%20IdGenerator%20%7B%5Cn%5Cn%20%20String%20getNextId()%3B%5Cn%5Cn%7D%22%7D\"></card><p data-lake-id=\"ca537cdc9f06e69cecfadbc00da69126\"><br /></p><p data-lake-id=\"cae6d1c7701b1eee206a30b181fe23bf\">我们来看一下这个接口的两个实现。</p><p data-lake-id=\"7761fcec4dbfdacc007b31eb0035552b\"><br /></p><h3 id=\"DbIdGenerator\" data-lake-id=\"b668f22bde3b2871d26cdd833c69ac60\">DbIdGenerator</h3><p data-lake-id=\"430910208e4c64a4c5de7d806abd987a\"><br /></p><p data-lake-id=\"499f5cd1ec01fe8f40e899df9a7398bd\">DbIdGenerator是activiti的IdGenerator默认实现。</p><p data-lake-id=\"b296a6995d320e4e42a563a30795c5c9\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%227fff7215%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22public%20synchronized%20String%20getNextId()%20%7B%5Cn%20%20if%20(lastId%20%3C%20nextId)%20%7B%5Cn%20%20%20%20getNewBlock()%3B%5Cn%20%20%7D%5Cn%20%20long%20_nextId%20%3D%20nextId%2B%2B%3B%5Cn%20%20return%20Long.toString(_nextId)%3B%5Cn%7D%5Cn%5Cnprotected%20synchronized%20void%20getNewBlock()%20%7B%5Cn%20%20IdBlock%20idBlock%20%3D%20commandExecutor.execute(commandConfig%2C%20new%20GetNextIdBlockCmd(idBlockSize))%3B%5Cn%20%20this.nextId%20%3D%20idBlock.getNextId()%3B%5Cn%20%20this.lastId%20%3D%20idBlock.getLastId()%3B%5Cn%7D%5Cn%5Cnpublic%20IdBlock%20execute(CommandContext%20commandContext)%20%7B%5Cn%20%20PropertyEntity%20property%20%3D%20(PropertyEntity)%20commandContext.getPropertyEntityManager().findById(%5C%22next.dbid%5C%22)%3B%5Cn%20%20long%20oldValue%20%3D%20Long.parseLong(property.getValue())%3B%5Cn%20%20long%20newValue%20%3D%20oldValue%20%2B%20idBlockSize%3B%5Cn%20%20property.setValue(Long.toString(newValue))%3B%5Cn%20%20return%20new%20IdBlock(oldValue%2C%20newValue%20-%201)%3B%5Cn%7D%22%7D\"></card><p data-lake-id=\"6f61ba5a5073db998b9f7843f813efb1\"><br /></p><p data-lake-id=\"1cd9fe9983b2cd6525407eed348b1059\">从代码上很容易看出来，这种方案是在db里面记录了一个next.id的，每次生成2500个id，然后依次发放。</p><p data-lake-id=\"530c7535c6e93e59d2cb37c189eb52af\">不过这里有点小坑。getNextId上面有synchronized关键字。保证了在单机模式下这个方法没有并发问题。但是在分布式环境下。这里有并发问题。可能生成出来的id重复。</p><p data-lake-id=\"c8ebc5a46f231961bc493165fc3e121a\"><br /></p><h3 id=\"StrongUuidGenerator\" data-lake-id=\"69c61ce3cef642955d8d60730dd2ae9b\">StrongUuidGenerator</h3><p data-lake-id=\"dfe251fadf3661d7af8a6780e314d313\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22c5aca15d%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22protected%20void%20ensureGeneratorInitialized()%20%7B%5Cn%20%20if%20(timeBasedGenerator%20%3D%3D%20null)%20%7B%5Cn%20%20%20%20synchronized%20(StrongUuidGenerator.class)%20%7B%5Cn%20%20%20%20%20%20if%20(timeBasedGenerator%20%3D%3D%20null)%20%7B%5Cn%20%20%20%20%20%20%20%20timeBasedGenerator%20%3D%20Generators.timeBasedGenerator(EthernetAddress.fromInterface())%3B%5Cn%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D%5Cn%20%20%7D%5Cn%7D%22%7D\"></card><p data-lake-id=\"0eeb07ad26abf447d5dae7e524961721\"><br /></p><p data-lake-id=\"99bd0b973ae6672b36a49c61a029d313\">这里是用jackson里面的uuid生成方法。而且也把机器环境传入进去了，这种id生成策略是不会有上面那个方法的分布式id重复问题。</p>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2020-09-29T14:06:58.000Z",
    "deleted_at": null,
    "created_at": "2020-09-29T14:06:38.000Z",
    "updated_at": "2020-09-29T14:06:58.000Z",
    "published_at": "2020-09-29T14:06:58.000Z",
    "first_published_at": "2020-09-29T14:06:58.000Z",
    "word_count": 402,
    "cover": null,
    "description": "activiti中定义了id生成器的接口，并且提供两个实现。当然你也可以自行实现。public interface IdGenerator {    String getNextId();  }我们来看一下这个接口的两个实现。DbIdGeneratorDbIdGenerator是activit...",
    "custom_description": null,
    "hits": 0,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 13904411,
    "slug": "lhined",
    "title": "Activiti7源码分析(三)-流程引擎配置类",
    "book_id": 1840429,
    "book": {
      "id": 1840429,
      "type": "Book",
      "slug": "lmikoto",
      "name": "笔记",
      "user_id": 328252,
      "description": "",
      "creator_id": 328252,
      "public": 0,
      "items_count": 15,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2020-09-29T14:16:16.754Z",
      "updated_at": "2020-09-29T14:16:16.000Z",
      "created_at": "2020-09-29T12:57:45.000Z",
      "namespace": "lmikoto/lmikoto",
      "user": {
        "id": 328252,
        "type": "User",
        "login": "lmikoto",
        "name": "lmikoto",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/328252/1578028416108-avatar/38f12fe6-da0d-471e-819c-7131fadbd750.png",
        "books_count": 1,
        "public_books_count": 0,
        "followers_count": 0,
        "following_count": 0,
        "created_at": "2019-04-25T04:31:29.000Z",
        "updated_at": "2020-09-29T12:57:45.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 328252,
    "creator": {
      "id": 328252,
      "type": "User",
      "login": "lmikoto",
      "name": "lmikoto",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/328252/1578028416108-avatar/38f12fe6-da0d-471e-819c-7131fadbd750.png",
      "books_count": 1,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2019-04-25T04:31:29.000Z",
      "updated_at": "2020-09-29T12:57:45.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "activiti的配置类是`org.activiti.engine.ProcessEngines`,本文主要讨论他的默认实现`getDefaultProcessEngine`<br />\n\n```java\npublic static ProcessEngine getProcessEngine(String processEngineName) {\n  if (!isInitialized()) {\n    init();\n  }\n  return processEngines.get(processEngineName);\n}\n```\n\n<br />首先，他会传进去一个default的字符串。<br />\n\n```java\npublic static ProcessEngine getProcessEngine(String processEngineName) {\n  if (!isInitialized()) {\n    init();\n  }\n  return processEngines.get(processEngineName);\n}\n```\n\n\n- 如果没有初始化，走初始化的逻辑\n- 返回processEngines map中的配配置，processEngineName就是上面传过来的default\n\n\n<br />然后再来看init方法<br />\n\n```java\n```java\n public synchronized static void init() {\n    // ...\n }\n```\n\n<br />这个方法是个同步方法。<br />\n\n```java\nif (!isInitialized()) {\n  // ...\n}\n```\n\n<br />这里又判断了一次是否初始化，可能有的人觉得这步判断有些多余，因为进入这个方法之前已经判断过了，但是在并发场景下并不多余，两个请求都没有初始化过流程引擎，同时走到init方法，然后其中一个先执行，另一个等待。一个执行完毕之后，另一个进来，发现已经初始化完成了，就不需要再执行了。<br />然后，获取activiti的配置文件activiti.cfg，进行初始化,代码如下。<br />\n\n```java\nClassLoader classLoader = ReflectUtil.getClassLoader();\nEnumeration<URL> resources = null;\ntry {\n  resources = classLoader.getResources(\"activiti.cfg.xml\");\n} catch (IOException e) {\n  throw new ActivitiIllegalArgumentException(\"problem retrieving activiti.cfg.xml resources on the classpath: \" + System.getProperty(\"java.class.path\"), e);\n}\n\n// Remove duplicated configuration URL's using set. Some\n// classloaders may return identical URL's twice, causing duplicate\n// startups\nSet<URL> configUrls = new HashSet<URL>();\nwhile (resources.hasMoreElements()) {\n  configUrls.add(resources.nextElement());\n}\nfor (Iterator<URL> iterator = configUrls.iterator(); iterator.hasNext();) {\n  URL resource = iterator.next();\n  log.info(\"Initializing process engine using configuration '{}'\", resource.toString());\n  initProcessEngineFromResource(resource);\n}\n```\n\n<br />首先去获取了一个ClassLoader，这个ClassLoader可以使用默认自带的，也可以使用自定制的。都没问题。然后获取一下配置文件的的位置。对这些位置去重。然后遍历这些url，进行初始化资源。<br />\n\n```java\nProcessEngineInfo processEngineInfo = processEngineInfosByResourceUrl.get(resourceUrl.toString());\n// if there is an existing process engine info\nif (processEngineInfo != null) {\n  // remove that process engine from the member fields\n  processEngineInfos.remove(processEngineInfo);\n  if (processEngineInfo.getException() == null) {\n    String processEngineName = processEngineInfo.getName();\n    processEngines.remove(processEngineName);\n    processEngineInfosByName.remove(processEngineName);\n  }\n  processEngineInfosByResourceUrl.remove(processEngineInfo.getResourceUrl());\n}\n```\n\n<br />这里上来也做了个一个类似去重的操作，因为初始化的过程中可能会失败，会走如 retry方法，这里保证每一个url对应的配置信息只有最后加载的那一个。<br />再来看一下构建流程引擎的方法<br />\n\n```java\nprivate static ProcessEngine buildProcessEngine(URL resource) {\n    InputStream inputStream = null;\n    try {\n      inputStream = resource.openStream();\n      ProcessEngineConfiguration processEngineConfiguration = ProcessEngineConfiguration.createProcessEngineConfigurationFromInputStream(inputStream);\n      return processEngineConfiguration.buildProcessEngine();\n\n    } catch (IOException e) {\n      throw new ActivitiIllegalArgumentException(\"couldn't open resource stream: \" + e.getMessage(), e);\n    } finally {\n      IoUtil.closeSilently(inputStream);\n    }\n}\n```\n\n<br />使用url构建 输入流。然后传入createProcessEngineConfigurationFromInputStream方法。再来看一下这个方法,然后依次往下找。<br />\n\n```java\npublic static ProcessEngineConfiguration parseProcessEngineConfiguration(Resource springResource, String beanName) {\n    DefaultListableBeanFactory beanFactory = new DefaultListableBeanFactory();\n    XmlBeanDefinitionReader xmlBeanDefinitionReader = new XmlBeanDefinitionReader(beanFactory);\n    xmlBeanDefinitionReader.setValidationMode(XmlBeanDefinitionReader.VALIDATION_XSD);\n    xmlBeanDefinitionReader.loadBeanDefinitions(springResource);\n    ProcessEngineConfigurationImpl processEngineConfiguration = (ProcessEngineConfigurationImpl) beanFactory.getBean(beanName);\n    processEngineConfiguration.setBeans(new SpringBeanFactoryProxyMap(beanFactory));\n    return processEngineConfiguration;\n}\n```\n\n<br />这里的beanname 是 processEngineConfiguration，这里省略了中间步骤。<br />这里是使用了spring的方法，把xml的配置转换成bean。<br />然后回到buildProcessEngine<br />\n\n```java\npublic ProcessEngine buildProcessEngine() {\n  init();\n  ProcessEngineImpl processEngine = new ProcessEngineImpl(this);\n  postProcessEngineInitialisation();\n\n  return processEngine;\n}\n```\n\n<br />这里也很好懂。<br />调用init方法，这个init方法就是上一篇中的那个init。在这里初始化了activiti的资源，包括上篇提到的命令执行器，和职责链，各种service<br />\n\n```java\ninitConfigurators();\nconfiguratorsBeforeInit();\ninitHistoryLevel();\ninitExpressionManager();\n\nif (usingRelationalDatabase) {\n  initDataSource();\n}\n\ninitAgendaFactory();\ninitHelpers();\ninitVariableTypes();\ninitBeans();\ninitScriptingEngines();\ninitClock();\ninitBusinessCalendarManager();\ninitCommandContextFactory();\ninitTransactionContextFactory();\ninitCommandExecutors();\ninitServices();\ninitIdGenerator();\ninitBehaviorFactory();\ninitListenerFactory();\ninitBpmnParser();\ninitProcessDefinitionCache();\ninitProcessDefinitionInfoCache();\ninitKnowledgeBaseCache();\ninitJobHandlers();\ninitJobManager();\ninitAsyncExecutor();\n\ninitTransactionFactory();\n\nif (usingRelationalDatabase) {\n  initSqlSessionFactory();\n}\n\ninitSessionFactories();\ninitDataManagers();\ninitEntityManagers();\ninitHistoryManager();\ninitJpa();\ninitDeployers();\ninitDelegateInterceptor();\ninitEventHandlers();\ninitFailedJobCommandFactory();\ninitEventDispatcher();\ninitProcessValidator();\ninitDatabaseEventLogging();\nconfiguratorsAfterInit();\n```\n\n<br />里面一些比较重要的，后面会进行讨论，这里就不进行展开了。<br />回到之前方法<br />\n\n```java\ntry {\n  resources = classLoader.getResources(\"activiti-context.xml\");\n} catch (IOException e) {\n  throw new ActivitiIllegalArgumentException(\"problem retrieving activiti-context.xml resources on the classpath: \" + System.getProperty(\"java.class.path\"), e);\n}\nwhile (resources.hasMoreElements()) {\n  URL resource = resources.nextElement();\n  log.info(\"Initializing process engine using Spring configuration '{}'\", resource.toString());\n  initProcessEngineFromSpringResource(resource);\n}\n```\n\n<br />activiti也支持Spring风格的初始化。这里获取了activiti-context.xml，然后调用initProcessEngineFromSpringResource初始化资源。<br />来看一下initProcessEngineFromSpringResource<br />\n\n```java\ntry {\n    Class<?> springConfigurationHelperClass = ReflectUtil.loadClass(\"org.activiti.spring.SpringConfigurationHelper\");\n    Method method = springConfigurationHelperClass.getDeclaredMethod(\"buildProcessEngine\", new Class<?>[] { URL.class });\n    ProcessEngine processEngine = (ProcessEngine) method.invoke(null, new Object[] { resource });\n\n    String processEngineName = processEngine.getName();\n    ProcessEngineInfo processEngineInfo = new ProcessEngineInfoImpl(processEngineName, resource.toString(), null);\n    processEngineInfosByName.put(processEngineName, processEngineInfo);\n    processEngineInfosByResourceUrl.put(resource.toString(), processEngineInfo);\n\n  } catch (Exception e) {\n    throw new ActivitiException(\"couldn't initialize process engine from spring configuration resource \" + resource.toString() + \": \" + e.getMessage(), e);\n  }\n```\n\n<br />通过反射调用SpringConfigurationHelper的buildProcessEngine方法。来看一下这个方法。<br />\n\n```java\npublic static ProcessEngine buildProcessEngine(URL resource) {\n  log.debug(\"==== BUILDING SPRING APPLICATION CONTEXT AND PROCESS ENGINE =========================================\");\n\n  ApplicationContext applicationContext = new GenericXmlApplicationContext(new UrlResource(resource));\n  Map<String, ProcessEngine> beansOfType = applicationContext.getBeansOfType(ProcessEngine.class);\n  if ((beansOfType == null) || (beansOfType.isEmpty())) {\n    throw new ActivitiException(\"no \" + ProcessEngine.class.getName() + \" defined in the application context \" + resource.toString());\n  }\n\n  ProcessEngine processEngine = beansOfType.values().iterator().next();\n\n  log.debug(\"==== SPRING PROCESS ENGINE CREATED ==================================================================\");\n  return processEngine;\n  }\n```\n\n<br />好的。activiti的配置类分析到此就结束了。<br />简单总结一下，activiti配置类主要的工作就是做一些配置的初始化工作，支持activiti风格的配置和spring风格的配置。\n",
    "body_draft": "activiti的配置类是`org.activiti.engine.ProcessEngines`,本文主要讨论他的默认实现`getDefaultProcessEngine`<br />\n\n```java\npublic static ProcessEngine getProcessEngine(String processEngineName) {\n  if (!isInitialized()) {\n    init();\n  }\n  return processEngines.get(processEngineName);\n}\n```\n\n<br />首先，他会传进去一个default的字符串。<br />\n\n```java\npublic static ProcessEngine getProcessEngine(String processEngineName) {\n  if (!isInitialized()) {\n    init();\n  }\n  return processEngines.get(processEngineName);\n}\n```\n\n\n- 如果没有初始化，走初始化的逻辑\n- 返回processEngines map中的配配置，processEngineName就是上面传过来的default\n\n\n<br />然后再来看init方法<br />\n\n```java\n```java\n public synchronized static void init() {\n    // ...\n }\n```\n\n<br />这个方法是个同步方法。<br />\n\n```java\nif (!isInitialized()) {\n  // ...\n}\n```\n\n<br />这里又判断了一次是否初始化，可能有的人觉得这步判断有些多余，因为进入这个方法之前已经判断过了，但是在并发场景下并不多余，两个请求都没有初始化过流程引擎，同时走到init方法，然后其中一个先执行，另一个等待。一个执行完毕之后，另一个进来，发现已经初始化完成了，就不需要再执行了。<br />然后，获取activiti的配置文件activiti.cfg，进行初始化,代码如下。<br />\n\n```java\nClassLoader classLoader = ReflectUtil.getClassLoader();\nEnumeration<URL> resources = null;\ntry {\n  resources = classLoader.getResources(\"activiti.cfg.xml\");\n} catch (IOException e) {\n  throw new ActivitiIllegalArgumentException(\"problem retrieving activiti.cfg.xml resources on the classpath: \" + System.getProperty(\"java.class.path\"), e);\n}\n\n// Remove duplicated configuration URL's using set. Some\n// classloaders may return identical URL's twice, causing duplicate\n// startups\nSet<URL> configUrls = new HashSet<URL>();\nwhile (resources.hasMoreElements()) {\n  configUrls.add(resources.nextElement());\n}\nfor (Iterator<URL> iterator = configUrls.iterator(); iterator.hasNext();) {\n  URL resource = iterator.next();\n  log.info(\"Initializing process engine using configuration '{}'\", resource.toString());\n  initProcessEngineFromResource(resource);\n}\n```\n\n<br />首先去获取了一个ClassLoader，这个ClassLoader可以使用默认自带的，也可以使用自定制的。都没问题。然后获取一下配置文件的的位置。对这些位置去重。然后遍历这些url，进行初始化资源。<br />\n\n```java\nProcessEngineInfo processEngineInfo = processEngineInfosByResourceUrl.get(resourceUrl.toString());\n// if there is an existing process engine info\nif (processEngineInfo != null) {\n  // remove that process engine from the member fields\n  processEngineInfos.remove(processEngineInfo);\n  if (processEngineInfo.getException() == null) {\n    String processEngineName = processEngineInfo.getName();\n    processEngines.remove(processEngineName);\n    processEngineInfosByName.remove(processEngineName);\n  }\n  processEngineInfosByResourceUrl.remove(processEngineInfo.getResourceUrl());\n}\n```\n\n<br />这里上来也做了个一个类似去重的操作，因为初始化的过程中可能会失败，会走如 retry方法，这里保证每一个url对应的配置信息只有最后加载的那一个。<br />再来看一下构建流程引擎的方法<br />\n\n```java\nprivate static ProcessEngine buildProcessEngine(URL resource) {\n    InputStream inputStream = null;\n    try {\n      inputStream = resource.openStream();\n      ProcessEngineConfiguration processEngineConfiguration = ProcessEngineConfiguration.createProcessEngineConfigurationFromInputStream(inputStream);\n      return processEngineConfiguration.buildProcessEngine();\n\n    } catch (IOException e) {\n      throw new ActivitiIllegalArgumentException(\"couldn't open resource stream: \" + e.getMessage(), e);\n    } finally {\n      IoUtil.closeSilently(inputStream);\n    }\n}\n```\n\n<br />使用url构建 输入流。然后传入createProcessEngineConfigurationFromInputStream方法。再来看一下这个方法,然后依次往下找。<br />\n\n```java\npublic static ProcessEngineConfiguration parseProcessEngineConfiguration(Resource springResource, String beanName) {\n    DefaultListableBeanFactory beanFactory = new DefaultListableBeanFactory();\n    XmlBeanDefinitionReader xmlBeanDefinitionReader = new XmlBeanDefinitionReader(beanFactory);\n    xmlBeanDefinitionReader.setValidationMode(XmlBeanDefinitionReader.VALIDATION_XSD);\n    xmlBeanDefinitionReader.loadBeanDefinitions(springResource);\n    ProcessEngineConfigurationImpl processEngineConfiguration = (ProcessEngineConfigurationImpl) beanFactory.getBean(beanName);\n    processEngineConfiguration.setBeans(new SpringBeanFactoryProxyMap(beanFactory));\n    return processEngineConfiguration;\n}\n```\n\n<br />这里的beanname 是 processEngineConfiguration，这里省略了中间步骤。<br />这里是使用了spring的方法，把xml的配置转换成bean。<br />然后回到buildProcessEngine<br />\n\n```java\npublic ProcessEngine buildProcessEngine() {\n  init();\n  ProcessEngineImpl processEngine = new ProcessEngineImpl(this);\n  postProcessEngineInitialisation();\n\n  return processEngine;\n}\n```\n\n<br />这里也很好懂。<br />调用init方法，这个init方法就是上一篇中的那个init。在这里初始化了activiti的资源，包括上篇提到的命令执行器，和职责链，各种service<br />\n\n```java\ninitConfigurators();\nconfiguratorsBeforeInit();\ninitHistoryLevel();\ninitExpressionManager();\n\nif (usingRelationalDatabase) {\n  initDataSource();\n}\n\ninitAgendaFactory();\ninitHelpers();\ninitVariableTypes();\ninitBeans();\ninitScriptingEngines();\ninitClock();\ninitBusinessCalendarManager();\ninitCommandContextFactory();\ninitTransactionContextFactory();\ninitCommandExecutors();\ninitServices();\ninitIdGenerator();\ninitBehaviorFactory();\ninitListenerFactory();\ninitBpmnParser();\ninitProcessDefinitionCache();\ninitProcessDefinitionInfoCache();\ninitKnowledgeBaseCache();\ninitJobHandlers();\ninitJobManager();\ninitAsyncExecutor();\n\ninitTransactionFactory();\n\nif (usingRelationalDatabase) {\n  initSqlSessionFactory();\n}\n\ninitSessionFactories();\ninitDataManagers();\ninitEntityManagers();\ninitHistoryManager();\ninitJpa();\ninitDeployers();\ninitDelegateInterceptor();\ninitEventHandlers();\ninitFailedJobCommandFactory();\ninitEventDispatcher();\ninitProcessValidator();\ninitDatabaseEventLogging();\nconfiguratorsAfterInit();\n```\n\n<br />里面一些比较重要的，后面会进行讨论，这里就不进行展开了。<br />回到之前方法<br />\n\n```java\ntry {\n  resources = classLoader.getResources(\"activiti-context.xml\");\n} catch (IOException e) {\n  throw new ActivitiIllegalArgumentException(\"problem retrieving activiti-context.xml resources on the classpath: \" + System.getProperty(\"java.class.path\"), e);\n}\nwhile (resources.hasMoreElements()) {\n  URL resource = resources.nextElement();\n  log.info(\"Initializing process engine using Spring configuration '{}'\", resource.toString());\n  initProcessEngineFromSpringResource(resource);\n}\n```\n\n<br />activiti也支持Spring风格的初始化。这里获取了activiti-context.xml，然后调用initProcessEngineFromSpringResource初始化资源。<br />来看一下initProcessEngineFromSpringResource<br />\n\n```java\ntry {\n    Class<?> springConfigurationHelperClass = ReflectUtil.loadClass(\"org.activiti.spring.SpringConfigurationHelper\");\n    Method method = springConfigurationHelperClass.getDeclaredMethod(\"buildProcessEngine\", new Class<?>[] { URL.class });\n    ProcessEngine processEngine = (ProcessEngine) method.invoke(null, new Object[] { resource });\n\n    String processEngineName = processEngine.getName();\n    ProcessEngineInfo processEngineInfo = new ProcessEngineInfoImpl(processEngineName, resource.toString(), null);\n    processEngineInfosByName.put(processEngineName, processEngineInfo);\n    processEngineInfosByResourceUrl.put(resource.toString(), processEngineInfo);\n\n  } catch (Exception e) {\n    throw new ActivitiException(\"couldn't initialize process engine from spring configuration resource \" + resource.toString() + \": \" + e.getMessage(), e);\n  }\n```\n\n<br />通过反射调用SpringConfigurationHelper的buildProcessEngine方法。来看一下这个方法。<br />\n\n```java\npublic static ProcessEngine buildProcessEngine(URL resource) {\n  log.debug(\"==== BUILDING SPRING APPLICATION CONTEXT AND PROCESS ENGINE =========================================\");\n\n  ApplicationContext applicationContext = new GenericXmlApplicationContext(new UrlResource(resource));\n  Map<String, ProcessEngine> beansOfType = applicationContext.getBeansOfType(ProcessEngine.class);\n  if ((beansOfType == null) || (beansOfType.isEmpty())) {\n    throw new ActivitiException(\"no \" + ProcessEngine.class.getName() + \" defined in the application context \" + resource.toString());\n  }\n\n  ProcessEngine processEngine = beansOfType.values().iterator().next();\n\n  log.debug(\"==== SPRING PROCESS ENGINE CREATED ==================================================================\");\n  return processEngine;\n  }\n```\n\n<br />好的。activiti的配置类分析到此就结束了。<br />简单总结一下，activiti配置类主要的工作就是做一些配置的初始化工作，支持activiti风格的配置和spring风格的配置。\n",
    "body_html": "<!doctype html><div class=\"lake-content-editor-core lake-engine lake-typography-classic\" data-lake-element=\"root\" data-selection-undefined=\"%7B%22path%22%3A%5B%5B62%2C0%2C65%5D%2C%5B62%2C0%2C65%5D%5D%2C%22active%22%3Atrue%7D\"><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">activiti的配置类是<code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">org.activiti.engine.ProcessEngines</code>,本文主要讨论他的默认实现<code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">getDefaultProcessEngine</code></p><p data-lake-id=\"e585058cf5fba8ac376692c101913612\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"23c2653a\" data-language=\"java\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">public</span> <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">static</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ProcessEngine</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getProcessEngine</span>(<span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">String</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">processEngineName</span>) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">if</span> (<span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">!</span><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">isInitialized</span>()) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">init</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">return</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">processEngines</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">get</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">processEngineName</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div><p data-lake-id=\"c0172c029920bbf2882f9d21aa4cbde0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"e37e52ad2def8a7f67ccd59a7835f0cc\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">首先，他会传进去一个default的字符串。</p><p data-lake-id=\"1f51a27559fd1300306c0b0b08f42d16\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"23c2653a-1\" data-language=\"java\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">public</span> <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">static</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ProcessEngine</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getProcessEngine</span>(<span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">String</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">processEngineName</span>) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">if</span> (<span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">!</span><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">isInitialized</span>()) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">init</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">return</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">processEngines</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">get</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">processEngineName</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div><p data-lake-id=\"a0b61a6808970da491204f2cb3aeb1b9\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><ul data-lake-id=\"5dcc7be669d894704bb718241f6361c5\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"832d9336244efe7df666d55753bce6ab\">如果没有初始化，走初始化的逻辑</li><li data-lake-id=\"674d23fd355a9bc8c4b03d6113f7ba96\">返回processEngines map中的配配置，processEngineName就是上面传过来的default</li></ul><p data-lake-id=\"9fcfb77689efe23a2c7b066f6353506e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"24a4d1b38b3781b89c689e21279ea23b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">然后再来看init方法</p><p data-lake-id=\"2c8e92de317d5418294c07aa3dc706d3\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"43e7f637\" data-language=\"java\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">`</span><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">`</span><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">`java</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"> <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">public</span> <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">synchronized</span> <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">static</span> <span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">void</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">init</span>() {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// ...</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"> }</span></span></pre></div></div></div><p data-lake-id=\"5fc23d011b0bd3adc9124edb50f68eef\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"5c266a6b4c64b2b417c58476c1577608\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">这个方法是个同步方法。</p><p data-lake-id=\"f02ddf1b567cf0b6b3823ad82da9bc57\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"aeab0e54\" data-language=\"java\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">if</span> (<span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">!</span><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">isInitialized</span>()) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// ...</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div><p data-lake-id=\"541f99992c20898441b8db22abf86d2b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"00f59886307c3375b92069fb68c94fd5\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">这里又判断了一次是否初始化，可能有的人觉得这步判断有些多余，因为进入这个方法之前已经判断过了，但是在并发场景下并不多余，两个请求都没有初始化过流程引擎，同时走到init方法，然后其中一个先执行，另一个等待。一个执行完毕之后，另一个进来，发现已经初始化完成了，就不需要再执行了。</p><p data-lake-id=\"1429e299dcfd2344fe0b078cd90c2a01\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">然后，获取activiti的配置文件activiti.cfg，进行初始化,代码如下。</p><p data-lake-id=\"16e34e8b7457a13fc68283f7fabe223a\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"74ef2de3\" data-language=\"java\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ClassLoader</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">classLoader</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ReflectUtil</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getClassLoader</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Enumeration</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">URL</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">resources</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">null</span>;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">try</span> {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">resources</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">classLoader</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getResources</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"activiti.cfg.xml\"</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">} <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">catch</span> (<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">IOException</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">e</span>) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">throw</span> <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">new</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ActivitiIllegalArgumentException</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"problem retrieving activiti.cfg.xml resources on the classpath: \"</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">+</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">System</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getProperty</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"java.class.path\"</span>), <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">e</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// Remove duplicated configuration URL's using set. Some</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// classloaders may return identical URL's twice, causing duplicate</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// startups</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Set</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">URL</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">configUrls</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">new</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">HashSet</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">URL</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">while</span> (<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">resources</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">hasMoreElements</span>()) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">configUrls</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">add</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">resources</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">nextElement</span>());\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">for</span> (<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Iterator</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">URL</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">iterator</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">configUrls</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">iterator</span>(); <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">iterator</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">hasNext</span>();) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">URL</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">resource</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">iterator</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">next</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">log</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">info</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"Initializing process engine using configuration '{}'\"</span>, <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">resource</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">toString</span>());\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">initProcessEngineFromResource</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">resource</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div><p data-lake-id=\"cf79345d27549b851578b30225fdfdb6\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"81397fd887d7bf7e917a8d12dbdd7d3f\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">首先去获取了一个ClassLoader，这个ClassLoader可以使用默认自带的，也可以使用自定制的。都没问题。然后获取一下配置文件的的位置。对这些位置去重。然后遍历这些url，进行初始化资源。</p><p data-lake-id=\"0385ebdcf7b3ecb3390e3da1f5e6d714\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"6dfda2de\" data-language=\"java\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ProcessEngineInfo</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">processEngineInfo</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">processEngineInfosByResourceUrl</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">get</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">resourceUrl</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">toString</span>());\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// if there is an existing process engine info</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">if</span> (<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">processEngineInfo</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">!=</span> <span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">null</span>) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// remove that process engine from the member fields</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">processEngineInfos</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">remove</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">processEngineInfo</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">if</span> (<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">processEngineInfo</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getException</span>() <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">==</span> <span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">null</span>) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">String</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">processEngineName</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">processEngineInfo</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getName</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">processEngines</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">remove</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">processEngineName</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">processEngineInfosByName</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">remove</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">processEngineName</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">processEngineInfosByResourceUrl</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">remove</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">processEngineInfo</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getResourceUrl</span>());\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div><p data-lake-id=\"670d60acb688480b6eeabf67d0b12062\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"5eb19ff32a36a16655aae498836095d2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">这里上来也做了个一个类似去重的操作，因为初始化的过程中可能会失败，会走如 retry方法，这里保证每一个url对应的配置信息只有最后加载的那一个。</p><p data-lake-id=\"0b9af61ad0d71ad2bec30afbf3fbdfac\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">再来看一下构建流程引擎的方法</p><p data-lake-id=\"4fc06696c48d188d0d7e31e4e7db3891\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"d49a1eec\" data-language=\"java\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">private</span> <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">static</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ProcessEngine</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">buildProcessEngine</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">URL</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">resource</span>) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">InputStream</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">inputStream</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">null</span>;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">try</span> {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">inputStream</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">resource</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">openStream</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ProcessEngineConfiguration</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">processEngineConfiguration</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ProcessEngineConfiguration</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">createProcessEngineConfigurationFromInputStream</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">inputStream</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">return</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">processEngineConfiguration</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">buildProcessEngine</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    } <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">catch</span> (<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">IOException</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">e</span>) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">throw</span> <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">new</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ActivitiIllegalArgumentException</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"couldn't open resource stream: \"</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">+</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">e</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getMessage</span>(), <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">e</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    } <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">finally</span> {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">IoUtil</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">closeSilently</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">inputStream</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div><p data-lake-id=\"9e959923ff2c1d097bf3fee47a091432\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"e7c418527931c0d1d6501243af1fe898\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">使用url构建 输入流。然后传入createProcessEngineConfigurationFromInputStream方法。再来看一下这个方法,然后依次往下找。</p><p data-lake-id=\"3d6c4a30806441195fcaf19c170ca134\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"9a6d738a\" data-language=\"java\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">public</span> <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">static</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ProcessEngineConfiguration</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">parseProcessEngineConfiguration</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Resource</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">springResource</span>, <span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">String</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">beanName</span>) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">DefaultListableBeanFactory</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">beanFactory</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">new</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">DefaultListableBeanFactory</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">XmlBeanDefinitionReader</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">xmlBeanDefinitionReader</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">new</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">XmlBeanDefinitionReader</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">beanFactory</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">xmlBeanDefinitionReader</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">setValidationMode</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">XmlBeanDefinitionReader</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">VALIDATION_XSD</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">xmlBeanDefinitionReader</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">loadBeanDefinitions</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">springResource</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ProcessEngineConfigurationImpl</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">processEngineConfiguration</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> (<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ProcessEngineConfigurationImpl</span>) <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">beanFactory</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getBean</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">beanName</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">processEngineConfiguration</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">setBeans</span>(<span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">new</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">SpringBeanFactoryProxyMap</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">beanFactory</span>));\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">return</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">processEngineConfiguration</span>;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div><p data-lake-id=\"dd44797d446e0a4ce203d9d4d6a2ac5a\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"b9a68ab4a98566e5988da3fe0bd7c452\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">这里的beanname 是 processEngineConfiguration，这里省略了中间步骤。</p><p data-lake-id=\"2e111ada5b18991f623d365a0c1df313\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">这里是使用了spring的方法，把xml的配置转换成bean。</p><p data-lake-id=\"a1bf845de0839e26e53c440dec98d829\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">然后回到buildProcessEngine</p><p data-lake-id=\"cf313809d184076dec8e9152265f1653\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"8c41abe7\" data-language=\"java\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">public</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ProcessEngine</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">buildProcessEngine</span>() {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">init</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ProcessEngineImpl</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">processEngine</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">new</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ProcessEngineImpl</span>(<span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">this</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">postProcessEngineInitialisation</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">return</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">processEngine</span>;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div><p data-lake-id=\"d7fbe8e8b26303d60c2d5cbe72ca3454\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"3f682c5e13e1f30056c3fd1a851c8caa\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">这里也很好懂。</p><p data-lake-id=\"be5039db409aa5dd36a8de0b74a036fe\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">调用init方法，这个init方法就是上一篇中的那个init。在这里初始化了activiti的资源，包括上篇提到的命令执行器，和职责链，各种service</p><p data-lake-id=\"629e4ab047164a72d9cb8b0b45537f97\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"0fab267a\" data-language=\"java\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">initConfigurators</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">configuratorsBeforeInit</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">initHistoryLevel</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">initExpressionManager</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">if</span> (<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">usingRelationalDatabase</span>) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">initDataSource</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">initAgendaFactory</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">initHelpers</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">initVariableTypes</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">initBeans</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">initScriptingEngines</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">initClock</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">initBusinessCalendarManager</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">initCommandContextFactory</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">initTransactionContextFactory</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">initCommandExecutors</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">initServices</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">initIdGenerator</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">initBehaviorFactory</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">initListenerFactory</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">initBpmnParser</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">initProcessDefinitionCache</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">initProcessDefinitionInfoCache</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">initKnowledgeBaseCache</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">initJobHandlers</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">initJobManager</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">initAsyncExecutor</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">initTransactionFactory</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">if</span> (<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">usingRelationalDatabase</span>) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">initSqlSessionFactory</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">initSessionFactories</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">initDataManagers</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">initEntityManagers</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">initHistoryManager</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">initJpa</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">initDeployers</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">initDelegateInterceptor</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">initEventHandlers</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">initFailedJobCommandFactory</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">initEventDispatcher</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">initProcessValidator</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">initDatabaseEventLogging</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">configuratorsAfterInit</span>();</span></span></pre></div></div></div><p data-lake-id=\"7130efe03311b3b443af1f73081c35c3\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"ce75130491054dc53fbe95b22bffd2d4\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">里面一些比较重要的，后面会进行讨论，这里就不进行展开了。</p><p data-lake-id=\"e478c03fcb58b6030e2d874b1f20ce62\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">回到之前方法</p><p data-lake-id=\"eca85b2352697b174022d44fa7b2bf3a\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"3ddee078\" data-language=\"java\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">try</span> {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">resources</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">classLoader</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getResources</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"activiti-context.xml\"</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">} <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">catch</span> (<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">IOException</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">e</span>) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">throw</span> <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">new</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ActivitiIllegalArgumentException</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"problem retrieving activiti-context.xml resources on the classpath: \"</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">+</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">System</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getProperty</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"java.class.path\"</span>), <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">e</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">while</span> (<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">resources</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">hasMoreElements</span>()) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">URL</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">resource</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">resources</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">nextElement</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">log</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">info</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"Initializing process engine using Spring configuration '{}'\"</span>, <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">resource</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">toString</span>());\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">initProcessEngineFromSpringResource</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">resource</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div><p data-lake-id=\"1a583390c2934f8cdb0107b7396f8575\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"bc9e5510bf0bfe62486cbc14afb8988c\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">activiti也支持Spring风格的初始化。这里获取了activiti-context.xml，然后调用initProcessEngineFromSpringResource初始化资源。</p><p data-lake-id=\"9ea7508ba246c0c801e12fa4dc89fae6\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">来看一下initProcessEngineFromSpringResource</p><p data-lake-id=\"a605208e757318c92f805b1c686e5827\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"67c1fd5d\" data-language=\"java\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">try</span> {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Class</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;?&gt;</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">springConfigurationHelperClass</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ReflectUtil</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">loadClass</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"org.activiti.spring.SpringConfigurationHelper\"</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Method</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">method</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">springConfigurationHelperClass</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getDeclaredMethod</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"buildProcessEngine\"</span>, <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">new</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Class</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;?&gt;</span>[] { <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">URL</span>.<span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">class</span> });\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ProcessEngine</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">processEngine</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> (<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ProcessEngine</span>) <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">method</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">invoke</span>(<span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">null</span>, <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">new</span> <span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Object</span>[] { <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">resource</span> });\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">String</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">processEngineName</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">processEngine</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getName</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ProcessEngineInfo</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">processEngineInfo</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">new</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ProcessEngineInfoImpl</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">processEngineName</span>, <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">resource</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">toString</span>(), <span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">null</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">processEngineInfosByName</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">put</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">processEngineName</span>, <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">processEngineInfo</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">processEngineInfosByResourceUrl</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">put</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">resource</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">toString</span>(), <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">processEngineInfo</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  } <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">catch</span> (<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Exception</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">e</span>) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">throw</span> <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">new</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ActivitiException</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"couldn't initialize process engine from spring configuration resource \"</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">+</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">resource</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">toString</span>() <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">+</span> <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\": \"</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">+</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">e</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getMessage</span>(), <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">e</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  }</span></span></pre></div></div></div><p data-lake-id=\"6dca7a9aea32fe4a1fbd53f5a8a6eb67\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"d92ea9eb2448121279a9108d32a22398\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">通过反射调用SpringConfigurationHelper的buildProcessEngine方法。来看一下这个方法。</p><p data-lake-id=\"f310d549936670d2c5c9d92cf7a3f5c1\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"0f3e0364\" data-language=\"java\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">public</span> <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">static</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ProcessEngine</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">buildProcessEngine</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">URL</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">resource</span>) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">log</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">debug</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"==== BUILDING SPRING APPLICATION CONTEXT AND PROCESS ENGINE =========================================\"</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ApplicationContext</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">applicationContext</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">new</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">GenericXmlApplicationContext</span>(<span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">new</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">UrlResource</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">resource</span>));\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Map</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">String</span>, <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ProcessEngine</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">beansOfType</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">applicationContext</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getBeansOfType</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ProcessEngine</span>.<span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">class</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">if</span> ((<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">beansOfType</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">==</span> <span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">null</span>) <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">||</span> (<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">beansOfType</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">isEmpty</span>())) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">throw</span> <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">new</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ActivitiException</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"no \"</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">+</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ProcessEngine</span>.<span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">class</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getName</span>() <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">+</span> <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\" defined in the application context \"</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">+</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">resource</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">toString</span>());\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ProcessEngine</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">processEngine</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">beansOfType</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">values</span>().<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">iterator</span>().<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">next</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">log</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">debug</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"==== SPRING PROCESS ENGINE CREATED ==================================================================\"</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">return</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">processEngine</span>;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  }</span></span></pre></div></div></div><p data-lake-id=\"9b37f7885a92fbc08cb5eb0347332eba\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"dc71a769f9a32b3968e00b3bc66d1507\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">好的。activiti的配置类分析到此就结束了。</p><p data-lake-id=\"432a9fb610ef4192d082cc4eeb64f8dc\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">简单总结一下，activiti配置类主要的工作就是做一些配置的初始化工作，支持activiti风格的配置和spring风格的配置。</p></div>",
    "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"adapt\" /><meta name=\"typography\" content=\"classic\" /><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\">activiti的配置类是<code>org.activiti.engine.ProcessEngines</code>,本文主要讨论他的默认实现<code>getDefaultProcessEngine</code></p><p data-lake-id=\"e585058cf5fba8ac376692c101913612\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%2223c2653a%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22public%20static%20ProcessEngine%20getProcessEngine(String%20processEngineName)%20%7B%5Cn%20%20if%20(!isInitialized())%20%7B%5Cn%20%20%20%20init()%3B%5Cn%20%20%7D%5Cn%20%20return%20processEngines.get(processEngineName)%3B%5Cn%7D%22%7D\"></card><p data-lake-id=\"c0172c029920bbf2882f9d21aa4cbde0\"><br /></p><p data-lake-id=\"e37e52ad2def8a7f67ccd59a7835f0cc\">首先，他会传进去一个default的字符串。</p><p data-lake-id=\"1f51a27559fd1300306c0b0b08f42d16\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%2223c2653a-1%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22public%20static%20ProcessEngine%20getProcessEngine(String%20processEngineName)%20%7B%5Cn%20%20if%20(!isInitialized())%20%7B%5Cn%20%20%20%20init()%3B%5Cn%20%20%7D%5Cn%20%20return%20processEngines.get(processEngineName)%3B%5Cn%7D%22%7D\"></card><p data-lake-id=\"a0b61a6808970da491204f2cb3aeb1b9\"><br /></p><ul data-lake-id=\"5dcc7be669d894704bb718241f6361c5\"><li data-lake-id=\"832d9336244efe7df666d55753bce6ab\">如果没有初始化，走初始化的逻辑</li><li data-lake-id=\"674d23fd355a9bc8c4b03d6113f7ba96\">返回processEngines map中的配配置，processEngineName就是上面传过来的default</li></ul><p data-lake-id=\"9fcfb77689efe23a2c7b066f6353506e\"><br /></p><p data-lake-id=\"24a4d1b38b3781b89c689e21279ea23b\">然后再来看init方法</p><p data-lake-id=\"2c8e92de317d5418294c07aa3dc706d3\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%2243e7f637%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22%60%60%60java%5Cn%20public%20synchronized%20static%20void%20init()%20%7B%5Cn%20%20%20%20%2F%2F%20...%5Cn%20%7D%22%7D\"></card><p data-lake-id=\"5fc23d011b0bd3adc9124edb50f68eef\"><br /></p><p data-lake-id=\"5c266a6b4c64b2b417c58476c1577608\">这个方法是个同步方法。</p><p data-lake-id=\"f02ddf1b567cf0b6b3823ad82da9bc57\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22aeab0e54%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22if%20(!isInitialized())%20%7B%5Cn%20%20%2F%2F%20...%5Cn%7D%22%7D\"></card><p data-lake-id=\"541f99992c20898441b8db22abf86d2b\"><br /></p><p data-lake-id=\"00f59886307c3375b92069fb68c94fd5\">这里又判断了一次是否初始化，可能有的人觉得这步判断有些多余，因为进入这个方法之前已经判断过了，但是在并发场景下并不多余，两个请求都没有初始化过流程引擎，同时走到init方法，然后其中一个先执行，另一个等待。一个执行完毕之后，另一个进来，发现已经初始化完成了，就不需要再执行了。</p><p data-lake-id=\"1429e299dcfd2344fe0b078cd90c2a01\">然后，获取activiti的配置文件activiti.cfg，进行初始化,代码如下。</p><p data-lake-id=\"16e34e8b7457a13fc68283f7fabe223a\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%2274ef2de3%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22ClassLoader%20classLoader%20%3D%20ReflectUtil.getClassLoader()%3B%5CnEnumeration%3CURL%3E%20resources%20%3D%20null%3B%5Cntry%20%7B%5Cn%20%20resources%20%3D%20classLoader.getResources(%5C%22activiti.cfg.xml%5C%22)%3B%5Cn%7D%20catch%20(IOException%20e)%20%7B%5Cn%20%20throw%20new%20ActivitiIllegalArgumentException(%5C%22problem%20retrieving%20activiti.cfg.xml%20resources%20on%20the%20classpath%3A%20%5C%22%20%2B%20System.getProperty(%5C%22java.class.path%5C%22)%2C%20e)%3B%5Cn%7D%5Cn%5Cn%2F%2F%20Remove%20duplicated%20configuration%20URL's%20using%20set.%20Some%5Cn%2F%2F%20classloaders%20may%20return%20identical%20URL's%20twice%2C%20causing%20duplicate%5Cn%2F%2F%20startups%5CnSet%3CURL%3E%20configUrls%20%3D%20new%20HashSet%3CURL%3E()%3B%5Cnwhile%20(resources.hasMoreElements())%20%7B%5Cn%20%20configUrls.add(resources.nextElement())%3B%5Cn%7D%5Cnfor%20(Iterator%3CURL%3E%20iterator%20%3D%20configUrls.iterator()%3B%20iterator.hasNext()%3B)%20%7B%5Cn%20%20URL%20resource%20%3D%20iterator.next()%3B%5Cn%20%20log.info(%5C%22Initializing%20process%20engine%20using%20configuration%20'%7B%7D'%5C%22%2C%20resource.toString())%3B%5Cn%20%20initProcessEngineFromResource(resource)%3B%5Cn%7D%22%7D\"></card><p data-lake-id=\"cf79345d27549b851578b30225fdfdb6\"><br /></p><p data-lake-id=\"81397fd887d7bf7e917a8d12dbdd7d3f\">首先去获取了一个ClassLoader，这个ClassLoader可以使用默认自带的，也可以使用自定制的。都没问题。然后获取一下配置文件的的位置。对这些位置去重。然后遍历这些url，进行初始化资源。</p><p data-lake-id=\"0385ebdcf7b3ecb3390e3da1f5e6d714\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%226dfda2de%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22ProcessEngineInfo%20processEngineInfo%20%3D%20processEngineInfosByResourceUrl.get(resourceUrl.toString())%3B%5Cn%2F%2F%20if%20there%20is%20an%20existing%20process%20engine%20info%5Cnif%20(processEngineInfo%20!%3D%20null)%20%7B%5Cn%20%20%2F%2F%20remove%20that%20process%20engine%20from%20the%20member%20fields%5Cn%20%20processEngineInfos.remove(processEngineInfo)%3B%5Cn%20%20if%20(processEngineInfo.getException()%20%3D%3D%20null)%20%7B%5Cn%20%20%20%20String%20processEngineName%20%3D%20processEngineInfo.getName()%3B%5Cn%20%20%20%20processEngines.remove(processEngineName)%3B%5Cn%20%20%20%20processEngineInfosByName.remove(processEngineName)%3B%5Cn%20%20%7D%5Cn%20%20processEngineInfosByResourceUrl.remove(processEngineInfo.getResourceUrl())%3B%5Cn%7D%22%7D\"></card><p data-lake-id=\"670d60acb688480b6eeabf67d0b12062\"><br /></p><p data-lake-id=\"5eb19ff32a36a16655aae498836095d2\">这里上来也做了个一个类似去重的操作，因为初始化的过程中可能会失败，会走如 retry方法，这里保证每一个url对应的配置信息只有最后加载的那一个。</p><p data-lake-id=\"0b9af61ad0d71ad2bec30afbf3fbdfac\">再来看一下构建流程引擎的方法</p><p data-lake-id=\"4fc06696c48d188d0d7e31e4e7db3891\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22d49a1eec%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22private%20static%20ProcessEngine%20buildProcessEngine(URL%20resource)%20%7B%5Cn%20%20%20%20InputStream%20inputStream%20%3D%20null%3B%5Cn%20%20%20%20try%20%7B%5Cn%20%20%20%20%20%20inputStream%20%3D%20resource.openStream()%3B%5Cn%20%20%20%20%20%20ProcessEngineConfiguration%20processEngineConfiguration%20%3D%20ProcessEngineConfiguration.createProcessEngineConfigurationFromInputStream(inputStream)%3B%5Cn%20%20%20%20%20%20return%20processEngineConfiguration.buildProcessEngine()%3B%5Cn%5Cn%20%20%20%20%7D%20catch%20(IOException%20e)%20%7B%5Cn%20%20%20%20%20%20throw%20new%20ActivitiIllegalArgumentException(%5C%22couldn't%20open%20resource%20stream%3A%20%5C%22%20%2B%20e.getMessage()%2C%20e)%3B%5Cn%20%20%20%20%7D%20finally%20%7B%5Cn%20%20%20%20%20%20IoUtil.closeSilently(inputStream)%3B%5Cn%20%20%20%20%7D%5Cn%7D%22%7D\"></card><p data-lake-id=\"9e959923ff2c1d097bf3fee47a091432\"><br /></p><p data-lake-id=\"e7c418527931c0d1d6501243af1fe898\">使用url构建 输入流。然后传入createProcessEngineConfigurationFromInputStream方法。再来看一下这个方法,然后依次往下找。</p><p data-lake-id=\"3d6c4a30806441195fcaf19c170ca134\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%229a6d738a%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22public%20static%20ProcessEngineConfiguration%20parseProcessEngineConfiguration(Resource%20springResource%2C%20String%20beanName)%20%7B%5Cn%20%20%20%20DefaultListableBeanFactory%20beanFactory%20%3D%20new%20DefaultListableBeanFactory()%3B%5Cn%20%20%20%20XmlBeanDefinitionReader%20xmlBeanDefinitionReader%20%3D%20new%20XmlBeanDefinitionReader(beanFactory)%3B%5Cn%20%20%20%20xmlBeanDefinitionReader.setValidationMode(XmlBeanDefinitionReader.VALIDATION_XSD)%3B%5Cn%20%20%20%20xmlBeanDefinitionReader.loadBeanDefinitions(springResource)%3B%5Cn%20%20%20%20ProcessEngineConfigurationImpl%20processEngineConfiguration%20%3D%20(ProcessEngineConfigurationImpl)%20beanFactory.getBean(beanName)%3B%5Cn%20%20%20%20processEngineConfiguration.setBeans(new%20SpringBeanFactoryProxyMap(beanFactory))%3B%5Cn%20%20%20%20return%20processEngineConfiguration%3B%5Cn%7D%22%7D\"></card><p data-lake-id=\"dd44797d446e0a4ce203d9d4d6a2ac5a\"><br /></p><p data-lake-id=\"b9a68ab4a98566e5988da3fe0bd7c452\">这里的beanname 是 processEngineConfiguration，这里省略了中间步骤。</p><p data-lake-id=\"2e111ada5b18991f623d365a0c1df313\">这里是使用了spring的方法，把xml的配置转换成bean。</p><p data-lake-id=\"a1bf845de0839e26e53c440dec98d829\">然后回到buildProcessEngine</p><p data-lake-id=\"cf313809d184076dec8e9152265f1653\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%228c41abe7%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22public%20ProcessEngine%20buildProcessEngine()%20%7B%5Cn%20%20init()%3B%5Cn%20%20ProcessEngineImpl%20processEngine%20%3D%20new%20ProcessEngineImpl(this)%3B%5Cn%20%20postProcessEngineInitialisation()%3B%5Cn%5Cn%20%20return%20processEngine%3B%5Cn%7D%22%7D\"></card><p data-lake-id=\"d7fbe8e8b26303d60c2d5cbe72ca3454\"><br /></p><p data-lake-id=\"3f682c5e13e1f30056c3fd1a851c8caa\">这里也很好懂。</p><p data-lake-id=\"be5039db409aa5dd36a8de0b74a036fe\">调用init方法，这个init方法就是上一篇中的那个init。在这里初始化了activiti的资源，包括上篇提到的命令执行器，和职责链，各种service</p><p data-lake-id=\"629e4ab047164a72d9cb8b0b45537f97\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%220fab267a%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22initConfigurators()%3B%5CnconfiguratorsBeforeInit()%3B%5CninitHistoryLevel()%3B%5CninitExpressionManager()%3B%5Cn%5Cnif%20(usingRelationalDatabase)%20%7B%5Cn%20%20initDataSource()%3B%5Cn%7D%5Cn%5CninitAgendaFactory()%3B%5CninitHelpers()%3B%5CninitVariableTypes()%3B%5CninitBeans()%3B%5CninitScriptingEngines()%3B%5CninitClock()%3B%5CninitBusinessCalendarManager()%3B%5CninitCommandContextFactory()%3B%5CninitTransactionContextFactory()%3B%5CninitCommandExecutors()%3B%5CninitServices()%3B%5CninitIdGenerator()%3B%5CninitBehaviorFactory()%3B%5CninitListenerFactory()%3B%5CninitBpmnParser()%3B%5CninitProcessDefinitionCache()%3B%5CninitProcessDefinitionInfoCache()%3B%5CninitKnowledgeBaseCache()%3B%5CninitJobHandlers()%3B%5CninitJobManager()%3B%5CninitAsyncExecutor()%3B%5Cn%5CninitTransactionFactory()%3B%5Cn%5Cnif%20(usingRelationalDatabase)%20%7B%5Cn%20%20initSqlSessionFactory()%3B%5Cn%7D%5Cn%5CninitSessionFactories()%3B%5CninitDataManagers()%3B%5CninitEntityManagers()%3B%5CninitHistoryManager()%3B%5CninitJpa()%3B%5CninitDeployers()%3B%5CninitDelegateInterceptor()%3B%5CninitEventHandlers()%3B%5CninitFailedJobCommandFactory()%3B%5CninitEventDispatcher()%3B%5CninitProcessValidator()%3B%5CninitDatabaseEventLogging()%3B%5CnconfiguratorsAfterInit()%3B%22%7D\"></card><p data-lake-id=\"7130efe03311b3b443af1f73081c35c3\"><br /></p><p data-lake-id=\"ce75130491054dc53fbe95b22bffd2d4\">里面一些比较重要的，后面会进行讨论，这里就不进行展开了。</p><p data-lake-id=\"e478c03fcb58b6030e2d874b1f20ce62\">回到之前方法</p><p data-lake-id=\"eca85b2352697b174022d44fa7b2bf3a\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%223ddee078%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22try%20%7B%5Cn%20%20resources%20%3D%20classLoader.getResources(%5C%22activiti-context.xml%5C%22)%3B%5Cn%7D%20catch%20(IOException%20e)%20%7B%5Cn%20%20throw%20new%20ActivitiIllegalArgumentException(%5C%22problem%20retrieving%20activiti-context.xml%20resources%20on%20the%20classpath%3A%20%5C%22%20%2B%20System.getProperty(%5C%22java.class.path%5C%22)%2C%20e)%3B%5Cn%7D%5Cnwhile%20(resources.hasMoreElements())%20%7B%5Cn%20%20URL%20resource%20%3D%20resources.nextElement()%3B%5Cn%20%20log.info(%5C%22Initializing%20process%20engine%20using%20Spring%20configuration%20'%7B%7D'%5C%22%2C%20resource.toString())%3B%5Cn%20%20initProcessEngineFromSpringResource(resource)%3B%5Cn%7D%22%7D\"></card><p data-lake-id=\"1a583390c2934f8cdb0107b7396f8575\"><br /></p><p data-lake-id=\"bc9e5510bf0bfe62486cbc14afb8988c\">activiti也支持Spring风格的初始化。这里获取了activiti-context.xml，然后调用initProcessEngineFromSpringResource初始化资源。</p><p data-lake-id=\"9ea7508ba246c0c801e12fa4dc89fae6\">来看一下initProcessEngineFromSpringResource</p><p data-lake-id=\"a605208e757318c92f805b1c686e5827\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%2267c1fd5d%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22try%20%7B%5Cn%20%20%20%20Class%3C%3F%3E%20springConfigurationHelperClass%20%3D%20ReflectUtil.loadClass(%5C%22org.activiti.spring.SpringConfigurationHelper%5C%22)%3B%5Cn%20%20%20%20Method%20method%20%3D%20springConfigurationHelperClass.getDeclaredMethod(%5C%22buildProcessEngine%5C%22%2C%20new%20Class%3C%3F%3E%5B%5D%20%7B%20URL.class%20%7D)%3B%5Cn%20%20%20%20ProcessEngine%20processEngine%20%3D%20(ProcessEngine)%20method.invoke(null%2C%20new%20Object%5B%5D%20%7B%20resource%20%7D)%3B%5Cn%5Cn%20%20%20%20String%20processEngineName%20%3D%20processEngine.getName()%3B%5Cn%20%20%20%20ProcessEngineInfo%20processEngineInfo%20%3D%20new%20ProcessEngineInfoImpl(processEngineName%2C%20resource.toString()%2C%20null)%3B%5Cn%20%20%20%20processEngineInfosByName.put(processEngineName%2C%20processEngineInfo)%3B%5Cn%20%20%20%20processEngineInfosByResourceUrl.put(resource.toString()%2C%20processEngineInfo)%3B%5Cn%5Cn%20%20%7D%20catch%20(Exception%20e)%20%7B%5Cn%20%20%20%20throw%20new%20ActivitiException(%5C%22couldn't%20initialize%20process%20engine%20from%20spring%20configuration%20resource%20%5C%22%20%2B%20resource.toString()%20%2B%20%5C%22%3A%20%5C%22%20%2B%20e.getMessage()%2C%20e)%3B%5Cn%20%20%7D%22%7D\"></card><p data-lake-id=\"6dca7a9aea32fe4a1fbd53f5a8a6eb67\"><br /></p><p data-lake-id=\"d92ea9eb2448121279a9108d32a22398\">通过反射调用SpringConfigurationHelper的buildProcessEngine方法。来看一下这个方法。</p><p data-lake-id=\"f310d549936670d2c5c9d92cf7a3f5c1\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%220f3e0364%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22public%20static%20ProcessEngine%20buildProcessEngine(URL%20resource)%20%7B%5Cn%20%20log.debug(%5C%22%3D%3D%3D%3D%20BUILDING%20SPRING%20APPLICATION%20CONTEXT%20AND%20PROCESS%20ENGINE%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%5C%22)%3B%5Cn%5Cn%20%20ApplicationContext%20applicationContext%20%3D%20new%20GenericXmlApplicationContext(new%20UrlResource(resource))%3B%5Cn%20%20Map%3CString%2C%20ProcessEngine%3E%20beansOfType%20%3D%20applicationContext.getBeansOfType(ProcessEngine.class)%3B%5Cn%20%20if%20((beansOfType%20%3D%3D%20null)%20%7C%7C%20(beansOfType.isEmpty()))%20%7B%5Cn%20%20%20%20throw%20new%20ActivitiException(%5C%22no%20%5C%22%20%2B%20ProcessEngine.class.getName()%20%2B%20%5C%22%20defined%20in%20the%20application%20context%20%5C%22%20%2B%20resource.toString())%3B%5Cn%20%20%7D%5Cn%5Cn%20%20ProcessEngine%20processEngine%20%3D%20beansOfType.values().iterator().next()%3B%5Cn%5Cn%20%20log.debug(%5C%22%3D%3D%3D%3D%20SPRING%20PROCESS%20ENGINE%20CREATED%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%5C%22)%3B%5Cn%20%20return%20processEngine%3B%5Cn%20%20%7D%22%7D\"></card><p data-lake-id=\"9b37f7885a92fbc08cb5eb0347332eba\"><br /></p><p data-lake-id=\"dc71a769f9a32b3968e00b3bc66d1507\">好的。activiti的配置类分析到此就结束了。</p><p data-lake-id=\"432a9fb610ef4192d082cc4eeb64f8dc\">简单总结一下，activiti配置类主要的工作就是做一些配置的初始化工作，支持activiti风格的配置和spring风格的配置。</p>",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"adapt\" /><meta name=\"typography\" content=\"classic\" /><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\">activiti的配置类是<code>org.activiti.engine.ProcessEngines</code>,本文主要讨论他的默认实现<code>getDefaultProcessEngine</code></p><p data-lake-id=\"e585058cf5fba8ac376692c101913612\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%2223c2653a%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22public%20static%20ProcessEngine%20getProcessEngine(String%20processEngineName)%20%7B%5Cn%20%20if%20(!isInitialized())%20%7B%5Cn%20%20%20%20init()%3B%5Cn%20%20%7D%5Cn%20%20return%20processEngines.get(processEngineName)%3B%5Cn%7D%22%7D\"></card><p data-lake-id=\"c0172c029920bbf2882f9d21aa4cbde0\"><br /></p><p data-lake-id=\"e37e52ad2def8a7f67ccd59a7835f0cc\">首先，他会传进去一个default的字符串。</p><p data-lake-id=\"1f51a27559fd1300306c0b0b08f42d16\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%2223c2653a-1%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22public%20static%20ProcessEngine%20getProcessEngine(String%20processEngineName)%20%7B%5Cn%20%20if%20(!isInitialized())%20%7B%5Cn%20%20%20%20init()%3B%5Cn%20%20%7D%5Cn%20%20return%20processEngines.get(processEngineName)%3B%5Cn%7D%22%7D\"></card><p data-lake-id=\"a0b61a6808970da491204f2cb3aeb1b9\"><br /></p><ul data-lake-id=\"5dcc7be669d894704bb718241f6361c5\"><li data-lake-id=\"832d9336244efe7df666d55753bce6ab\">如果没有初始化，走初始化的逻辑</li><li data-lake-id=\"674d23fd355a9bc8c4b03d6113f7ba96\">返回processEngines map中的配配置，processEngineName就是上面传过来的default</li></ul><p data-lake-id=\"9fcfb77689efe23a2c7b066f6353506e\"><br /></p><p data-lake-id=\"24a4d1b38b3781b89c689e21279ea23b\">然后再来看init方法</p><p data-lake-id=\"2c8e92de317d5418294c07aa3dc706d3\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%2243e7f637%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22%60%60%60java%5Cn%20public%20synchronized%20static%20void%20init()%20%7B%5Cn%20%20%20%20%2F%2F%20...%5Cn%20%7D%22%7D\"></card><p data-lake-id=\"5fc23d011b0bd3adc9124edb50f68eef\"><br /></p><p data-lake-id=\"5c266a6b4c64b2b417c58476c1577608\">这个方法是个同步方法。</p><p data-lake-id=\"f02ddf1b567cf0b6b3823ad82da9bc57\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22aeab0e54%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22if%20(!isInitialized())%20%7B%5Cn%20%20%2F%2F%20...%5Cn%7D%22%7D\"></card><p data-lake-id=\"541f99992c20898441b8db22abf86d2b\"><br /></p><p data-lake-id=\"00f59886307c3375b92069fb68c94fd5\">这里又判断了一次是否初始化，可能有的人觉得这步判断有些多余，因为进入这个方法之前已经判断过了，但是在并发场景下并不多余，两个请求都没有初始化过流程引擎，同时走到init方法，然后其中一个先执行，另一个等待。一个执行完毕之后，另一个进来，发现已经初始化完成了，就不需要再执行了。</p><p data-lake-id=\"1429e299dcfd2344fe0b078cd90c2a01\">然后，获取activiti的配置文件activiti.cfg，进行初始化,代码如下。</p><p data-lake-id=\"16e34e8b7457a13fc68283f7fabe223a\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%2274ef2de3%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22ClassLoader%20classLoader%20%3D%20ReflectUtil.getClassLoader()%3B%5CnEnumeration%3CURL%3E%20resources%20%3D%20null%3B%5Cntry%20%7B%5Cn%20%20resources%20%3D%20classLoader.getResources(%5C%22activiti.cfg.xml%5C%22)%3B%5Cn%7D%20catch%20(IOException%20e)%20%7B%5Cn%20%20throw%20new%20ActivitiIllegalArgumentException(%5C%22problem%20retrieving%20activiti.cfg.xml%20resources%20on%20the%20classpath%3A%20%5C%22%20%2B%20System.getProperty(%5C%22java.class.path%5C%22)%2C%20e)%3B%5Cn%7D%5Cn%5Cn%2F%2F%20Remove%20duplicated%20configuration%20URL's%20using%20set.%20Some%5Cn%2F%2F%20classloaders%20may%20return%20identical%20URL's%20twice%2C%20causing%20duplicate%5Cn%2F%2F%20startups%5CnSet%3CURL%3E%20configUrls%20%3D%20new%20HashSet%3CURL%3E()%3B%5Cnwhile%20(resources.hasMoreElements())%20%7B%5Cn%20%20configUrls.add(resources.nextElement())%3B%5Cn%7D%5Cnfor%20(Iterator%3CURL%3E%20iterator%20%3D%20configUrls.iterator()%3B%20iterator.hasNext()%3B)%20%7B%5Cn%20%20URL%20resource%20%3D%20iterator.next()%3B%5Cn%20%20log.info(%5C%22Initializing%20process%20engine%20using%20configuration%20'%7B%7D'%5C%22%2C%20resource.toString())%3B%5Cn%20%20initProcessEngineFromResource(resource)%3B%5Cn%7D%22%7D\"></card><p data-lake-id=\"cf79345d27549b851578b30225fdfdb6\"><br /></p><p data-lake-id=\"81397fd887d7bf7e917a8d12dbdd7d3f\">首先去获取了一个ClassLoader，这个ClassLoader可以使用默认自带的，也可以使用自定制的。都没问题。然后获取一下配置文件的的位置。对这些位置去重。然后遍历这些url，进行初始化资源。</p><p data-lake-id=\"0385ebdcf7b3ecb3390e3da1f5e6d714\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%226dfda2de%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22ProcessEngineInfo%20processEngineInfo%20%3D%20processEngineInfosByResourceUrl.get(resourceUrl.toString())%3B%5Cn%2F%2F%20if%20there%20is%20an%20existing%20process%20engine%20info%5Cnif%20(processEngineInfo%20!%3D%20null)%20%7B%5Cn%20%20%2F%2F%20remove%20that%20process%20engine%20from%20the%20member%20fields%5Cn%20%20processEngineInfos.remove(processEngineInfo)%3B%5Cn%20%20if%20(processEngineInfo.getException()%20%3D%3D%20null)%20%7B%5Cn%20%20%20%20String%20processEngineName%20%3D%20processEngineInfo.getName()%3B%5Cn%20%20%20%20processEngines.remove(processEngineName)%3B%5Cn%20%20%20%20processEngineInfosByName.remove(processEngineName)%3B%5Cn%20%20%7D%5Cn%20%20processEngineInfosByResourceUrl.remove(processEngineInfo.getResourceUrl())%3B%5Cn%7D%22%7D\"></card><p data-lake-id=\"670d60acb688480b6eeabf67d0b12062\"><br /></p><p data-lake-id=\"5eb19ff32a36a16655aae498836095d2\">这里上来也做了个一个类似去重的操作，因为初始化的过程中可能会失败，会走如 retry方法，这里保证每一个url对应的配置信息只有最后加载的那一个。</p><p data-lake-id=\"0b9af61ad0d71ad2bec30afbf3fbdfac\">再来看一下构建流程引擎的方法</p><p data-lake-id=\"4fc06696c48d188d0d7e31e4e7db3891\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22d49a1eec%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22private%20static%20ProcessEngine%20buildProcessEngine(URL%20resource)%20%7B%5Cn%20%20%20%20InputStream%20inputStream%20%3D%20null%3B%5Cn%20%20%20%20try%20%7B%5Cn%20%20%20%20%20%20inputStream%20%3D%20resource.openStream()%3B%5Cn%20%20%20%20%20%20ProcessEngineConfiguration%20processEngineConfiguration%20%3D%20ProcessEngineConfiguration.createProcessEngineConfigurationFromInputStream(inputStream)%3B%5Cn%20%20%20%20%20%20return%20processEngineConfiguration.buildProcessEngine()%3B%5Cn%5Cn%20%20%20%20%7D%20catch%20(IOException%20e)%20%7B%5Cn%20%20%20%20%20%20throw%20new%20ActivitiIllegalArgumentException(%5C%22couldn't%20open%20resource%20stream%3A%20%5C%22%20%2B%20e.getMessage()%2C%20e)%3B%5Cn%20%20%20%20%7D%20finally%20%7B%5Cn%20%20%20%20%20%20IoUtil.closeSilently(inputStream)%3B%5Cn%20%20%20%20%7D%5Cn%7D%22%7D\"></card><p data-lake-id=\"9e959923ff2c1d097bf3fee47a091432\"><br /></p><p data-lake-id=\"e7c418527931c0d1d6501243af1fe898\">使用url构建 输入流。然后传入createProcessEngineConfigurationFromInputStream方法。再来看一下这个方法,然后依次往下找。</p><p data-lake-id=\"3d6c4a30806441195fcaf19c170ca134\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%229a6d738a%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22public%20static%20ProcessEngineConfiguration%20parseProcessEngineConfiguration(Resource%20springResource%2C%20String%20beanName)%20%7B%5Cn%20%20%20%20DefaultListableBeanFactory%20beanFactory%20%3D%20new%20DefaultListableBeanFactory()%3B%5Cn%20%20%20%20XmlBeanDefinitionReader%20xmlBeanDefinitionReader%20%3D%20new%20XmlBeanDefinitionReader(beanFactory)%3B%5Cn%20%20%20%20xmlBeanDefinitionReader.setValidationMode(XmlBeanDefinitionReader.VALIDATION_XSD)%3B%5Cn%20%20%20%20xmlBeanDefinitionReader.loadBeanDefinitions(springResource)%3B%5Cn%20%20%20%20ProcessEngineConfigurationImpl%20processEngineConfiguration%20%3D%20(ProcessEngineConfigurationImpl)%20beanFactory.getBean(beanName)%3B%5Cn%20%20%20%20processEngineConfiguration.setBeans(new%20SpringBeanFactoryProxyMap(beanFactory))%3B%5Cn%20%20%20%20return%20processEngineConfiguration%3B%5Cn%7D%22%7D\"></card><p data-lake-id=\"dd44797d446e0a4ce203d9d4d6a2ac5a\"><br /></p><p data-lake-id=\"b9a68ab4a98566e5988da3fe0bd7c452\">这里的beanname 是 processEngineConfiguration，这里省略了中间步骤。</p><p data-lake-id=\"2e111ada5b18991f623d365a0c1df313\">这里是使用了spring的方法，把xml的配置转换成bean。</p><p data-lake-id=\"a1bf845de0839e26e53c440dec98d829\">然后回到buildProcessEngine</p><p data-lake-id=\"cf313809d184076dec8e9152265f1653\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%228c41abe7%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22public%20ProcessEngine%20buildProcessEngine()%20%7B%5Cn%20%20init()%3B%5Cn%20%20ProcessEngineImpl%20processEngine%20%3D%20new%20ProcessEngineImpl(this)%3B%5Cn%20%20postProcessEngineInitialisation()%3B%5Cn%5Cn%20%20return%20processEngine%3B%5Cn%7D%22%7D\"></card><p data-lake-id=\"d7fbe8e8b26303d60c2d5cbe72ca3454\"><br /></p><p data-lake-id=\"3f682c5e13e1f30056c3fd1a851c8caa\">这里也很好懂。</p><p data-lake-id=\"be5039db409aa5dd36a8de0b74a036fe\">调用init方法，这个init方法就是上一篇中的那个init。在这里初始化了activiti的资源，包括上篇提到的命令执行器，和职责链，各种service</p><p data-lake-id=\"629e4ab047164a72d9cb8b0b45537f97\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%220fab267a%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22initConfigurators()%3B%5CnconfiguratorsBeforeInit()%3B%5CninitHistoryLevel()%3B%5CninitExpressionManager()%3B%5Cn%5Cnif%20(usingRelationalDatabase)%20%7B%5Cn%20%20initDataSource()%3B%5Cn%7D%5Cn%5CninitAgendaFactory()%3B%5CninitHelpers()%3B%5CninitVariableTypes()%3B%5CninitBeans()%3B%5CninitScriptingEngines()%3B%5CninitClock()%3B%5CninitBusinessCalendarManager()%3B%5CninitCommandContextFactory()%3B%5CninitTransactionContextFactory()%3B%5CninitCommandExecutors()%3B%5CninitServices()%3B%5CninitIdGenerator()%3B%5CninitBehaviorFactory()%3B%5CninitListenerFactory()%3B%5CninitBpmnParser()%3B%5CninitProcessDefinitionCache()%3B%5CninitProcessDefinitionInfoCache()%3B%5CninitKnowledgeBaseCache()%3B%5CninitJobHandlers()%3B%5CninitJobManager()%3B%5CninitAsyncExecutor()%3B%5Cn%5CninitTransactionFactory()%3B%5Cn%5Cnif%20(usingRelationalDatabase)%20%7B%5Cn%20%20initSqlSessionFactory()%3B%5Cn%7D%5Cn%5CninitSessionFactories()%3B%5CninitDataManagers()%3B%5CninitEntityManagers()%3B%5CninitHistoryManager()%3B%5CninitJpa()%3B%5CninitDeployers()%3B%5CninitDelegateInterceptor()%3B%5CninitEventHandlers()%3B%5CninitFailedJobCommandFactory()%3B%5CninitEventDispatcher()%3B%5CninitProcessValidator()%3B%5CninitDatabaseEventLogging()%3B%5CnconfiguratorsAfterInit()%3B%22%7D\"></card><p data-lake-id=\"7130efe03311b3b443af1f73081c35c3\"><br /></p><p data-lake-id=\"ce75130491054dc53fbe95b22bffd2d4\">里面一些比较重要的，后面会进行讨论，这里就不进行展开了。</p><p data-lake-id=\"e478c03fcb58b6030e2d874b1f20ce62\">回到之前方法</p><p data-lake-id=\"eca85b2352697b174022d44fa7b2bf3a\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%223ddee078%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22try%20%7B%5Cn%20%20resources%20%3D%20classLoader.getResources(%5C%22activiti-context.xml%5C%22)%3B%5Cn%7D%20catch%20(IOException%20e)%20%7B%5Cn%20%20throw%20new%20ActivitiIllegalArgumentException(%5C%22problem%20retrieving%20activiti-context.xml%20resources%20on%20the%20classpath%3A%20%5C%22%20%2B%20System.getProperty(%5C%22java.class.path%5C%22)%2C%20e)%3B%5Cn%7D%5Cnwhile%20(resources.hasMoreElements())%20%7B%5Cn%20%20URL%20resource%20%3D%20resources.nextElement()%3B%5Cn%20%20log.info(%5C%22Initializing%20process%20engine%20using%20Spring%20configuration%20'%7B%7D'%5C%22%2C%20resource.toString())%3B%5Cn%20%20initProcessEngineFromSpringResource(resource)%3B%5Cn%7D%22%7D\"></card><p data-lake-id=\"1a583390c2934f8cdb0107b7396f8575\"><br /></p><p data-lake-id=\"bc9e5510bf0bfe62486cbc14afb8988c\">activiti也支持Spring风格的初始化。这里获取了activiti-context.xml，然后调用initProcessEngineFromSpringResource初始化资源。</p><p data-lake-id=\"9ea7508ba246c0c801e12fa4dc89fae6\">来看一下initProcessEngineFromSpringResource</p><p data-lake-id=\"a605208e757318c92f805b1c686e5827\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%2267c1fd5d%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22try%20%7B%5Cn%20%20%20%20Class%3C%3F%3E%20springConfigurationHelperClass%20%3D%20ReflectUtil.loadClass(%5C%22org.activiti.spring.SpringConfigurationHelper%5C%22)%3B%5Cn%20%20%20%20Method%20method%20%3D%20springConfigurationHelperClass.getDeclaredMethod(%5C%22buildProcessEngine%5C%22%2C%20new%20Class%3C%3F%3E%5B%5D%20%7B%20URL.class%20%7D)%3B%5Cn%20%20%20%20ProcessEngine%20processEngine%20%3D%20(ProcessEngine)%20method.invoke(null%2C%20new%20Object%5B%5D%20%7B%20resource%20%7D)%3B%5Cn%5Cn%20%20%20%20String%20processEngineName%20%3D%20processEngine.getName()%3B%5Cn%20%20%20%20ProcessEngineInfo%20processEngineInfo%20%3D%20new%20ProcessEngineInfoImpl(processEngineName%2C%20resource.toString()%2C%20null)%3B%5Cn%20%20%20%20processEngineInfosByName.put(processEngineName%2C%20processEngineInfo)%3B%5Cn%20%20%20%20processEngineInfosByResourceUrl.put(resource.toString()%2C%20processEngineInfo)%3B%5Cn%5Cn%20%20%7D%20catch%20(Exception%20e)%20%7B%5Cn%20%20%20%20throw%20new%20ActivitiException(%5C%22couldn't%20initialize%20process%20engine%20from%20spring%20configuration%20resource%20%5C%22%20%2B%20resource.toString()%20%2B%20%5C%22%3A%20%5C%22%20%2B%20e.getMessage()%2C%20e)%3B%5Cn%20%20%7D%22%7D\"></card><p data-lake-id=\"6dca7a9aea32fe4a1fbd53f5a8a6eb67\"><br /></p><p data-lake-id=\"d92ea9eb2448121279a9108d32a22398\">通过反射调用SpringConfigurationHelper的buildProcessEngine方法。来看一下这个方法。</p><p data-lake-id=\"f310d549936670d2c5c9d92cf7a3f5c1\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%220f3e0364%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22public%20static%20ProcessEngine%20buildProcessEngine(URL%20resource)%20%7B%5Cn%20%20log.debug(%5C%22%3D%3D%3D%3D%20BUILDING%20SPRING%20APPLICATION%20CONTEXT%20AND%20PROCESS%20ENGINE%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%5C%22)%3B%5Cn%5Cn%20%20ApplicationContext%20applicationContext%20%3D%20new%20GenericXmlApplicationContext(new%20UrlResource(resource))%3B%5Cn%20%20Map%3CString%2C%20ProcessEngine%3E%20beansOfType%20%3D%20applicationContext.getBeansOfType(ProcessEngine.class)%3B%5Cn%20%20if%20((beansOfType%20%3D%3D%20null)%20%7C%7C%20(beansOfType.isEmpty()))%20%7B%5Cn%20%20%20%20throw%20new%20ActivitiException(%5C%22no%20%5C%22%20%2B%20ProcessEngine.class.getName()%20%2B%20%5C%22%20defined%20in%20the%20application%20context%20%5C%22%20%2B%20resource.toString())%3B%5Cn%20%20%7D%5Cn%5Cn%20%20ProcessEngine%20processEngine%20%3D%20beansOfType.values().iterator().next()%3B%5Cn%5Cn%20%20log.debug(%5C%22%3D%3D%3D%3D%20SPRING%20PROCESS%20ENGINE%20CREATED%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%5C%22)%3B%5Cn%20%20return%20processEngine%3B%5Cn%20%20%7D%22%7D\"></card><p data-lake-id=\"9b37f7885a92fbc08cb5eb0347332eba\"><br /></p><p data-lake-id=\"dc71a769f9a32b3968e00b3bc66d1507\">好的。activiti的配置类分析到此就结束了。</p><p data-lake-id=\"432a9fb610ef4192d082cc4eeb64f8dc\">简单总结一下，activiti配置类主要的工作就是做一些配置的初始化工作，支持activiti风格的配置和spring风格的配置。</p>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2020-09-29T14:06:33.000Z",
    "deleted_at": null,
    "created_at": "2020-09-29T14:05:44.000Z",
    "updated_at": "2020-09-29T14:07:03.000Z",
    "published_at": "2020-09-29T14:07:03.000Z",
    "first_published_at": "2020-09-29T14:06:33.000Z",
    "word_count": 1563,
    "cover": null,
    "description": "activiti的配置类是org.activiti.engine.ProcessEngines,本文主要讨论他的默认实现getDefaultProcessEnginepublic static ProcessEngine getProcessEngine(String processEngin...",
    "custom_description": null,
    "hits": 0,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 13904385,
    "slug": "kekrh7",
    "title": "Activiti7源码分析(二)-Service调用链路",
    "book_id": 1840429,
    "book": {
      "id": 1840429,
      "type": "Book",
      "slug": "lmikoto",
      "name": "笔记",
      "user_id": 328252,
      "description": "",
      "creator_id": 328252,
      "public": 0,
      "items_count": 15,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2020-09-29T14:16:16.754Z",
      "updated_at": "2020-09-29T14:16:16.000Z",
      "created_at": "2020-09-29T12:57:45.000Z",
      "namespace": "lmikoto/lmikoto",
      "user": {
        "id": 328252,
        "type": "User",
        "login": "lmikoto",
        "name": "lmikoto",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/328252/1578028416108-avatar/38f12fe6-da0d-471e-819c-7131fadbd750.png",
        "books_count": 1,
        "public_books_count": 0,
        "followers_count": 0,
        "following_count": 0,
        "created_at": "2019-04-25T04:31:29.000Z",
        "updated_at": "2020-09-29T12:57:45.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 328252,
    "creator": {
      "id": 328252,
      "type": "User",
      "login": "lmikoto",
      "name": "lmikoto",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/328252/1578028416108-avatar/38f12fe6-da0d-471e-819c-7131fadbd750.png",
      "books_count": 1,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2019-04-25T04:31:29.000Z",
      "updated_at": "2020-09-29T12:57:45.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "<a name=\"7f1b21a5\"></a>\n## 概要\n\n<br />Activiti采用命令和指责链作为基础的开发模式。各Service中定义的方法都有相对应的命令对象Cmd。Service把各种请求委托给Cmd。而一个Cmd执行的过程中需要进行一些外围的处理，这些处理过程是一个职责链。<br />\n\n<a name=\"2cb472ff\"></a>\n## 初始化\n\n<br />从流程引擎的配置实现类`ProcessEngineConfigurationImpl`为入口进入。init方法<br />\n\n```java\npublic void init() {\n  // ...\n\n  initCommandExecutors();\n\n  // ...\n}\n```\n\n<br />`initCommandExecutors`中会出事一些配置，比较重要的是最后两个。<br />\n\n```java\npublic void initCommandExecutors() {\n  initDefaultCommandConfig();\n  initSchemaCommandConfig();\n  initCommandInvoker();\n  // 初始化命令拦截器\n  initCommandInterceptors();\n  // 初始化命令执行器\n  initCommandExecutor();\n}\n```\n\n<br />首先来看`initCommandInterceptors`<br />\n\n```java\npublic void initCommandInterceptors() {\n  if (commandInterceptors == null) {\n    commandInterceptors = new ArrayList<CommandInterceptor>();\n    if (customPreCommandInterceptors != null) {\n      commandInterceptors.addAll(customPreCommandInterceptors);\n    }\n    commandInterceptors.addAll(getDefaultCommandInterceptors());\n    if (customPostCommandInterceptors != null) {\n      commandInterceptors.addAll(customPostCommandInterceptors);\n    }\n    commandInterceptors.add(commandInvoker);\n  }\n}\n```\n\n<br />可以看到这个方法主要做了四个事情。<br />\n\n1. 如果定制了前置拦截器则加入。\n1. 添加activiti默认的拦截器。\n1. 如果定制后置拦截器则加入。\n1. 把命令执行期添加在链条的最后一环。\n\n\n<br />来看一下Activiti的默认拦截器<br />\n\n```java\npublic Collection<? extends CommandInterceptor> getDefaultCommandInterceptors() {\n  List<CommandInterceptor> interceptors = new ArrayList<CommandInterceptor>();\n  interceptors.add(new LogInterceptor());\n\n  CommandInterceptor transactionInterceptor = createTransactionInterceptor();\n  if (transactionInterceptor != null) {\n    interceptors.add(transactionInterceptor);\n  }\n\n  if (commandContextFactory != null) {\n    interceptors.add(new CommandContextInterceptor(commandContextFactory, this));\n  }\n\n  if (transactionContextFactory != null) {\n    interceptors.add(new TransactionContextInterceptor(transactionContextFactory));\n  }\n\n  return interceptors;\n}\n```\n\n<br />activiti默认添加三个拦截器及 日志拦截器、commandContext拦截器、事物拦截器。<br />再来看`initCommandExecutor`<br />\n\n```java\npublic void initCommandExecutor() {\n  if (commandExecutor == null) {\n    CommandInterceptor first = initInterceptorChain(commandInterceptors);\n    commandExecutor = new CommandExecutorImpl(getDefaultCommandConfig(), first);\n  }\n}\n```\n\n<br />这个方法把之间的所有链的节点穿起来。形成了一个职责链,首节点为`first`。<br />然后初始化了`commandExecutor`<br />那么这个执行器是如何初始化到service里<br />\n\n```java\npublic void initService(Object service) {\n  if (service instanceof ServiceImpl) {\n    ((ServiceImpl) service).setCommandExecutor(commandExecutor);\n  }\n}\n```\n\n\n<a name=\"03edb3c8\"></a>\n## Service调用\n\n<br />下面就来说一下Service调用。<br />以删除任务的`deleteTask`为例<br />\n\n```java\n@Override\npublic void deleteTask(String taskId, String deleteReason) {\n  commandExecutor.execute(new DeleteTaskCmd(taskId, deleteReason, false));\n}\n```\n\n<br />这里使用命令执行期执行Cmd。<br />看下命令执行器内部的实现，其实就是调用了职责链去执行这个Cmd，代码如下。<br />\n\n```java\n@Override\npublic <T> T execute(Command<T> command) {\n  return execute(defaultConfig, command);\n}\n\n@Override\npublic <T> T execute(CommandConfig config, Command<T> command) {\n  return first.execute(config, command);\n}\n```\n\n<br />上文我们说了，整个拦截器职责链的最后一环是`commandInvoker`,那么来看一下这个的实现<br />\n\n```java\n@Override\n@SuppressWarnings(\"unchecked\")\npublic <T> T execute(final CommandConfig config, final Command<T> command) {\n  final CommandContext commandContext = Context.getCommandContext();\n\n  // Execute the command.\n  // This will produce operations that will be put on the agenda.\n  commandContext.getAgenda().planOperation(new Runnable() {\n    @Override\n    public void run() {\n      commandContext.setResult(command.execute(commandContext));\n    }\n  });\n\n  // Run loop for agenda\n  executeOperations(commandContext);\n\n  // At the end, call the execution tree change listeners.\n  // TODO: optimization: only do this when the tree has actually changed (ie check dbSqlSession).\n  if (commandContext.hasInvolvedExecutions()) {\n    Context.getAgenda().planExecuteInactiveBehaviorsOperation();\n    executeOperations(commandContext);\n  }\n\n  return (T) commandContext.getResult();\n}\n```\n\n<br />也就是说实际上是在commandInvoker中调用Cmd的execute方法来执行的操作。<br />再来看一下Cmd中的execute<br />\n\n```java\npublic Void execute(CommandContext commandContext) {\n  if (taskId != null) {\n    deleteTask(commandContext, taskId);\n  } else if (taskIds != null) {\n    for (String taskId : taskIds) {\n      deleteTask(commandContext, taskId);\n    }\n  } else {\n    throw new ActivitiIllegalArgumentException(\"taskId and taskIds are null\");\n  }\n\n  return null;\n}\n```\n\n<br />看一下deleteTask的实现，然后依次往里面找。<br />\n\n```java\n@Override\npublic void deleteTask(TaskEntity task, String deleteReason, boolean cascade, boolean cancel) {\n  if (!task.isDeleted()) {\n    getProcessEngineConfiguration().getListenerNotificationHelper()\n      .executeTaskListeners(task, TaskListener.EVENTNAME_DELETE);\n    task.setDeleted(true);\n\n    String taskId = task.getId();\n\n    // 删除子任务\n    List<Task> subTasks = findTasksByParentTaskId(taskId);\n    for (Task subTask : subTasks) {\n      deleteTask((TaskEntity) subTask, deleteReason, cascade, cancel);\n    }\n\n    // 删除标示和变量\n    getIdentityLinkEntityManager().deleteIdentityLinksByTaskId(taskId);\n    getVariableInstanceEntityManager().deleteVariableInstanceByTask(task);\n\n    // 按需清理历史表\n    if (cascade) {\n      getHistoricTaskInstanceEntityManager().delete(taskId);\n    } else {\n      getHistoryManager().recordTaskEnd(taskId, deleteReason);\n    }\n\n    delete(task, false);\n\n    // 发送删除事件\n    if (getEventDispatcher().isEnabled()) {\n      if (cancel && !task.isCanceled()) {\n        task.setCanceled(true);\n                getEventDispatcher().dispatchEvent(\n                        ActivitiEventBuilder.createActivityCancelledEvent(task.getExecution() != null ? task.getExecution().getActivityId() : null,\n                                task.getName(),\n                                //temporary fix for standalone tasks\n                                task.getExecutionId() != null ? task.getExecutionId() : task.getId(),\n                                task.getProcessInstanceId(),\n                                task.getProcessDefinitionId(),\n                                \"userTask\",\n                                deleteReason));\n      }\n      getEventDispatcher().dispatchEvent(ActivitiEventBuilder.createEntityEvent(ActivitiEventType.ENTITY_DELETED, task));\n    }\n  }\n}\n```\n\n<br />这个方法里面其实还是做了很多事情的。包括activiti的分表机制，和事件机制。这些机制后面的文章再讨论。<br />再往下找就是mybatis层了。至此从activiti的service层到db层的调用链路分析完毕了。从整体层面上来看，activiti的这种架构方式十分有利于代码的可读性，还是十分有学习的意义。\n",
    "body_draft": "<a name=\"7f1b21a5\"></a>\n## 概要\n\n<br />Activiti采用命令和指责链作为基础的开发模式。各Service中定义的方法都有相对应的命令对象Cmd。Service把各种请求委托给Cmd。而一个Cmd执行的过程中需要进行一些外围的处理，这些处理过程是一个职责链。<br />\n\n<a name=\"2cb472ff\"></a>\n## 初始化\n\n<br />从流程引擎的配置实现类`ProcessEngineConfigurationImpl`为入口进入。init方法<br />\n\n```java\npublic void init() {\n  // ...\n\n  initCommandExecutors();\n\n  // ...\n}\n```\n\n<br />`initCommandExecutors`中会出事一些配置，比较重要的是最后两个。<br />\n\n```java\npublic void initCommandExecutors() {\n  initDefaultCommandConfig();\n  initSchemaCommandConfig();\n  initCommandInvoker();\n  // 初始化命令拦截器\n  initCommandInterceptors();\n  // 初始化命令执行器\n  initCommandExecutor();\n}\n```\n\n<br />首先来看`initCommandInterceptors`<br />\n\n```java\npublic void initCommandInterceptors() {\n  if (commandInterceptors == null) {\n    commandInterceptors = new ArrayList<CommandInterceptor>();\n    if (customPreCommandInterceptors != null) {\n      commandInterceptors.addAll(customPreCommandInterceptors);\n    }\n    commandInterceptors.addAll(getDefaultCommandInterceptors());\n    if (customPostCommandInterceptors != null) {\n      commandInterceptors.addAll(customPostCommandInterceptors);\n    }\n    commandInterceptors.add(commandInvoker);\n  }\n}\n```\n\n<br />可以看到这个方法主要做了四个事情。<br />\n\n1. 如果定制了前置拦截器则加入。\n1. 添加activiti默认的拦截器。\n1. 如果定制后置拦截器则加入。\n1. 把命令执行期添加在链条的最后一环。\n\n\n<br />来看一下Activiti的默认拦截器<br />\n\n```java\npublic Collection<? extends CommandInterceptor> getDefaultCommandInterceptors() {\n  List<CommandInterceptor> interceptors = new ArrayList<CommandInterceptor>();\n  interceptors.add(new LogInterceptor());\n\n  CommandInterceptor transactionInterceptor = createTransactionInterceptor();\n  if (transactionInterceptor != null) {\n    interceptors.add(transactionInterceptor);\n  }\n\n  if (commandContextFactory != null) {\n    interceptors.add(new CommandContextInterceptor(commandContextFactory, this));\n  }\n\n  if (transactionContextFactory != null) {\n    interceptors.add(new TransactionContextInterceptor(transactionContextFactory));\n  }\n\n  return interceptors;\n}\n```\n\n<br />activiti默认添加三个拦截器及 日志拦截器、commandContext拦截器、事物拦截器。<br />再来看`initCommandExecutor`<br />\n\n```java\npublic void initCommandExecutor() {\n  if (commandExecutor == null) {\n    CommandInterceptor first = initInterceptorChain(commandInterceptors);\n    commandExecutor = new CommandExecutorImpl(getDefaultCommandConfig(), first);\n  }\n}\n```\n\n<br />这个方法把之间的所有链的节点穿起来。形成了一个职责链,首节点为`first`。<br />然后初始化了`commandExecutor`<br />那么这个执行器是如何初始化到service里<br />\n\n```java\npublic void initService(Object service) {\n  if (service instanceof ServiceImpl) {\n    ((ServiceImpl) service).setCommandExecutor(commandExecutor);\n  }\n}\n```\n\n\n<a name=\"03edb3c8\"></a>\n## Service调用\n\n<br />下面就来说一下Service调用。<br />以删除任务的`deleteTask`为例<br />\n\n```java\n@Override\npublic void deleteTask(String taskId, String deleteReason) {\n  commandExecutor.execute(new DeleteTaskCmd(taskId, deleteReason, false));\n}\n```\n\n<br />这里使用命令执行期执行Cmd。<br />看下命令执行器内部的实现，其实就是调用了职责链去执行这个Cmd，代码如下。<br />\n\n```java\n@Override\npublic <T> T execute(Command<T> command) {\n  return execute(defaultConfig, command);\n}\n\n@Override\npublic <T> T execute(CommandConfig config, Command<T> command) {\n  return first.execute(config, command);\n}\n```\n\n<br />上文我们说了，整个拦截器职责链的最后一环是`commandInvoker`,那么来看一下这个的实现<br />\n\n```java\n@Override\n@SuppressWarnings(\"unchecked\")\npublic <T> T execute(final CommandConfig config, final Command<T> command) {\n  final CommandContext commandContext = Context.getCommandContext();\n\n  // Execute the command.\n  // This will produce operations that will be put on the agenda.\n  commandContext.getAgenda().planOperation(new Runnable() {\n    @Override\n    public void run() {\n      commandContext.setResult(command.execute(commandContext));\n    }\n  });\n\n  // Run loop for agenda\n  executeOperations(commandContext);\n\n  // At the end, call the execution tree change listeners.\n  // TODO: optimization: only do this when the tree has actually changed (ie check dbSqlSession).\n  if (commandContext.hasInvolvedExecutions()) {\n    Context.getAgenda().planExecuteInactiveBehaviorsOperation();\n    executeOperations(commandContext);\n  }\n\n  return (T) commandContext.getResult();\n}\n```\n\n<br />也就是说实际上是在commandInvoker中调用Cmd的execute方法来执行的操作。<br />再来看一下Cmd中的execute<br />\n\n```java\npublic Void execute(CommandContext commandContext) {\n  if (taskId != null) {\n    deleteTask(commandContext, taskId);\n  } else if (taskIds != null) {\n    for (String taskId : taskIds) {\n      deleteTask(commandContext, taskId);\n    }\n  } else {\n    throw new ActivitiIllegalArgumentException(\"taskId and taskIds are null\");\n  }\n\n  return null;\n}\n```\n\n<br />看一下deleteTask的实现，然后依次往里面找。<br />\n\n```java\n@Override\npublic void deleteTask(TaskEntity task, String deleteReason, boolean cascade, boolean cancel) {\n  if (!task.isDeleted()) {\n    getProcessEngineConfiguration().getListenerNotificationHelper()\n      .executeTaskListeners(task, TaskListener.EVENTNAME_DELETE);\n    task.setDeleted(true);\n\n    String taskId = task.getId();\n\n    // 删除子任务\n    List<Task> subTasks = findTasksByParentTaskId(taskId);\n    for (Task subTask : subTasks) {\n      deleteTask((TaskEntity) subTask, deleteReason, cascade, cancel);\n    }\n\n    // 删除标示和变量\n    getIdentityLinkEntityManager().deleteIdentityLinksByTaskId(taskId);\n    getVariableInstanceEntityManager().deleteVariableInstanceByTask(task);\n\n    // 按需清理历史表\n    if (cascade) {\n      getHistoricTaskInstanceEntityManager().delete(taskId);\n    } else {\n      getHistoryManager().recordTaskEnd(taskId, deleteReason);\n    }\n\n    delete(task, false);\n\n    // 发送删除事件\n    if (getEventDispatcher().isEnabled()) {\n      if (cancel && !task.isCanceled()) {\n        task.setCanceled(true);\n                getEventDispatcher().dispatchEvent(\n                        ActivitiEventBuilder.createActivityCancelledEvent(task.getExecution() != null ? task.getExecution().getActivityId() : null,\n                                task.getName(),\n                                //temporary fix for standalone tasks\n                                task.getExecutionId() != null ? task.getExecutionId() : task.getId(),\n                                task.getProcessInstanceId(),\n                                task.getProcessDefinitionId(),\n                                \"userTask\",\n                                deleteReason));\n      }\n      getEventDispatcher().dispatchEvent(ActivitiEventBuilder.createEntityEvent(ActivitiEventType.ENTITY_DELETED, task));\n    }\n  }\n}\n```\n\n<br />这个方法里面其实还是做了很多事情的。包括activiti的分表机制，和事件机制。这些机制后面的文章再讨论。<br />再往下找就是mybatis层了。至此从activiti的service层到db层的调用链路分析完毕了。从整体层面上来看，activiti的这种架构方式十分有利于代码的可读性，还是十分有学习的意义。\n",
    "body_html": "<!doctype html><div class=\"lake-content-editor-core lake-engine lake-typography-classic\" data-lake-element=\"root\" data-selection-undefined=\"%7B%22path%22%3A%5B%5B63%2C0%2C98%5D%2C%5B63%2C0%2C98%5D%5D%2C%22active%22%3Atrue%7D\"><h2 id=\"7f1b21a5\" data-lake-id=\"5f102d44034d714fc88398f173b91f1d\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">概要</h2><p data-lake-id=\"d5e634953d6330a13888600f0fe1b37f\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"2721b55ad2d5af8c72829bfe00875f61\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">Activiti采用命令和指责链作为基础的开发模式。各Service中定义的方法都有相对应的命令对象Cmd。Service把各种请求委托给Cmd。而一个Cmd执行的过程中需要进行一些外围的处理，这些处理过程是一个职责链。</p><p data-lake-id=\"2e40bee10ceab7531d0dba74d624232a\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h2 id=\"2cb472ff\" data-lake-id=\"c849d00a3e4886c750506c0946f13ee2\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">初始化</h2><p data-lake-id=\"c316184b1bfb132a6343a5fa383b0031\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"b0f00eb3da9616ced1c18f63c0a83eb1\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">从流程引擎的配置实现类<code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">ProcessEngineConfigurationImpl</code>为入口进入。init方法</p><p data-lake-id=\"029b16d3f577bb3fdd2e342005af970a\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"49e62e2e\" data-language=\"java\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">public</span> <span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">void</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">init</span>() {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// ...</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">initCommandExecutors</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// ...</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div><p data-lake-id=\"97e9e6ee8419debec3fdf1c408a002b0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"cd4412306a1db6ba208f1686f07dc5c2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">initCommandExecutors</code>中会出事一些配置，比较重要的是最后两个。</p><p data-lake-id=\"f100b5ac7997022fce0191d06e362d88\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"5fe695c9\" data-language=\"java\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">public</span> <span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">void</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">initCommandExecutors</span>() {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">initDefaultCommandConfig</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">initSchemaCommandConfig</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">initCommandInvoker</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// 初始化命令拦截器</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">initCommandInterceptors</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// 初始化命令执行器</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">initCommandExecutor</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div><p data-lake-id=\"d459e7239a1d58c7cb70fec490f98468\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"1e2c3e21b4755618607c39a0c97143b6\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">首先来看<code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">initCommandInterceptors</code></p><p data-lake-id=\"2a721cadee287e620ad8f2b3e7ee7a02\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"87ebbf74\" data-language=\"java\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">public</span> <span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">void</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">initCommandInterceptors</span>() {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">if</span> (<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">commandInterceptors</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">==</span> <span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">null</span>) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">commandInterceptors</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">new</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ArrayList</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">CommandInterceptor</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">if</span> (<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">customPreCommandInterceptors</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">!=</span> <span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">null</span>) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">commandInterceptors</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">addAll</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">customPreCommandInterceptors</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">commandInterceptors</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">addAll</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getDefaultCommandInterceptors</span>());\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">if</span> (<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">customPostCommandInterceptors</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">!=</span> <span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">null</span>) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">commandInterceptors</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">addAll</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">customPostCommandInterceptors</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">commandInterceptors</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">add</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">commandInvoker</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div><p data-lake-id=\"208a9640c90aec982caf219883f3f803\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"f64375c43e4e95a6a8e68e60f9b848d8\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">可以看到这个方法主要做了四个事情。</p><p data-lake-id=\"06e26b5753d5c64bf30632972a070c36\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><ol start=\"1\" data-lake-id=\"830c6a30fd67f1631e8c281e3ce21f9d\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"c7279cf38a8a6ec32725fac916a35fb4\">如果定制了前置拦截器则加入。</li><li data-lake-id=\"1bbb9793291210c1c15db67af9a8af77\">添加activiti默认的拦截器。</li><li data-lake-id=\"0f3a939e99c0e08c58100321880238e9\">如果定制后置拦截器则加入。</li><li data-lake-id=\"3b070371c7705c16aa5a0c82d1bf55d7\">把命令执行期添加在链条的最后一环。</li></ol><p data-lake-id=\"27e276f417b63af45aac614d825c4b3f\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"0a2a9fe252d1b1eb24b5377ac078a8f5\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">来看一下Activiti的默认拦截器</p><p data-lake-id=\"f406cdcc260a1210d26e523fa76eb7af\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"26352075\" data-language=\"java\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">public</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Collection</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;?</span> <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">extends</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">CommandInterceptor</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getDefaultCommandInterceptors</span>() {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">List</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">CommandInterceptor</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">interceptors</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">new</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ArrayList</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">CommandInterceptor</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">interceptors</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">add</span>(<span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">new</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">LogInterceptor</span>());\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">CommandInterceptor</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">transactionInterceptor</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">createTransactionInterceptor</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">if</span> (<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">transactionInterceptor</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">!=</span> <span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">null</span>) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">interceptors</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">add</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">transactionInterceptor</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">if</span> (<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">commandContextFactory</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">!=</span> <span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">null</span>) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">interceptors</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">add</span>(<span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">new</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">CommandContextInterceptor</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">commandContextFactory</span>, <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">this</span>));\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">if</span> (<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">transactionContextFactory</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">!=</span> <span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">null</span>) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">interceptors</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">add</span>(<span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">new</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">TransactionContextInterceptor</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">transactionContextFactory</span>));\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">return</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">interceptors</span>;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div><p data-lake-id=\"127fb60f8e00c80ca2612080a6f2c768\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"f3dffcb025c35adc9e3245e29c9e6ef7\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">activiti默认添加三个拦截器及 日志拦截器、commandContext拦截器、事物拦截器。</p><p data-lake-id=\"0fe6dce8d2222c081b846a89bd05523b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">再来看<code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">initCommandExecutor</code></p><p data-lake-id=\"40d0f744d970240e41c26ea6d4ad0a0b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"fe4dc418\" data-language=\"java\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">public</span> <span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">void</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">initCommandExecutor</span>() {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">if</span> (<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">commandExecutor</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">==</span> <span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">null</span>) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">CommandInterceptor</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">first</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">initInterceptorChain</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">commandInterceptors</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">commandExecutor</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">new</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">CommandExecutorImpl</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getDefaultCommandConfig</span>(), <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">first</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div><p data-lake-id=\"363482d4cb5a273fd7e6ad649d175398\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"12634ec64c12a1ebceca545670958b03\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">这个方法把之间的所有链的节点穿起来。形成了一个职责链,首节点为<code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">first</code>。</p><p data-lake-id=\"cf712c0e495edb88cb2f5718c8302c1b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">然后初始化了<code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">commandExecutor</code></p><p data-lake-id=\"4edceb7411e6986715c3a03d939f0d88\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">那么这个执行器是如何初始化到service里</p><p data-lake-id=\"1fc018b9794b0187aefefc2e70344684\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"5b1ce213\" data-language=\"java\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">public</span> <span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">void</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">initService</span>(<span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Object</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">service</span>) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">if</span> (<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">service</span> <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">instanceof</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ServiceImpl</span>) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    ((<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ServiceImpl</span>) <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">service</span>).<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">setCommandExecutor</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">commandExecutor</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div><p data-lake-id=\"6da4b4c3486ca52178592d0cf73aaa1f\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h2 id=\"03edb3c8\" data-lake-id=\"a343dcb0e13a99c8fa3c367adaaf70da\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">Service调用</h2><p data-lake-id=\"03d0d6d829e8a3cf313d33b795d2845e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"fc3da994ad67d828578516dd813392e1\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">下面就来说一下Service调用。</p><p data-lake-id=\"c1f844b6b64ee4de0414b3a4d72e1447\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">以删除任务的<code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">deleteTask</code>为例</p><p data-lake-id=\"e81fd35d848da7cc616d95073861ec0c\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"552f39c2\" data-language=\"java\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-meta\" style=\"color: rgb(31, 127, 154); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">@Override</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">public</span> <span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">void</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">deleteTask</span>(<span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">String</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">taskId</span>, <span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">String</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">deleteReason</span>) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">commandExecutor</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">execute</span>(<span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">new</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">DeleteTaskCmd</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">taskId</span>, <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">deleteReason</span>, <span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">false</span>));\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div><p data-lake-id=\"86bf1911f746bf8c344502c9f7a31470\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"606a5954c057cf96edce8613d8dab08d\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">这里使用命令执行期执行Cmd。</p><p data-lake-id=\"862ff04fe5058820519dfdff113e452f\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">看下命令执行器内部的实现，其实就是调用了职责链去执行这个Cmd，代码如下。</p><p data-lake-id=\"16bec92550316e944edd9296ec31ed55\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"1fbd5436\" data-language=\"java\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-meta\" style=\"color: rgb(31, 127, 154); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">@Override</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">public</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">T</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">T</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">execute</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Command</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">T</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">command</span>) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">return</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">execute</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">defaultConfig</span>, <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">command</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-meta\" style=\"color: rgb(31, 127, 154); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">@Override</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">public</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">T</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">T</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">execute</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">CommandConfig</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">config</span>, <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Command</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">T</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">command</span>) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">return</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">first</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">execute</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">config</span>, <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">command</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div><p data-lake-id=\"777b971fc541b9941ebd957add687781\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"bb9942032d6bebb6a64ff7b63b9e6ad4\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">上文我们说了，整个拦截器职责链的最后一环是<code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">commandInvoker</code>,那么来看一下这个的实现</p><p data-lake-id=\"9f980e77c05869941ca8dd1c830d33e1\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"6a13f315\" data-language=\"java\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-meta\" style=\"color: rgb(31, 127, 154); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">@Override</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-meta\" style=\"color: rgb(31, 127, 154); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">@SuppressWarnings</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"unchecked\"</span>)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">public</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">T</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">T</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">execute</span>(<span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">final</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">CommandConfig</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">config</span>, <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">final</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Command</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">T</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">command</span>) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">final</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">CommandContext</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">commandContext</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Context</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getCommandContext</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// Execute the command.</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// This will produce operations that will be put on the agenda.</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">commandContext</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getAgenda</span>().<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">planOperation</span>(<span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">new</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Runnable</span>() {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-meta\" style=\"color: rgb(31, 127, 154); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">@Override</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">public</span> <span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">void</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">run</span>() {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">commandContext</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">setResult</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">command</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">execute</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">commandContext</span>));\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  });\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// Run loop for agenda</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">executeOperations</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">commandContext</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// At the end, call the execution tree change listeners.</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// TODO: optimization: only do this when the tree has actually changed (ie check dbSqlSession).</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">if</span> (<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">commandContext</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">hasInvolvedExecutions</span>()) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Context</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getAgenda</span>().<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">planExecuteInactiveBehaviorsOperation</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">executeOperations</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">commandContext</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">return</span> (<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">T</span>) <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">commandContext</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getResult</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div><p data-lake-id=\"4ca1dee7e2783ae9fe93ad2f5f8441e9\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"ea442995535f80bb28de8e7314cb2f55\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">也就是说实际上是在commandInvoker中调用Cmd的execute方法来执行的操作。</p><p data-lake-id=\"0d697dd8e9e46b80b487d85622c08462\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">再来看一下Cmd中的execute</p><p data-lake-id=\"2f8b9614cfd7951c7a8ce4ee112967e0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"c432ed4b\" data-language=\"java\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">public</span> <span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Void</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">execute</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">CommandContext</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">commandContext</span>) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">if</span> (<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">taskId</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">!=</span> <span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">null</span>) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">deleteTask</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">commandContext</span>, <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">taskId</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  } <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">else</span> <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">if</span> (<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">taskIds</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">!=</span> <span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">null</span>) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">for</span> (<span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">String</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">taskId</span> : <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">taskIds</span>) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">deleteTask</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">commandContext</span>, <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">taskId</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  } <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">else</span> {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">throw</span> <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">new</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ActivitiIllegalArgumentException</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"taskId and taskIds are null\"</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">return</span> <span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">null</span>;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div><p data-lake-id=\"7a9df53d8ecea2e39a69e5557677705f\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"d830767751fd363218719ebcb08b58b6\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">看一下deleteTask的实现，然后依次往里面找。</p><p data-lake-id=\"3680c8e24da8e283090e6f0cbd1bd7d6\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"54c9e0f6\" data-language=\"java\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-meta\" style=\"color: rgb(31, 127, 154); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">@Override</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">public</span> <span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">void</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">deleteTask</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">TaskEntity</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">task</span>, <span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">String</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">deleteReason</span>, <span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">boolean</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">cascade</span>, <span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">boolean</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">cancel</span>) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">if</span> (<span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">!</span><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">task</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">isDeleted</span>()) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getProcessEngineConfiguration</span>().<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getListenerNotificationHelper</span>()\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      .<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">executeTaskListeners</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">task</span>, <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">TaskListener</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">EVENTNAME_DELETE</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">task</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">setDeleted</span>(<span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">true</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-type\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">String</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">taskId</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">task</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getId</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// 删除子任务</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">List</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Task</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">subTasks</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">findTasksByParentTaskId</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">taskId</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">for</span> (<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Task</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">subTask</span> : <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">subTasks</span>) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">deleteTask</span>((<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">TaskEntity</span>) <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">subTask</span>, <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">deleteReason</span>, <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">cascade</span>, <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">cancel</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// 删除标示和变量</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getIdentityLinkEntityManager</span>().<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">deleteIdentityLinksByTaskId</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">taskId</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getVariableInstanceEntityManager</span>().<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">deleteVariableInstanceByTask</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">task</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// 按需清理历史表</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">if</span> (<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">cascade</span>) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getHistoricTaskInstanceEntityManager</span>().<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">delete</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">taskId</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    } <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">else</span> {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getHistoryManager</span>().<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">recordTaskEnd</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">taskId</span>, <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">deleteReason</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">delete</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">task</span>, <span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">false</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// 发送删除事件</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">if</span> (<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getEventDispatcher</span>().<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">isEnabled</span>()) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">if</span> (<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">cancel</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&amp;&amp;</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">!</span><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">task</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">isCanceled</span>()) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">task</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">setCanceled</span>(<span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">true</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">                <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getEventDispatcher</span>().<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">dispatchEvent</span>(\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">                        <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ActivitiEventBuilder</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">createActivityCancelledEvent</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">task</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getExecution</span>() <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">!=</span> <span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">null</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">?</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">task</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getExecution</span>().<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getActivityId</span>() : <span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">null</span>,\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">                                <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">task</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getName</span>(),\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">                                <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">//temporary fix for standalone tasks</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">                                <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">task</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getExecutionId</span>() <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">!=</span> <span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">null</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">?</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">task</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getExecutionId</span>() : <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">task</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getId</span>(),\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">                                <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">task</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getProcessInstanceId</span>(),\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">                                <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">task</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getProcessDefinitionId</span>(),\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">                                <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"userTask\"</span>,\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">                                <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">deleteReason</span>));\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getEventDispatcher</span>().<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">dispatchEvent</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ActivitiEventBuilder</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">createEntityEvent</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ActivitiEventType</span>.<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ENTITY_DELETED</span>, <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">task</span>));\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div><p data-lake-id=\"f4928ad364911b1188a3030d5d362109\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"f9d957d63db0eda71d18ee14eac87dd2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">这个方法里面其实还是做了很多事情的。包括activiti的分表机制，和事件机制。这些机制后面的文章再讨论。</p><p data-lake-id=\"b6f147c333eed732a28f559098543159\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">再往下找就是mybatis层了。至此从activiti的service层到db层的调用链路分析完毕了。从整体层面上来看，activiti的这种架构方式十分有利于代码的可读性，还是十分有学习的意义。</p></div>",
    "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"adapt\" /><meta name=\"typography\" content=\"classic\" /><h2 id=\"7f1b21a5\" data-lake-id=\"5f102d44034d714fc88398f173b91f1d\">概要</h2><p data-lake-id=\"d5e634953d6330a13888600f0fe1b37f\"><br /></p><p data-lake-id=\"2721b55ad2d5af8c72829bfe00875f61\">Activiti采用命令和指责链作为基础的开发模式。各Service中定义的方法都有相对应的命令对象Cmd。Service把各种请求委托给Cmd。而一个Cmd执行的过程中需要进行一些外围的处理，这些处理过程是一个职责链。</p><p data-lake-id=\"2e40bee10ceab7531d0dba74d624232a\"><br /></p><h2 id=\"2cb472ff\" data-lake-id=\"c849d00a3e4886c750506c0946f13ee2\">初始化</h2><p data-lake-id=\"c316184b1bfb132a6343a5fa383b0031\"><br /></p><p data-lake-id=\"b0f00eb3da9616ced1c18f63c0a83eb1\">从流程引擎的配置实现类<code>ProcessEngineConfigurationImpl</code>为入口进入。init方法</p><p data-lake-id=\"029b16d3f577bb3fdd2e342005af970a\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%2249e62e2e%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22public%20void%20init()%20%7B%5Cn%20%20%2F%2F%20...%5Cn%5Cn%20%20initCommandExecutors()%3B%5Cn%5Cn%20%20%2F%2F%20...%5Cn%7D%22%7D\"></card><p data-lake-id=\"97e9e6ee8419debec3fdf1c408a002b0\"><br /></p><p data-lake-id=\"cd4412306a1db6ba208f1686f07dc5c2\"><code>initCommandExecutors</code>中会出事一些配置，比较重要的是最后两个。</p><p data-lake-id=\"f100b5ac7997022fce0191d06e362d88\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%225fe695c9%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22public%20void%20initCommandExecutors()%20%7B%5Cn%20%20initDefaultCommandConfig()%3B%5Cn%20%20initSchemaCommandConfig()%3B%5Cn%20%20initCommandInvoker()%3B%5Cn%20%20%2F%2F%20%E5%88%9D%E5%A7%8B%E5%8C%96%E5%91%BD%E4%BB%A4%E6%8B%A6%E6%88%AA%E5%99%A8%5Cn%20%20initCommandInterceptors()%3B%5Cn%20%20%2F%2F%20%E5%88%9D%E5%A7%8B%E5%8C%96%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E5%99%A8%5Cn%20%20initCommandExecutor()%3B%5Cn%7D%22%7D\"></card><p data-lake-id=\"d459e7239a1d58c7cb70fec490f98468\"><br /></p><p data-lake-id=\"1e2c3e21b4755618607c39a0c97143b6\">首先来看<code>initCommandInterceptors</code></p><p data-lake-id=\"2a721cadee287e620ad8f2b3e7ee7a02\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%2287ebbf74%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22public%20void%20initCommandInterceptors()%20%7B%5Cn%20%20if%20(commandInterceptors%20%3D%3D%20null)%20%7B%5Cn%20%20%20%20commandInterceptors%20%3D%20new%20ArrayList%3CCommandInterceptor%3E()%3B%5Cn%20%20%20%20if%20(customPreCommandInterceptors%20!%3D%20null)%20%7B%5Cn%20%20%20%20%20%20commandInterceptors.addAll(customPreCommandInterceptors)%3B%5Cn%20%20%20%20%7D%5Cn%20%20%20%20commandInterceptors.addAll(getDefaultCommandInterceptors())%3B%5Cn%20%20%20%20if%20(customPostCommandInterceptors%20!%3D%20null)%20%7B%5Cn%20%20%20%20%20%20commandInterceptors.addAll(customPostCommandInterceptors)%3B%5Cn%20%20%20%20%7D%5Cn%20%20%20%20commandInterceptors.add(commandInvoker)%3B%5Cn%20%20%7D%5Cn%7D%22%7D\"></card><p data-lake-id=\"208a9640c90aec982caf219883f3f803\"><br /></p><p data-lake-id=\"f64375c43e4e95a6a8e68e60f9b848d8\">可以看到这个方法主要做了四个事情。</p><p data-lake-id=\"06e26b5753d5c64bf30632972a070c36\"><br /></p><ol start=\"1\" data-lake-id=\"830c6a30fd67f1631e8c281e3ce21f9d\"><li data-lake-id=\"c7279cf38a8a6ec32725fac916a35fb4\">如果定制了前置拦截器则加入。</li><li data-lake-id=\"1bbb9793291210c1c15db67af9a8af77\">添加activiti默认的拦截器。</li><li data-lake-id=\"0f3a939e99c0e08c58100321880238e9\">如果定制后置拦截器则加入。</li><li data-lake-id=\"3b070371c7705c16aa5a0c82d1bf55d7\">把命令执行期添加在链条的最后一环。</li></ol><p data-lake-id=\"27e276f417b63af45aac614d825c4b3f\"><br /></p><p data-lake-id=\"0a2a9fe252d1b1eb24b5377ac078a8f5\">来看一下Activiti的默认拦截器</p><p data-lake-id=\"f406cdcc260a1210d26e523fa76eb7af\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%2226352075%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22public%20Collection%3C%3F%20extends%20CommandInterceptor%3E%20getDefaultCommandInterceptors()%20%7B%5Cn%20%20List%3CCommandInterceptor%3E%20interceptors%20%3D%20new%20ArrayList%3CCommandInterceptor%3E()%3B%5Cn%20%20interceptors.add(new%20LogInterceptor())%3B%5Cn%5Cn%20%20CommandInterceptor%20transactionInterceptor%20%3D%20createTransactionInterceptor()%3B%5Cn%20%20if%20(transactionInterceptor%20!%3D%20null)%20%7B%5Cn%20%20%20%20interceptors.add(transactionInterceptor)%3B%5Cn%20%20%7D%5Cn%5Cn%20%20if%20(commandContextFactory%20!%3D%20null)%20%7B%5Cn%20%20%20%20interceptors.add(new%20CommandContextInterceptor(commandContextFactory%2C%20this))%3B%5Cn%20%20%7D%5Cn%5Cn%20%20if%20(transactionContextFactory%20!%3D%20null)%20%7B%5Cn%20%20%20%20interceptors.add(new%20TransactionContextInterceptor(transactionContextFactory))%3B%5Cn%20%20%7D%5Cn%5Cn%20%20return%20interceptors%3B%5Cn%7D%22%7D\"></card><p data-lake-id=\"127fb60f8e00c80ca2612080a6f2c768\"><br /></p><p data-lake-id=\"f3dffcb025c35adc9e3245e29c9e6ef7\">activiti默认添加三个拦截器及 日志拦截器、commandContext拦截器、事物拦截器。</p><p data-lake-id=\"0fe6dce8d2222c081b846a89bd05523b\">再来看<code>initCommandExecutor</code></p><p data-lake-id=\"40d0f744d970240e41c26ea6d4ad0a0b\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22fe4dc418%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22public%20void%20initCommandExecutor()%20%7B%5Cn%20%20if%20(commandExecutor%20%3D%3D%20null)%20%7B%5Cn%20%20%20%20CommandInterceptor%20first%20%3D%20initInterceptorChain(commandInterceptors)%3B%5Cn%20%20%20%20commandExecutor%20%3D%20new%20CommandExecutorImpl(getDefaultCommandConfig()%2C%20first)%3B%5Cn%20%20%7D%5Cn%7D%22%7D\"></card><p data-lake-id=\"363482d4cb5a273fd7e6ad649d175398\"><br /></p><p data-lake-id=\"12634ec64c12a1ebceca545670958b03\">这个方法把之间的所有链的节点穿起来。形成了一个职责链,首节点为<code>first</code>。</p><p data-lake-id=\"cf712c0e495edb88cb2f5718c8302c1b\">然后初始化了<code>commandExecutor</code></p><p data-lake-id=\"4edceb7411e6986715c3a03d939f0d88\">那么这个执行器是如何初始化到service里</p><p data-lake-id=\"1fc018b9794b0187aefefc2e70344684\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%225b1ce213%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22public%20void%20initService(Object%20service)%20%7B%5Cn%20%20if%20(service%20instanceof%20ServiceImpl)%20%7B%5Cn%20%20%20%20((ServiceImpl)%20service).setCommandExecutor(commandExecutor)%3B%5Cn%20%20%7D%5Cn%7D%22%7D\"></card><p data-lake-id=\"6da4b4c3486ca52178592d0cf73aaa1f\"><br /></p><h2 id=\"03edb3c8\" data-lake-id=\"a343dcb0e13a99c8fa3c367adaaf70da\">Service调用</h2><p data-lake-id=\"03d0d6d829e8a3cf313d33b795d2845e\"><br /></p><p data-lake-id=\"fc3da994ad67d828578516dd813392e1\">下面就来说一下Service调用。</p><p data-lake-id=\"c1f844b6b64ee4de0414b3a4d72e1447\">以删除任务的<code>deleteTask</code>为例</p><p data-lake-id=\"e81fd35d848da7cc616d95073861ec0c\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22552f39c2%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22%40Override%5Cnpublic%20void%20deleteTask(String%20taskId%2C%20String%20deleteReason)%20%7B%5Cn%20%20commandExecutor.execute(new%20DeleteTaskCmd(taskId%2C%20deleteReason%2C%20false))%3B%5Cn%7D%22%7D\"></card><p data-lake-id=\"86bf1911f746bf8c344502c9f7a31470\"><br /></p><p data-lake-id=\"606a5954c057cf96edce8613d8dab08d\">这里使用命令执行期执行Cmd。</p><p data-lake-id=\"862ff04fe5058820519dfdff113e452f\">看下命令执行器内部的实现，其实就是调用了职责链去执行这个Cmd，代码如下。</p><p data-lake-id=\"16bec92550316e944edd9296ec31ed55\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%221fbd5436%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22%40Override%5Cnpublic%20%3CT%3E%20T%20execute(Command%3CT%3E%20command)%20%7B%5Cn%20%20return%20execute(defaultConfig%2C%20command)%3B%5Cn%7D%5Cn%5Cn%40Override%5Cnpublic%20%3CT%3E%20T%20execute(CommandConfig%20config%2C%20Command%3CT%3E%20command)%20%7B%5Cn%20%20return%20first.execute(config%2C%20command)%3B%5Cn%7D%22%7D\"></card><p data-lake-id=\"777b971fc541b9941ebd957add687781\"><br /></p><p data-lake-id=\"bb9942032d6bebb6a64ff7b63b9e6ad4\">上文我们说了，整个拦截器职责链的最后一环是<code>commandInvoker</code>,那么来看一下这个的实现</p><p data-lake-id=\"9f980e77c05869941ca8dd1c830d33e1\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%226a13f315%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22%40Override%5Cn%40SuppressWarnings(%5C%22unchecked%5C%22)%5Cnpublic%20%3CT%3E%20T%20execute(final%20CommandConfig%20config%2C%20final%20Command%3CT%3E%20command)%20%7B%5Cn%20%20final%20CommandContext%20commandContext%20%3D%20Context.getCommandContext()%3B%5Cn%5Cn%20%20%2F%2F%20Execute%20the%20command.%5Cn%20%20%2F%2F%20This%20will%20produce%20operations%20that%20will%20be%20put%20on%20the%20agenda.%5Cn%20%20commandContext.getAgenda().planOperation(new%20Runnable()%20%7B%5Cn%20%20%20%20%40Override%5Cn%20%20%20%20public%20void%20run()%20%7B%5Cn%20%20%20%20%20%20commandContext.setResult(command.execute(commandContext))%3B%5Cn%20%20%20%20%7D%5Cn%20%20%7D)%3B%5Cn%5Cn%20%20%2F%2F%20Run%20loop%20for%20agenda%5Cn%20%20executeOperations(commandContext)%3B%5Cn%5Cn%20%20%2F%2F%20At%20the%20end%2C%20call%20the%20execution%20tree%20change%20listeners.%5Cn%20%20%2F%2F%20TODO%3A%20optimization%3A%20only%20do%20this%20when%20the%20tree%20has%20actually%20changed%20(ie%20check%20dbSqlSession).%5Cn%20%20if%20(commandContext.hasInvolvedExecutions())%20%7B%5Cn%20%20%20%20Context.getAgenda().planExecuteInactiveBehaviorsOperation()%3B%5Cn%20%20%20%20executeOperations(commandContext)%3B%5Cn%20%20%7D%5Cn%5Cn%20%20return%20(T)%20commandContext.getResult()%3B%5Cn%7D%22%7D\"></card><p data-lake-id=\"4ca1dee7e2783ae9fe93ad2f5f8441e9\"><br /></p><p data-lake-id=\"ea442995535f80bb28de8e7314cb2f55\">也就是说实际上是在commandInvoker中调用Cmd的execute方法来执行的操作。</p><p data-lake-id=\"0d697dd8e9e46b80b487d85622c08462\">再来看一下Cmd中的execute</p><p data-lake-id=\"2f8b9614cfd7951c7a8ce4ee112967e0\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22c432ed4b%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22public%20Void%20execute(CommandContext%20commandContext)%20%7B%5Cn%20%20if%20(taskId%20!%3D%20null)%20%7B%5Cn%20%20%20%20deleteTask(commandContext%2C%20taskId)%3B%5Cn%20%20%7D%20else%20if%20(taskIds%20!%3D%20null)%20%7B%5Cn%20%20%20%20for%20(String%20taskId%20%3A%20taskIds)%20%7B%5Cn%20%20%20%20%20%20deleteTask(commandContext%2C%20taskId)%3B%5Cn%20%20%20%20%7D%5Cn%20%20%7D%20else%20%7B%5Cn%20%20%20%20throw%20new%20ActivitiIllegalArgumentException(%5C%22taskId%20and%20taskIds%20are%20null%5C%22)%3B%5Cn%20%20%7D%5Cn%5Cn%20%20return%20null%3B%5Cn%7D%22%7D\"></card><p data-lake-id=\"7a9df53d8ecea2e39a69e5557677705f\"><br /></p><p data-lake-id=\"d830767751fd363218719ebcb08b58b6\">看一下deleteTask的实现，然后依次往里面找。</p><p data-lake-id=\"3680c8e24da8e283090e6f0cbd1bd7d6\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%2254c9e0f6%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22%40Override%5Cnpublic%20void%20deleteTask(TaskEntity%20task%2C%20String%20deleteReason%2C%20boolean%20cascade%2C%20boolean%20cancel)%20%7B%5Cn%20%20if%20(!task.isDeleted())%20%7B%5Cn%20%20%20%20getProcessEngineConfiguration().getListenerNotificationHelper()%5Cn%20%20%20%20%20%20.executeTaskListeners(task%2C%20TaskListener.EVENTNAME_DELETE)%3B%5Cn%20%20%20%20task.setDeleted(true)%3B%5Cn%5Cn%20%20%20%20String%20taskId%20%3D%20task.getId()%3B%5Cn%5Cn%20%20%20%20%2F%2F%20%E5%88%A0%E9%99%A4%E5%AD%90%E4%BB%BB%E5%8A%A1%5Cn%20%20%20%20List%3CTask%3E%20subTasks%20%3D%20findTasksByParentTaskId(taskId)%3B%5Cn%20%20%20%20for%20(Task%20subTask%20%3A%20subTasks)%20%7B%5Cn%20%20%20%20%20%20deleteTask((TaskEntity)%20subTask%2C%20deleteReason%2C%20cascade%2C%20cancel)%3B%5Cn%20%20%20%20%7D%5Cn%5Cn%20%20%20%20%2F%2F%20%E5%88%A0%E9%99%A4%E6%A0%87%E7%A4%BA%E5%92%8C%E5%8F%98%E9%87%8F%5Cn%20%20%20%20getIdentityLinkEntityManager().deleteIdentityLinksByTaskId(taskId)%3B%5Cn%20%20%20%20getVariableInstanceEntityManager().deleteVariableInstanceByTask(task)%3B%5Cn%5Cn%20%20%20%20%2F%2F%20%E6%8C%89%E9%9C%80%E6%B8%85%E7%90%86%E5%8E%86%E5%8F%B2%E8%A1%A8%5Cn%20%20%20%20if%20(cascade)%20%7B%5Cn%20%20%20%20%20%20getHistoricTaskInstanceEntityManager().delete(taskId)%3B%5Cn%20%20%20%20%7D%20else%20%7B%5Cn%20%20%20%20%20%20getHistoryManager().recordTaskEnd(taskId%2C%20deleteReason)%3B%5Cn%20%20%20%20%7D%5Cn%5Cn%20%20%20%20delete(task%2C%20false)%3B%5Cn%5Cn%20%20%20%20%2F%2F%20%E5%8F%91%E9%80%81%E5%88%A0%E9%99%A4%E4%BA%8B%E4%BB%B6%5Cn%20%20%20%20if%20(getEventDispatcher().isEnabled())%20%7B%5Cn%20%20%20%20%20%20if%20(cancel%20%26%26%20!task.isCanceled())%20%7B%5Cn%20%20%20%20%20%20%20%20task.setCanceled(true)%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20getEventDispatcher().dispatchEvent(%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20ActivitiEventBuilder.createActivityCancelledEvent(task.getExecution()%20!%3D%20null%20%3F%20task.getExecution().getActivityId()%20%3A%20null%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20task.getName()%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2Ftemporary%20fix%20for%20standalone%20tasks%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20task.getExecutionId()%20!%3D%20null%20%3F%20task.getExecutionId()%20%3A%20task.getId()%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20task.getProcessInstanceId()%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20task.getProcessDefinitionId()%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5C%22userTask%5C%22%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20deleteReason))%3B%5Cn%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20getEventDispatcher().dispatchEvent(ActivitiEventBuilder.createEntityEvent(ActivitiEventType.ENTITY_DELETED%2C%20task))%3B%5Cn%20%20%20%20%7D%5Cn%20%20%7D%5Cn%7D%22%7D\"></card><p data-lake-id=\"f4928ad364911b1188a3030d5d362109\"><br /></p><p data-lake-id=\"f9d957d63db0eda71d18ee14eac87dd2\">这个方法里面其实还是做了很多事情的。包括activiti的分表机制，和事件机制。这些机制后面的文章再讨论。</p><p data-lake-id=\"b6f147c333eed732a28f559098543159\">再往下找就是mybatis层了。至此从activiti的service层到db层的调用链路分析完毕了。从整体层面上来看，activiti的这种架构方式十分有利于代码的可读性，还是十分有学习的意义。</p>",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"adapt\" /><meta name=\"typography\" content=\"classic\" /><h2 id=\"7f1b21a5\" data-lake-id=\"5f102d44034d714fc88398f173b91f1d\">概要</h2><p data-lake-id=\"d5e634953d6330a13888600f0fe1b37f\"><br /></p><p data-lake-id=\"2721b55ad2d5af8c72829bfe00875f61\">Activiti采用命令和指责链作为基础的开发模式。各Service中定义的方法都有相对应的命令对象Cmd。Service把各种请求委托给Cmd。而一个Cmd执行的过程中需要进行一些外围的处理，这些处理过程是一个职责链。</p><p data-lake-id=\"2e40bee10ceab7531d0dba74d624232a\"><br /></p><h2 id=\"2cb472ff\" data-lake-id=\"c849d00a3e4886c750506c0946f13ee2\">初始化</h2><p data-lake-id=\"c316184b1bfb132a6343a5fa383b0031\"><br /></p><p data-lake-id=\"b0f00eb3da9616ced1c18f63c0a83eb1\">从流程引擎的配置实现类<code>ProcessEngineConfigurationImpl</code>为入口进入。init方法</p><p data-lake-id=\"029b16d3f577bb3fdd2e342005af970a\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%2249e62e2e%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22public%20void%20init()%20%7B%5Cn%20%20%2F%2F%20...%5Cn%5Cn%20%20initCommandExecutors()%3B%5Cn%5Cn%20%20%2F%2F%20...%5Cn%7D%22%7D\"></card><p data-lake-id=\"97e9e6ee8419debec3fdf1c408a002b0\"><br /></p><p data-lake-id=\"cd4412306a1db6ba208f1686f07dc5c2\"><code>initCommandExecutors</code>中会出事一些配置，比较重要的是最后两个。</p><p data-lake-id=\"f100b5ac7997022fce0191d06e362d88\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%225fe695c9%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22public%20void%20initCommandExecutors()%20%7B%5Cn%20%20initDefaultCommandConfig()%3B%5Cn%20%20initSchemaCommandConfig()%3B%5Cn%20%20initCommandInvoker()%3B%5Cn%20%20%2F%2F%20%E5%88%9D%E5%A7%8B%E5%8C%96%E5%91%BD%E4%BB%A4%E6%8B%A6%E6%88%AA%E5%99%A8%5Cn%20%20initCommandInterceptors()%3B%5Cn%20%20%2F%2F%20%E5%88%9D%E5%A7%8B%E5%8C%96%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E5%99%A8%5Cn%20%20initCommandExecutor()%3B%5Cn%7D%22%7D\"></card><p data-lake-id=\"d459e7239a1d58c7cb70fec490f98468\"><br /></p><p data-lake-id=\"1e2c3e21b4755618607c39a0c97143b6\">首先来看<code>initCommandInterceptors</code></p><p data-lake-id=\"2a721cadee287e620ad8f2b3e7ee7a02\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%2287ebbf74%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22public%20void%20initCommandInterceptors()%20%7B%5Cn%20%20if%20(commandInterceptors%20%3D%3D%20null)%20%7B%5Cn%20%20%20%20commandInterceptors%20%3D%20new%20ArrayList%3CCommandInterceptor%3E()%3B%5Cn%20%20%20%20if%20(customPreCommandInterceptors%20!%3D%20null)%20%7B%5Cn%20%20%20%20%20%20commandInterceptors.addAll(customPreCommandInterceptors)%3B%5Cn%20%20%20%20%7D%5Cn%20%20%20%20commandInterceptors.addAll(getDefaultCommandInterceptors())%3B%5Cn%20%20%20%20if%20(customPostCommandInterceptors%20!%3D%20null)%20%7B%5Cn%20%20%20%20%20%20commandInterceptors.addAll(customPostCommandInterceptors)%3B%5Cn%20%20%20%20%7D%5Cn%20%20%20%20commandInterceptors.add(commandInvoker)%3B%5Cn%20%20%7D%5Cn%7D%22%7D\"></card><p data-lake-id=\"208a9640c90aec982caf219883f3f803\"><br /></p><p data-lake-id=\"f64375c43e4e95a6a8e68e60f9b848d8\">可以看到这个方法主要做了四个事情。</p><p data-lake-id=\"06e26b5753d5c64bf30632972a070c36\"><br /></p><ol start=\"1\" data-lake-id=\"830c6a30fd67f1631e8c281e3ce21f9d\"><li data-lake-id=\"c7279cf38a8a6ec32725fac916a35fb4\">如果定制了前置拦截器则加入。</li><li data-lake-id=\"1bbb9793291210c1c15db67af9a8af77\">添加activiti默认的拦截器。</li><li data-lake-id=\"0f3a939e99c0e08c58100321880238e9\">如果定制后置拦截器则加入。</li><li data-lake-id=\"3b070371c7705c16aa5a0c82d1bf55d7\">把命令执行期添加在链条的最后一环。</li></ol><p data-lake-id=\"27e276f417b63af45aac614d825c4b3f\"><br /></p><p data-lake-id=\"0a2a9fe252d1b1eb24b5377ac078a8f5\">来看一下Activiti的默认拦截器</p><p data-lake-id=\"f406cdcc260a1210d26e523fa76eb7af\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%2226352075%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22public%20Collection%3C%3F%20extends%20CommandInterceptor%3E%20getDefaultCommandInterceptors()%20%7B%5Cn%20%20List%3CCommandInterceptor%3E%20interceptors%20%3D%20new%20ArrayList%3CCommandInterceptor%3E()%3B%5Cn%20%20interceptors.add(new%20LogInterceptor())%3B%5Cn%5Cn%20%20CommandInterceptor%20transactionInterceptor%20%3D%20createTransactionInterceptor()%3B%5Cn%20%20if%20(transactionInterceptor%20!%3D%20null)%20%7B%5Cn%20%20%20%20interceptors.add(transactionInterceptor)%3B%5Cn%20%20%7D%5Cn%5Cn%20%20if%20(commandContextFactory%20!%3D%20null)%20%7B%5Cn%20%20%20%20interceptors.add(new%20CommandContextInterceptor(commandContextFactory%2C%20this))%3B%5Cn%20%20%7D%5Cn%5Cn%20%20if%20(transactionContextFactory%20!%3D%20null)%20%7B%5Cn%20%20%20%20interceptors.add(new%20TransactionContextInterceptor(transactionContextFactory))%3B%5Cn%20%20%7D%5Cn%5Cn%20%20return%20interceptors%3B%5Cn%7D%22%7D\"></card><p data-lake-id=\"127fb60f8e00c80ca2612080a6f2c768\"><br /></p><p data-lake-id=\"f3dffcb025c35adc9e3245e29c9e6ef7\">activiti默认添加三个拦截器及 日志拦截器、commandContext拦截器、事物拦截器。</p><p data-lake-id=\"0fe6dce8d2222c081b846a89bd05523b\">再来看<code>initCommandExecutor</code></p><p data-lake-id=\"40d0f744d970240e41c26ea6d4ad0a0b\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22fe4dc418%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22public%20void%20initCommandExecutor()%20%7B%5Cn%20%20if%20(commandExecutor%20%3D%3D%20null)%20%7B%5Cn%20%20%20%20CommandInterceptor%20first%20%3D%20initInterceptorChain(commandInterceptors)%3B%5Cn%20%20%20%20commandExecutor%20%3D%20new%20CommandExecutorImpl(getDefaultCommandConfig()%2C%20first)%3B%5Cn%20%20%7D%5Cn%7D%22%7D\"></card><p data-lake-id=\"363482d4cb5a273fd7e6ad649d175398\"><br /></p><p data-lake-id=\"12634ec64c12a1ebceca545670958b03\">这个方法把之间的所有链的节点穿起来。形成了一个职责链,首节点为<code>first</code>。</p><p data-lake-id=\"cf712c0e495edb88cb2f5718c8302c1b\">然后初始化了<code>commandExecutor</code></p><p data-lake-id=\"4edceb7411e6986715c3a03d939f0d88\">那么这个执行器是如何初始化到service里</p><p data-lake-id=\"1fc018b9794b0187aefefc2e70344684\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%225b1ce213%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22public%20void%20initService(Object%20service)%20%7B%5Cn%20%20if%20(service%20instanceof%20ServiceImpl)%20%7B%5Cn%20%20%20%20((ServiceImpl)%20service).setCommandExecutor(commandExecutor)%3B%5Cn%20%20%7D%5Cn%7D%22%7D\"></card><p data-lake-id=\"6da4b4c3486ca52178592d0cf73aaa1f\"><br /></p><h2 id=\"03edb3c8\" data-lake-id=\"a343dcb0e13a99c8fa3c367adaaf70da\">Service调用</h2><p data-lake-id=\"03d0d6d829e8a3cf313d33b795d2845e\"><br /></p><p data-lake-id=\"fc3da994ad67d828578516dd813392e1\">下面就来说一下Service调用。</p><p data-lake-id=\"c1f844b6b64ee4de0414b3a4d72e1447\">以删除任务的<code>deleteTask</code>为例</p><p data-lake-id=\"e81fd35d848da7cc616d95073861ec0c\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22552f39c2%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22%40Override%5Cnpublic%20void%20deleteTask(String%20taskId%2C%20String%20deleteReason)%20%7B%5Cn%20%20commandExecutor.execute(new%20DeleteTaskCmd(taskId%2C%20deleteReason%2C%20false))%3B%5Cn%7D%22%7D\"></card><p data-lake-id=\"86bf1911f746bf8c344502c9f7a31470\"><br /></p><p data-lake-id=\"606a5954c057cf96edce8613d8dab08d\">这里使用命令执行期执行Cmd。</p><p data-lake-id=\"862ff04fe5058820519dfdff113e452f\">看下命令执行器内部的实现，其实就是调用了职责链去执行这个Cmd，代码如下。</p><p data-lake-id=\"16bec92550316e944edd9296ec31ed55\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%221fbd5436%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22%40Override%5Cnpublic%20%3CT%3E%20T%20execute(Command%3CT%3E%20command)%20%7B%5Cn%20%20return%20execute(defaultConfig%2C%20command)%3B%5Cn%7D%5Cn%5Cn%40Override%5Cnpublic%20%3CT%3E%20T%20execute(CommandConfig%20config%2C%20Command%3CT%3E%20command)%20%7B%5Cn%20%20return%20first.execute(config%2C%20command)%3B%5Cn%7D%22%7D\"></card><p data-lake-id=\"777b971fc541b9941ebd957add687781\"><br /></p><p data-lake-id=\"bb9942032d6bebb6a64ff7b63b9e6ad4\">上文我们说了，整个拦截器职责链的最后一环是<code>commandInvoker</code>,那么来看一下这个的实现</p><p data-lake-id=\"9f980e77c05869941ca8dd1c830d33e1\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%226a13f315%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22%40Override%5Cn%40SuppressWarnings(%5C%22unchecked%5C%22)%5Cnpublic%20%3CT%3E%20T%20execute(final%20CommandConfig%20config%2C%20final%20Command%3CT%3E%20command)%20%7B%5Cn%20%20final%20CommandContext%20commandContext%20%3D%20Context.getCommandContext()%3B%5Cn%5Cn%20%20%2F%2F%20Execute%20the%20command.%5Cn%20%20%2F%2F%20This%20will%20produce%20operations%20that%20will%20be%20put%20on%20the%20agenda.%5Cn%20%20commandContext.getAgenda().planOperation(new%20Runnable()%20%7B%5Cn%20%20%20%20%40Override%5Cn%20%20%20%20public%20void%20run()%20%7B%5Cn%20%20%20%20%20%20commandContext.setResult(command.execute(commandContext))%3B%5Cn%20%20%20%20%7D%5Cn%20%20%7D)%3B%5Cn%5Cn%20%20%2F%2F%20Run%20loop%20for%20agenda%5Cn%20%20executeOperations(commandContext)%3B%5Cn%5Cn%20%20%2F%2F%20At%20the%20end%2C%20call%20the%20execution%20tree%20change%20listeners.%5Cn%20%20%2F%2F%20TODO%3A%20optimization%3A%20only%20do%20this%20when%20the%20tree%20has%20actually%20changed%20(ie%20check%20dbSqlSession).%5Cn%20%20if%20(commandContext.hasInvolvedExecutions())%20%7B%5Cn%20%20%20%20Context.getAgenda().planExecuteInactiveBehaviorsOperation()%3B%5Cn%20%20%20%20executeOperations(commandContext)%3B%5Cn%20%20%7D%5Cn%5Cn%20%20return%20(T)%20commandContext.getResult()%3B%5Cn%7D%22%7D\"></card><p data-lake-id=\"4ca1dee7e2783ae9fe93ad2f5f8441e9\"><br /></p><p data-lake-id=\"ea442995535f80bb28de8e7314cb2f55\">也就是说实际上是在commandInvoker中调用Cmd的execute方法来执行的操作。</p><p data-lake-id=\"0d697dd8e9e46b80b487d85622c08462\">再来看一下Cmd中的execute</p><p data-lake-id=\"2f8b9614cfd7951c7a8ce4ee112967e0\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22c432ed4b%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22public%20Void%20execute(CommandContext%20commandContext)%20%7B%5Cn%20%20if%20(taskId%20!%3D%20null)%20%7B%5Cn%20%20%20%20deleteTask(commandContext%2C%20taskId)%3B%5Cn%20%20%7D%20else%20if%20(taskIds%20!%3D%20null)%20%7B%5Cn%20%20%20%20for%20(String%20taskId%20%3A%20taskIds)%20%7B%5Cn%20%20%20%20%20%20deleteTask(commandContext%2C%20taskId)%3B%5Cn%20%20%20%20%7D%5Cn%20%20%7D%20else%20%7B%5Cn%20%20%20%20throw%20new%20ActivitiIllegalArgumentException(%5C%22taskId%20and%20taskIds%20are%20null%5C%22)%3B%5Cn%20%20%7D%5Cn%5Cn%20%20return%20null%3B%5Cn%7D%22%7D\"></card><p data-lake-id=\"7a9df53d8ecea2e39a69e5557677705f\"><br /></p><p data-lake-id=\"d830767751fd363218719ebcb08b58b6\">看一下deleteTask的实现，然后依次往里面找。</p><p data-lake-id=\"3680c8e24da8e283090e6f0cbd1bd7d6\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%2254c9e0f6%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22%40Override%5Cnpublic%20void%20deleteTask(TaskEntity%20task%2C%20String%20deleteReason%2C%20boolean%20cascade%2C%20boolean%20cancel)%20%7B%5Cn%20%20if%20(!task.isDeleted())%20%7B%5Cn%20%20%20%20getProcessEngineConfiguration().getListenerNotificationHelper()%5Cn%20%20%20%20%20%20.executeTaskListeners(task%2C%20TaskListener.EVENTNAME_DELETE)%3B%5Cn%20%20%20%20task.setDeleted(true)%3B%5Cn%5Cn%20%20%20%20String%20taskId%20%3D%20task.getId()%3B%5Cn%5Cn%20%20%20%20%2F%2F%20%E5%88%A0%E9%99%A4%E5%AD%90%E4%BB%BB%E5%8A%A1%5Cn%20%20%20%20List%3CTask%3E%20subTasks%20%3D%20findTasksByParentTaskId(taskId)%3B%5Cn%20%20%20%20for%20(Task%20subTask%20%3A%20subTasks)%20%7B%5Cn%20%20%20%20%20%20deleteTask((TaskEntity)%20subTask%2C%20deleteReason%2C%20cascade%2C%20cancel)%3B%5Cn%20%20%20%20%7D%5Cn%5Cn%20%20%20%20%2F%2F%20%E5%88%A0%E9%99%A4%E6%A0%87%E7%A4%BA%E5%92%8C%E5%8F%98%E9%87%8F%5Cn%20%20%20%20getIdentityLinkEntityManager().deleteIdentityLinksByTaskId(taskId)%3B%5Cn%20%20%20%20getVariableInstanceEntityManager().deleteVariableInstanceByTask(task)%3B%5Cn%5Cn%20%20%20%20%2F%2F%20%E6%8C%89%E9%9C%80%E6%B8%85%E7%90%86%E5%8E%86%E5%8F%B2%E8%A1%A8%5Cn%20%20%20%20if%20(cascade)%20%7B%5Cn%20%20%20%20%20%20getHistoricTaskInstanceEntityManager().delete(taskId)%3B%5Cn%20%20%20%20%7D%20else%20%7B%5Cn%20%20%20%20%20%20getHistoryManager().recordTaskEnd(taskId%2C%20deleteReason)%3B%5Cn%20%20%20%20%7D%5Cn%5Cn%20%20%20%20delete(task%2C%20false)%3B%5Cn%5Cn%20%20%20%20%2F%2F%20%E5%8F%91%E9%80%81%E5%88%A0%E9%99%A4%E4%BA%8B%E4%BB%B6%5Cn%20%20%20%20if%20(getEventDispatcher().isEnabled())%20%7B%5Cn%20%20%20%20%20%20if%20(cancel%20%26%26%20!task.isCanceled())%20%7B%5Cn%20%20%20%20%20%20%20%20task.setCanceled(true)%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20getEventDispatcher().dispatchEvent(%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20ActivitiEventBuilder.createActivityCancelledEvent(task.getExecution()%20!%3D%20null%20%3F%20task.getExecution().getActivityId()%20%3A%20null%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20task.getName()%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2Ftemporary%20fix%20for%20standalone%20tasks%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20task.getExecutionId()%20!%3D%20null%20%3F%20task.getExecutionId()%20%3A%20task.getId()%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20task.getProcessInstanceId()%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20task.getProcessDefinitionId()%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5C%22userTask%5C%22%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20deleteReason))%3B%5Cn%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20getEventDispatcher().dispatchEvent(ActivitiEventBuilder.createEntityEvent(ActivitiEventType.ENTITY_DELETED%2C%20task))%3B%5Cn%20%20%20%20%7D%5Cn%20%20%7D%5Cn%7D%22%7D\"></card><p data-lake-id=\"f4928ad364911b1188a3030d5d362109\"><br /></p><p data-lake-id=\"f9d957d63db0eda71d18ee14eac87dd2\">这个方法里面其实还是做了很多事情的。包括activiti的分表机制，和事件机制。这些机制后面的文章再讨论。</p><p data-lake-id=\"b6f147c333eed732a28f559098543159\">再往下找就是mybatis层了。至此从activiti的service层到db层的调用链路分析完毕了。从整体层面上来看，activiti的这种架构方式十分有利于代码的可读性，还是十分有学习的意义。</p>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2020-09-29T14:07:13.000Z",
    "deleted_at": null,
    "created_at": "2020-09-29T14:04:57.000Z",
    "updated_at": "2020-09-29T14:07:13.000Z",
    "published_at": "2020-09-29T14:07:13.000Z",
    "first_published_at": "2020-09-29T14:07:13.000Z",
    "word_count": 1363,
    "cover": null,
    "description": "概要Activiti采用命令和指责链作为基础的开发模式。各Service中定义的方法都有相对应的命令对象Cmd。Service把各种请求委托给Cmd。而一个Cmd执行的过程中需要进行一些外围的处理，这些处理过程是一个职责链。初始化从流程引擎的配置实现类ProcessEngineConfigur...",
    "custom_description": null,
    "hits": 0,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 13904332,
    "slug": "nztar0",
    "title": "Activiti7源码分析(一)-获取源码",
    "book_id": 1840429,
    "book": {
      "id": 1840429,
      "type": "Book",
      "slug": "lmikoto",
      "name": "笔记",
      "user_id": 328252,
      "description": "",
      "creator_id": 328252,
      "public": 0,
      "items_count": 15,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2020-09-29T14:16:16.754Z",
      "updated_at": "2020-09-29T14:16:16.000Z",
      "created_at": "2020-09-29T12:57:45.000Z",
      "namespace": "lmikoto/lmikoto",
      "user": {
        "id": 328252,
        "type": "User",
        "login": "lmikoto",
        "name": "lmikoto",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/328252/1578028416108-avatar/38f12fe6-da0d-471e-819c-7131fadbd750.png",
        "books_count": 1,
        "public_books_count": 0,
        "followers_count": 0,
        "following_count": 0,
        "created_at": "2019-04-25T04:31:29.000Z",
        "updated_at": "2020-09-29T12:57:45.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 328252,
    "creator": {
      "id": 328252,
      "type": "User",
      "login": "lmikoto",
      "name": "lmikoto",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/328252/1578028416108-avatar/38f12fe6-da0d-471e-819c-7131fadbd750.png",
      "books_count": 1,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2019-04-25T04:31:29.000Z",
      "updated_at": "2020-09-29T12:57:45.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "首先从github上面下载源码<br />\n\n```bash\ngit@github.com:Activiti/Activiti.git\n```\n\n<br />切换到要分析的tag<br />\n\n```bash\ngit branch my v7.1.224\n```\n\n<br />来简单的看一下activiti的项目结构<br />![55c83a90-df34-49d2-9dbc-e7fdbcdfe676.png](https://cdn.nlark.com/yuque/0/2020/png/328252/1601388229950-3c381d63-239a-4fed-8771-56d2b23d855a.png#align=left&display=inline&height=274&margin=%5Bobject%20Object%5D&name=55c83a90-df34-49d2-9dbc-e7fdbcdfe676.png&originHeight=274&originWidth=720&size=82660&status=done&style=none&width=720)<br />\n\n- activiti-api 接口定义\n- activiti-core 流程引擎核心实现\n- activiti-core-common 流程引擎公共服务\n- activiti-dependencies 该模块管理activiti的依赖关系\n- activiti-dependency-check 内置build-helper-maven-plugin插件负责在安装或部署artifact的时候，附加的安装或部署一些其他资源或文件\n- activiti-examples 该模块中有activiti的一些例子\n",
    "body_draft": "首先从github上面下载源码<br />\n\n```bash\ngit@github.com:Activiti/Activiti.git\n```\n\n<br />切换到要分析的tag<br />\n\n```bash\ngit branch my v7.1.224\n```\n\n<br />来简单的看一下activiti的项目结构<br />![55c83a90-df34-49d2-9dbc-e7fdbcdfe676.png](https://cdn.nlark.com/yuque/0/2020/png/328252/1601388229950-3c381d63-239a-4fed-8771-56d2b23d855a.png#align=left&display=inline&height=274&margin=%5Bobject%20Object%5D&name=55c83a90-df34-49d2-9dbc-e7fdbcdfe676.png&originHeight=274&originWidth=720&size=82660&status=done&style=none&width=720)<br />\n\n- activiti-api 接口定义\n- activiti-core 流程引擎核心实现\n- activiti-core-common 流程引擎公共服务\n- activiti-dependencies 该模块管理activiti的依赖关系\n- activiti-dependency-check 内置build-helper-maven-plugin插件负责在安装或部署artifact的时候，附加的安装或部署一些其他资源或文件\n- activiti-examples 该模块中有activiti的一些例子\n",
    "body_html": "<!doctype html><div class=\"lake-content-editor-core lake-engine lake-typography-classic\" data-lake-element=\"root\" data-selection-undefined=\"%7B%22path%22%3A%5B%5B9%2C0%2C0%2C2%2C0%2C1%5D%2C%5B9%2C0%2C0%2C2%2C0%2C1%5D%5D%2C%22active%22%3Atrue%7D\"><p data-lake-id=\"ee20ecf563b7cec207f9797998a16a14\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">首先从github上面下载源码</p><p data-lake-id=\"33d3389131afb74cdea6a17b9cce2cc2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"6c431751\" data-language=\"bash\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-builtin\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">git</span>@github.com:Activiti/Activiti.git</span></span></pre></div></div></div><p data-lake-id=\"6ab402124ee7119113eeb062798d4291\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"8359f11bcacd88624002f384e23d1ba2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">切换到要分析的tag</p><p data-lake-id=\"014c89a755ccb7efd13ae2b9368f4d00\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"adbaf377\" data-language=\"bash\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-builtin\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">git</span> branch my v7.1.224</span></span></pre></div></div></div><p data-lake-id=\"94a4e01c1bccb7235c6825d3e869de2d\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"d553044483363c8fd00c261a8157de31\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">来简单的看一下activiti的项目结构</p><p data-lake-id=\"68855f2265bac8c69f86bc01dcb79fb3\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" class=\"lake-card-margin-top lake-card-margin-bottom\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/328252/1601388229950-3c381d63-239a-4fed-8771-56d2b23d855a.png\" data-raw-src=\"\" class=\"image lake-drag-image\" alt=\"55c83a90-df34-49d2-9dbc-e7fdbcdfe676.png\" title=\"55c83a90-df34-49d2-9dbc-e7fdbcdfe676.png\" data-height=\"274px\" style=\"visibility: visible; width: 720px;\"></span></p><p data-lake-id=\"2308eb00e064d661aa10422128700c4e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><ul data-lake-id=\"0cb92d466cc1cf9becee79575c79d3cf\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"e7a901283c6f8ce5dfd6fe90a8255a14\">activiti-api 接口定义</li><li data-lake-id=\"aba747800a7cc1e7f7ab688f3b4bbddf\">activiti-core 流程引擎核心实现</li><li data-lake-id=\"de43b894a2f97bdcb0e0963066816a29\">activiti-core-common 流程引擎公共服务</li><li data-lake-id=\"6f208b68649e30c471a2dacc56c1d3d4\">activiti-dependencies 该模块管理activiti的依赖关系</li><li data-lake-id=\"650f65f554249899c21dea95b3b6bd8d\">activiti-dependency-check 内置build-helper-maven-plugin插件负责在安装或部署artifact的时候，附加的安装或部署一些其他资源或文件</li><li data-lake-id=\"7247de995ceaaaf39e8d197ad5d7e516\">activiti-examples 该模块中有activiti的一些例子</li></ul></div>",
    "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"adapt\" /><meta name=\"typography\" content=\"classic\" /><p data-lake-id=\"ee20ecf563b7cec207f9797998a16a14\">首先从github上面下载源码</p><p data-lake-id=\"33d3389131afb74cdea6a17b9cce2cc2\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%226c431751%22%2C%22mode%22%3A%22bash%22%2C%22code%22%3A%22git%40github.com%3AActiviti%2FActiviti.git%22%7D\"></card><p data-lake-id=\"6ab402124ee7119113eeb062798d4291\"><br /></p><p data-lake-id=\"8359f11bcacd88624002f384e23d1ba2\">切换到要分析的tag</p><p data-lake-id=\"014c89a755ccb7efd13ae2b9368f4d00\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22adbaf377%22%2C%22mode%22%3A%22bash%22%2C%22code%22%3A%22git%20branch%20my%20v7.1.224%22%7D\"></card><p data-lake-id=\"94a4e01c1bccb7235c6825d3e869de2d\"><br /></p><p data-lake-id=\"d553044483363c8fd00c261a8157de31\">来简单的看一下activiti的项目结构</p><p data-lake-id=\"68855f2265bac8c69f86bc01dcb79fb3\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F328252%2F1601388229950-3c381d63-239a-4fed-8771-56d2b23d855a.png%22%2C%22originWidth%22%3A720%2C%22originHeight%22%3A274%2C%22name%22%3A%2255c83a90-df34-49d2-9dbc-e7fdbcdfe676.png%22%2C%22size%22%3A82660%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A109.88626%2C%22y%22%3A6.2787895%2C%22width%22%3A148.29651%2C%22height%22%3A27.915035499999995%2C%22text%22%3A%22activiti-api%22%7D%2C%7B%22x%22%3A110.3807%2C%22y%22%3A42.31619%2C%22width%22%3A170.20832000000001%2C%22height%22%3A28.452090000000005%2C%22text%22%3A%22activiti-core%22%7D%2C%7B%22x%22%3A111.027794%2C%22y%22%3A82.50776%2C%22width%22%3A292.96030599999995%2C%22height%22%3A23.402659999999997%2C%22text%22%3A%22activiti-core-common%22%7D%2C%7B%22x%22%3A110.73151%2C%22y%22%3A119.0384%2C%22width%22%3A290.73623%2C%22height%22%3A29.829020000000014%2C%22text%22%3A%22activiti-dependencies%22%7D%2C%7B%22x%22%3A108.96581%2C%22y%22%3A154.29288%2C%22width%22%3A365.20933%2C%22height%22%3A31.317170000000004%2C%22text%22%3A%22activiti-dependency-check%22%7D%2C%7B%22x%22%3A108.97144%2C%22y%22%3A196.001%2C%22width%22%3A235.51043%2C%22height%22%3A25.798509999999993%2C%22text%22%3A%22activiti-examples%22%7D%2C%7B%22x%22%3A109.751915%2C%22y%22%3A232.93364%2C%22width%22%3A218.64018500000003%2C%22height%22%3A28.545300000000026%2C%22text%22%3A%22ide-configuration%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22activiti-api%20activiti-core%20activiti-core-common%20activiti-dependencies%20activiti-dependency-check%20activiti-examples%20ide-configuration%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A720%2C%22height%22%3A274%7D\"></card></p><p data-lake-id=\"2308eb00e064d661aa10422128700c4e\"><br /></p><ul data-lake-id=\"0cb92d466cc1cf9becee79575c79d3cf\"><li data-lake-id=\"e7a901283c6f8ce5dfd6fe90a8255a14\">activiti-api 接口定义</li><li data-lake-id=\"aba747800a7cc1e7f7ab688f3b4bbddf\">activiti-core 流程引擎核心实现</li><li data-lake-id=\"de43b894a2f97bdcb0e0963066816a29\">activiti-core-common 流程引擎公共服务</li><li data-lake-id=\"6f208b68649e30c471a2dacc56c1d3d4\">activiti-dependencies 该模块管理activiti的依赖关系</li><li data-lake-id=\"650f65f554249899c21dea95b3b6bd8d\">activiti-dependency-check 内置build-helper-maven-plugin插件负责在安装或部署artifact的时候，附加的安装或部署一些其他资源或文件</li><li data-lake-id=\"7247de995ceaaaf39e8d197ad5d7e516\">activiti-examples 该模块中有activiti的一些例子</li></ul>",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"adapt\" /><meta name=\"typography\" content=\"classic\" /><p data-lake-id=\"ee20ecf563b7cec207f9797998a16a14\">首先从github上面下载源码</p><p data-lake-id=\"33d3389131afb74cdea6a17b9cce2cc2\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%226c431751%22%2C%22mode%22%3A%22bash%22%2C%22code%22%3A%22git%40github.com%3AActiviti%2FActiviti.git%22%7D\"></card><p data-lake-id=\"6ab402124ee7119113eeb062798d4291\"><br /></p><p data-lake-id=\"8359f11bcacd88624002f384e23d1ba2\">切换到要分析的tag</p><p data-lake-id=\"014c89a755ccb7efd13ae2b9368f4d00\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22adbaf377%22%2C%22mode%22%3A%22bash%22%2C%22code%22%3A%22git%20branch%20my%20v7.1.224%22%7D\"></card><p data-lake-id=\"94a4e01c1bccb7235c6825d3e869de2d\"><br /></p><p data-lake-id=\"d553044483363c8fd00c261a8157de31\">来简单的看一下activiti的项目结构</p><p data-lake-id=\"68855f2265bac8c69f86bc01dcb79fb3\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F328252%2F1601388229950-3c381d63-239a-4fed-8771-56d2b23d855a.png%22%2C%22originWidth%22%3A720%2C%22originHeight%22%3A274%2C%22name%22%3A%2255c83a90-df34-49d2-9dbc-e7fdbcdfe676.png%22%2C%22size%22%3A82660%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A109.88626%2C%22y%22%3A6.2787895%2C%22width%22%3A148.29651%2C%22height%22%3A27.915035499999995%2C%22text%22%3A%22activiti-api%22%7D%2C%7B%22x%22%3A110.3807%2C%22y%22%3A42.31619%2C%22width%22%3A170.20832000000001%2C%22height%22%3A28.452090000000005%2C%22text%22%3A%22activiti-core%22%7D%2C%7B%22x%22%3A111.027794%2C%22y%22%3A82.50776%2C%22width%22%3A292.96030599999995%2C%22height%22%3A23.402659999999997%2C%22text%22%3A%22activiti-core-common%22%7D%2C%7B%22x%22%3A110.73151%2C%22y%22%3A119.0384%2C%22width%22%3A290.73623%2C%22height%22%3A29.829020000000014%2C%22text%22%3A%22activiti-dependencies%22%7D%2C%7B%22x%22%3A108.96581%2C%22y%22%3A154.29288%2C%22width%22%3A365.20933%2C%22height%22%3A31.317170000000004%2C%22text%22%3A%22activiti-dependency-check%22%7D%2C%7B%22x%22%3A108.97144%2C%22y%22%3A196.001%2C%22width%22%3A235.51043%2C%22height%22%3A25.798509999999993%2C%22text%22%3A%22activiti-examples%22%7D%2C%7B%22x%22%3A109.751915%2C%22y%22%3A232.93364%2C%22width%22%3A218.64018500000003%2C%22height%22%3A28.545300000000026%2C%22text%22%3A%22ide-configuration%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22activiti-api%20activiti-core%20activiti-core-common%20activiti-dependencies%20activiti-dependency-check%20activiti-examples%20ide-configuration%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A720%2C%22height%22%3A274%7D\"></card></p><p data-lake-id=\"2308eb00e064d661aa10422128700c4e\"><br /></p><ul data-lake-id=\"0cb92d466cc1cf9becee79575c79d3cf\"><li data-lake-id=\"e7a901283c6f8ce5dfd6fe90a8255a14\">activiti-api 接口定义</li><li data-lake-id=\"aba747800a7cc1e7f7ab688f3b4bbddf\">activiti-core 流程引擎核心实现</li><li data-lake-id=\"de43b894a2f97bdcb0e0963066816a29\">activiti-core-common 流程引擎公共服务</li><li data-lake-id=\"6f208b68649e30c471a2dacc56c1d3d4\">activiti-dependencies 该模块管理activiti的依赖关系</li><li data-lake-id=\"650f65f554249899c21dea95b3b6bd8d\">activiti-dependency-check 内置build-helper-maven-plugin插件负责在安装或部署artifact的时候，附加的安装或部署一些其他资源或文件</li><li data-lake-id=\"7247de995ceaaaf39e8d197ad5d7e516\">activiti-examples 该模块中有activiti的一些例子</li></ul>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2020-09-29T14:03:52.000Z",
    "deleted_at": null,
    "created_at": "2020-09-29T14:02:30.000Z",
    "updated_at": "2020-09-29T14:03:52.000Z",
    "published_at": "2020-09-29T14:03:52.000Z",
    "first_published_at": "2020-09-29T14:03:52.000Z",
    "word_count": 120,
    "cover": "https://cdn.nlark.com/yuque/0/2020/png/328252/1601388229950-3c381d63-239a-4fed-8771-56d2b23d855a.png",
    "description": "首先从github上面下载源码git@github.com:Activiti/Activiti.git切换到要分析的taggit branch my v7.1.224来简单的看一下activiti的项目结构activiti-api 接口定义activiti-core 流程引擎核心实现activ...",
    "custom_description": null,
    "hits": 0,
    "_serializer": "v2.doc_detail"
  }
]